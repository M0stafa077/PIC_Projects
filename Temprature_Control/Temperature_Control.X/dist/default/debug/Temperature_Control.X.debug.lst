

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Jan 30 20:04:37 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    82                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    83                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    84   000000                     
    85                           ; Generated 23/03/2023 GMT
    86                           ; 
    87                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution. Publication is not required when
   101                           ;        this file is used in an embedded application.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC18F4620 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119   000000                     
   120                           	psect	idataCOMRAM
   121   0031AA                     __pidataCOMRAM:
   122                           	callstack 0
   123                           
   124                           ;initializer for _motor_2
   125   0031AA  13                 	db	19
   126   0031AB  1B                 	db	27
   127                           
   128                           ;initializer for _motor_1
   129   0031AC  03                 	db	3
   130   0031AD  0B                 	db	11
   131                           
   132                           ;initializer for _buzzer
   133   0031AE  18                 	db	24
   134                           
   135                           ;initializer for _red_led
   136   0031AF  10                 	db	16
   137                           
   138                           ;initializer for _green_led
   139   0031B0  20                 	db	32
   140                           
   141                           	psect	idataBANK0
   142   002E10                     __pidataBANK0:
   143                           	callstack 0
   144                           
   145                           ;initializer for intro_msg@F3259
   146   002E10  54                 	db	84
   147   002E11  65                 	db	101
   148   002E12  6D                 	db	109
   149   002E13  70                 	db	112
   150   002E14  65                 	db	101
   151   002E15  72                 	db	114
   152   002E16  61                 	db	97
   153   002E17  74                 	db	116
   154   002E18  75                 	db	117
   155   002E19  72                 	db	114
   156   002E1A  65                 	db	101
   157   002E1B  00                 	db	0
   158                           
   159                           ;initializer for _port_registers
   160   002E1C  80                 	db	128
   161   002E1D  0F                 	db	15
   162   002E1E  81                 	db	129
   163   002E1F  0F                 	db	15
   164   002E20  82                 	db	130
   165   002E21  0F                 	db	15
   166   002E22  83                 	db	131
   167   002E23  0F                 	db	15
   168   002E24  84                 	db	132
   169   002E25  0F                 	db	15
   170                           
   171                           ;initializer for _lat_registers
   172   002E26  89                 	db	137
   173   002E27  0F                 	db	15
   174   002E28  8A                 	db	138
   175   002E29  0F                 	db	15
   176   002E2A  8B                 	db	139
   177   002E2B  0F                 	db	15
   178   002E2C  8C                 	db	140
   179   002E2D  0F                 	db	15
   180   002E2E  8D                 	db	141
   181   002E2F  0F                 	db	15
   182                           
   183                           ;initializer for _tris_registers
   184   002E30  92                 	db	146
   185   002E31  0F                 	db	15
   186   002E32  93                 	db	147
   187   002E33  0F                 	db	15
   188   002E34  94                 	db	148
   189   002E35  0F                 	db	15
   190   002E36  95                 	db	149
   191   002E37  0F                 	db	15
   192   002E38  96                 	db	150
   193   002E39  0F                 	db	15
   194                           
   195                           ;initializer for intro_msg@F3262
   196   002E3A  43                 	db	67
   197   002E3B  6F                 	db	111
   198   002E3C  6E                 	db	110
   199   002E3D  74                 	db	116
   200   002E3E  72                 	db	114
   201   002E3F  6F                 	db	111
   202   002E40  6C                 	db	108
   203   002E41  00                 	db	0
   204                           
   205                           ;initializer for _adc
   206   002E42  68                 	db	low _adc_interrupt_handler
   207   002E43  31                 	db	high _adc_interrupt_handler
   208   002E44  01                 	db	1
   209   002E45  05                 	db	5
   210   002E46  05                 	db	5
   211   002E47  00                 	db	0
   212   002E48  02                 	db	2
   213                           
   214                           ;initializer for _lcd_4bits
   215   002E49  02                 	db	2
   216   002E4A  0A                 	db	10
   217   002E4B  12                 	db	18
   218   002E4C  1A                 	db	26
   219   002E4D  22                 	db	34
   220   002E4E  2A                 	db	42
   221   000000                     _INTCON2bits	set	4081
   222   000000                     _ADCON1bits	set	4033
   223   000000                     _ADRESL	set	4035
   224   000000                     _ADRESH	set	4036
   225   000000                     _RCONbits	set	4048
   226   000000                     _INTCONbits	set	4082
   227   000000                     _TRISD	set	3989
   228   000000                     _TRISC	set	3988
   229   000000                     _TRISB	set	3987
   230   000000                     _TRISE	set	3990
   231                           
   232                           	psect	nvCOMRAM
   233   000067                     __pnvCOMRAM:
   234                           	callstack 0
   235   000067                     _temp:
   236                           	callstack 0
   237   000067                     	ds	2
   238   000000                     _PORTBbits	set	3969
   239   000000                     _PIE1bits	set	3997
   240   000000                     _ADCON2bits	set	4032
   241   000000                     _ADCON0bits	set	4034
   242   000000                     _PORTE	set	3972
   243   000000                     _PORTD	set	3971
   244   000000                     _PORTC	set	3970
   245   000000                     _PORTB	set	3969
   246   000000                     _PORTA	set	3968
   247   000000                     _LATA	set	3977
   248   000000                     _TRISA	set	3986
   249   000000                     _INTCON3bits	set	4080
   250   000000                     _IPR1bits	set	3999
   251   000000                     _PIR1bits	set	3998
   252   000000                     _LATE	set	3981
   253   000000                     _LATD	set	3980
   254   000000                     _LATC	set	3979
   255   000000                     _LATB	set	3978
   256                           
   257                           	psect	smallconst
   258   001000                     __psmallconst:
   259                           	callstack 0
   260   001000  00                 	db	0
   261   001001                     STR_1:
   262   001001  54                 	db	84	;'T'
   263   001002  65                 	db	101	;'e'
   264   001003  6D                 	db	109	;'m'
   265   001004  70                 	db	112	;'p'
   266   001005  20                 	db	32
   267   001006  76                 	db	118	;'v'
   268   001007  61                 	db	97	;'a'
   269   001008  6C                 	db	108	;'l'
   270   001009  75                 	db	117	;'u'
   271   00100A  65                 	db	101	;'e'
   272   00100B  3A                 	db	58	;':'
   273   00100C  20                 	db	32
   274   00100D  00                 	db	0
   275   00100E                     STR_5:
   276   00100E  20                 	db	32
   277   00100F  20                 	db	32
   278   001010  20                 	db	32
   279   001011  20                 	db	32
   280   001012  20                 	db	32
   281   001013  20                 	db	32
   282   001014  20                 	db	32
   283   001015  20                 	db	32
   284   001016  20                 	db	32
   285   001017  20                 	db	32
   286   001018  20                 	db	32
   287   001019  00                 	db	0
   288   00101A                     STR_2:
   289   00101A  20                 	db	32
   290   00101B  20                 	db	32
   291   00101C  20                 	db	32
   292   00101D  4E                 	db	78	;'N'
   293   00101E  6F                 	db	111	;'o'
   294   00101F  72                 	db	114	;'r'
   295   001020  6D                 	db	109	;'m'
   296   001021  61                 	db	97	;'a'
   297   001022  6C                 	db	108	;'l'
   298   001023  20                 	db	32
   299   001024  20                 	db	32
   300   001025  00                 	db	0
   301   001026                     STR_4:
   302   001026  20                 	db	32
   303   001027  20                 	db	32
   304   001028  44                 	db	68	;'D'
   305   001029  61                 	db	97	;'a'
   306   00102A  6E                 	db	110	;'n'
   307   00102B  67                 	db	103	;'g'
   308   00102C  65                 	db	101	;'e'
   309   00102D  72                 	db	114	;'r'
   310   00102E  21                 	db	33
   311   00102F  21                 	db	33
   312   001030  20                 	db	32
   313   001031  00                 	db	0
   314   001032                     STR_3:
   315   001032  4F                 	db	79	;'O'
   316   001033  76                 	db	118	;'v'
   317   001034  65                 	db	101	;'e'
   318   001035  72                 	db	114	;'r'
   319   001036  68                 	db	104	;'h'
   320   001037  65                 	db	101	;'e'
   321   001038  61                 	db	97	;'a'
   322   001039  74                 	db	116	;'t'
   323   00103A  69                 	db	105	;'i'
   324   00103B  6E                 	db	110	;'n'
   325   00103C  67                 	db	103	;'g'
   326   00103D  00                 	db	0
   327   00103E                     STR_6:
   328   00103E  25                 	db	37
   329   00103F  69                 	db	105	;'i'
   330   001040  00                 	db	0
   331   001041  00                 	db	0	; dummy byte at the end
   332   000000                     
   333                           ; #config settings
   334                           
   335                           	psect	cinit
   336   002AA6                     __pcinit:
   337                           	callstack 0
   338   002AA6                     start_initialization:
   339                           	callstack 0
   340   002AA6                     __initialization:
   341                           	callstack 0
   342                           
   343                           ; Initialize objects allocated to BANK0 (63 bytes)
   344                           ; load TBLPTR registers with __pidataBANK0
   345   002AA6  0E10               	movlw	low __pidataBANK0
   346   002AA8  6EF6               	movwf	tblptrl,c
   347   002AAA  0E2E               	movlw	high __pidataBANK0
   348   002AAC  6EF7               	movwf	tblptrh,c
   349   002AAE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   350   002AB0  6EF8               	movwf	tblptru,c
   351   002AB2  EE00  F080         	lfsr	0,__pdataBANK0
   352   002AB6  EE10 F03F          	lfsr	1,63
   353   002ABA                     copy_data0:
   354   002ABA  0009               	tblrd		*+
   355   002ABC  CFF5 FFEE          	movff	tablat,postinc0
   356   002AC0  50E5               	movf	postdec1,w,c
   357   002AC2  50E1               	movf	fsr1l,w,c
   358   002AC4  E1FA               	bnz	copy_data0
   359                           
   360                           ; Initialize objects allocated to COMRAM (7 bytes)
   361                           ; load TBLPTR registers with __pidataCOMRAM
   362   002AC6  0EAA               	movlw	low __pidataCOMRAM
   363   002AC8  6EF6               	movwf	tblptrl,c
   364   002ACA  0E31               	movlw	high __pidataCOMRAM
   365   002ACC  6EF7               	movwf	tblptrh,c
   366   002ACE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   367   002AD0  6EF8               	movwf	tblptru,c
   368   002AD2  EE00  F060         	lfsr	0,__pdataCOMRAM
   369   002AD6  EE10 F007          	lfsr	1,7
   370   002ADA                     copy_data1:
   371   002ADA  0009               	tblrd		*+
   372   002ADC  CFF5 FFEE          	movff	tablat,postinc0
   373   002AE0  50E5               	movf	postdec1,w,c
   374   002AE2  50E1               	movf	fsr1l,w,c
   375   002AE4  E1FA               	bnz	copy_data1
   376                           
   377                           ; Clear objects allocated to BANK0 (39 bytes)
   378   002AE6  EE00  F0BF         	lfsr	0,__pbssBANK0
   379   002AEA  0E27               	movlw	39
   380   002AEC                     clear_0:
   381   002AEC  6AEE               	clrf	postinc0,c
   382   002AEE  06E8               	decf	wreg,f,c
   383   002AF0  E1FD               	bnz	clear_0
   384                           
   385                           ; Clear objects allocated to COMRAM (37 bytes)
   386   002AF2  EE00  F03B         	lfsr	0,__pbssCOMRAM
   387   002AF6  0E25               	movlw	37
   388   002AF8                     clear_1:
   389   002AF8  6AEE               	clrf	postinc0,c
   390   002AFA  06E8               	decf	wreg,f,c
   391   002AFC  E1FD               	bnz	clear_1
   392   002AFE                     end_of_initialization:
   393                           	callstack 0
   394   002AFE                     __end_of__initialization:
   395                           	callstack 0
   396   002AFE  9069               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   397   002B00  9269               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   398   002B02  0100               	movlb	0
   399   002B04  EF37  F00A         	goto	_main	;jump to C main() function
   400                           
   401                           	psect	bssCOMRAM
   402   00003B                     __pbssCOMRAM:
   403                           	callstack 0
   404   00003B                     _width:
   405                           	callstack 0
   406   00003B                     	ds	2
   407   00003D                     _prec:
   408                           	callstack 0
   409   00003D                     	ds	2
   410   00003F                     _RB7_INTERRUPT_LOW_HANDLER:
   411                           	callstack 0
   412   00003F                     	ds	2
   413   000041                     _RB7_INTERRUPT_HIGH_HANDLER:
   414                           	callstack 0
   415   000041                     	ds	2
   416   000043                     _RB6_INTERRUPT_LOW_HANDLER:
   417                           	callstack 0
   418   000043                     	ds	2
   419   000045                     _RB6_INTERRUPT_HIGH_HANDLER:
   420                           	callstack 0
   421   000045                     	ds	2
   422   000047                     _RB5_INTERRUPT_LOW_HANDLER:
   423                           	callstack 0
   424   000047                     	ds	2
   425   000049                     _RB5_INTERRUPT_HIGH_HANDLER:
   426                           	callstack 0
   427   000049                     	ds	2
   428   00004B                     _RB4_INTERRUPT_LOW_HANDLER:
   429                           	callstack 0
   430   00004B                     	ds	2
   431   00004D                     _RB4_INTERRUPT_HIGH_HANDLER:
   432                           	callstack 0
   433   00004D                     	ds	2
   434   00004F                     _INT2_INTERRUPT_HANDLER:
   435                           	callstack 0
   436   00004F                     	ds	2
   437   000051                     _INT1_INTERRUPT_HANDLER:
   438                           	callstack 0
   439   000051                     	ds	2
   440   000053                     _INT0_INTERRUPT_HANDLER:
   441                           	callstack 0
   442   000053                     	ds	2
   443   000055                     _ADC_interrupt_handler:
   444                           	callstack 0
   445   000055                     	ds	2
   446   000057                     _flags:
   447                           	callstack 0
   448   000057                     	ds	1
   449   000058                     led_STATUS@F3082:
   450                           	callstack 0
   451   000058                     	ds	1
   452   000059                     led_TOGGLE@F3076:
   453                           	callstack 0
   454   000059                     	ds	1
   455   00005A                     led_turn_OFF@F3071:
   456                           	callstack 0
   457   00005A                     	ds	1
   458   00005B                     led_turn_ON@F3066:
   459                           	callstack 0
   460   00005B                     	ds	1
   461   00005C                     led_init@F3061:
   462                           	callstack 0
   463   00005C                     	ds	1
   464   00005D                     _sys_on_flag:
   465                           	callstack 0
   466   00005D                     	ds	1
   467   00005E                     _adc_res:
   468                           	callstack 0
   469   00005E                     	ds	2
   470                           
   471                           	psect	dataCOMRAM
   472   000060                     __pdataCOMRAM:
   473                           	callstack 0
   474   000060                     _motor_2:
   475                           	callstack 0
   476   000060                     	ds	2
   477   000062                     _motor_1:
   478                           	callstack 0
   479   000062                     	ds	2
   480   000064                     _buzzer:
   481                           	callstack 0
   482   000064                     	ds	1
   483   000065                     _red_led:
   484                           	callstack 0
   485   000065                     	ds	1
   486   000066                     _green_led:
   487                           	callstack 0
   488   000066                     	ds	1
   489                           
   490                           	psect	bssBANK0
   491   0000BF                     __pbssBANK0:
   492                           	callstack 0
   493   0000BF                     _dbuf:
   494                           	callstack 0
   495   0000BF                     	ds	32
   496   0000DF                     _adc_res_txt:
   497                           	callstack 0
   498   0000DF                     	ds	7
   499                           
   500                           	psect	dataBANK0
   501   000080                     __pdataBANK0:
   502                           	callstack 0
   503   000080                     intro_msg@F3259:
   504                           	callstack 0
   505   000080                     	ds	12
   506   00008C                     _port_registers:
   507                           	callstack 0
   508   00008C                     	ds	10
   509   000096                     _lat_registers:
   510                           	callstack 0
   511   000096                     	ds	10
   512   0000A0                     _tris_registers:
   513                           	callstack 0
   514   0000A0                     	ds	10
   515   0000AA                     intro_msg@F3262:
   516                           	callstack 0
   517   0000AA                     	ds	8
   518   0000B2                     _adc:
   519                           	callstack 0
   520   0000B2                     	ds	7
   521   0000B9                     _lcd_4bits:
   522                           	callstack 0
   523   0000B9                     	ds	6
   524                           
   525                           	psect	cstackBANK0
   526   0000E6                     __pcstackBANK0:
   527                           	callstack 0
   528   0000E6                     ___flmul@sign:
   529                           	callstack 0
   530   0000E6                     sprintf@ap:
   531                           	callstack 0
   532   0000E6                     intro_msg@temp_txt:
   533                           	callstack 0
   534                           
   535                           ; 12 bytes @ 0x0
   536   0000E6                     	ds	1
   537   0000E7                     ___flmul@aexp:
   538                           	callstack 0
   539   0000E7                     sprintf@f:
   540                           	callstack 0
   541                           
   542                           ; 12 bytes @ 0x1
   543   0000E7                     	ds	1
   544   0000E8                     ___flmul@grs:
   545                           	callstack 0
   546                           
   547                           ; 4 bytes @ 0x2
   548   0000E8                     	ds	4
   549   0000EC                     ___flmul@bexp:
   550                           	callstack 0
   551                           
   552                           ; 1 bytes @ 0x6
   553   0000EC                     	ds	1
   554   0000ED                     ___flmul@prod:
   555                           	callstack 0
   556                           
   557                           ; 4 bytes @ 0x7
   558   0000ED                     	ds	4
   559   0000F1                     ___flmul@temp:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0xB
   563   0000F1                     	ds	1
   564   0000F2                     intro_msg@control_txt:
   565                           	callstack 0
   566                           
   567                           ; 8 bytes @ 0xC
   568   0000F2                     	ds	8
   569   0000FA                     intro_msg@l_counter:
   570                           	callstack 0
   571                           
   572                           ; 1 bytes @ 0x14
   573   0000FA                     	ds	1
   574   0000FB                     intro_msg@l_counter_258:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0x15
   578   0000FB                     	ds	1
   579   0000FC                     intro_msg@ret:
   580                           	callstack 0
   581                           
   582                           ; 1 bytes @ 0x16
   583   0000FC                     	ds	1
   584   0000FD                     ??_main:
   585                           
   586                           ; 1 bytes @ 0x17
   587   0000FD                     	ds	2
   588                           
   589                           	psect	cstackCOMRAM
   590   000001                     __pcstackCOMRAM:
   591                           	callstack 0
   592   000001                     RB4_ISR@mode:
   593                           	callstack 0
   594   000001                     i2ADC_get_conversion_result@_adc:
   595                           	callstack 0
   596                           
   597                           ; 1 bytes @ 0x0
   598   000001                     	ds	1
   599   000002                     i2ADC_get_conversion_result@result:
   600                           	callstack 0
   601                           
   602                           ; 1 bytes @ 0x1
   603   000002                     	ds	1
   604   000003                     ??i2_ADC_get_conversion_result:
   605                           
   606                           ; 1 bytes @ 0x2
   607   000003                     	ds	3
   608   000006                     ??_InterruptManagerHigh:
   609   000006                     
   610                           ; 1 bytes @ 0x5
   611   000006                     	ds	4
   612   00000A                     ADC_get_conversion_result@_adc:
   613                           	callstack 0
   614                           
   615                           ; 1 bytes @ 0x9
   616   00000A                     	ds	1
   617   00000B                     ADC_get_conversion_result@result:
   618                           	callstack 0
   619                           
   620                           ; 1 bytes @ 0xA
   621   00000B                     	ds	1
   622   00000C                     ??_ADC_get_conversion_result:
   623                           
   624                           ; 1 bytes @ 0xB
   625   00000C                     	ds	3
   626   00000F                     ADC_get_conversion_result@ret:
   627                           	callstack 0
   628                           
   629                           ; 1 bytes @ 0xE
   630   00000F                     	ds	1
   631   000010                     ??_InterruptManagerLow:
   632                           
   633                           ; 1 bytes @ 0xF
   634   000010                     	ds	7
   635   000017                     ?_strlen:
   636                           	callstack 0
   637   000017                     ?___awdiv:
   638                           	callstack 0
   639   000017                     ?___awmod:
   640                           	callstack 0
   641   000017                     ?___lwdiv:
   642                           	callstack 0
   643   000017                     ?___xxtofl:
   644                           	callstack 0
   645   000017                     ADC_start_conversion@_adc:
   646                           	callstack 0
   647   000017                     adc_input_channel_port_cfg@_adc:
   648                           	callstack 0
   649   000017                     adc_set_result_format@_adc:
   650                           	callstack 0
   651   000017                     adc_set_voltage_ref@_adc:
   652                           	callstack 0
   653   000017                     gpio_pin_direction_init@_pin_config:
   654                           	callstack 0
   655   000017                     gpio_pin_write_logic@_pin_config:
   656                           	callstack 0
   657   000017                     gpio_pin_toggle_logic@_pin_config:
   658                           	callstack 0
   659   000017                     memset@dest:
   660                           	callstack 0
   661   000017                     strlen@s:
   662                           	callstack 0
   663   000017                     ___awdiv@dividend:
   664                           	callstack 0
   665   000017                     ___awmod@dividend:
   666                           	callstack 0
   667   000017                     ___lwdiv@dividend:
   668                           	callstack 0
   669   000017                     fputc@c:
   670                           	callstack 0
   671   000017                     ___xxtofl@val:
   672                           	callstack 0
   673                           
   674                           ; 4 bytes @ 0x16
   675   000017                     	ds	1
   676   000018                     ??_gpio_pin_direction_init:
   677   000018                     ??_gpio_pin_toggle_logic:
   678   000018                     ??_adc_input_channel_port_cfg:
   679   000018                     ??_adc_set_result_format:
   680   000018                     ??_adc_set_voltage_ref:
   681   000018                     ADC_start_conversion@ret:
   682                           	callstack 0
   683   000018                     gpio_pin_write_logic@logic:
   684                           	callstack 0
   685   000018                     memset@c:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x17
   689   000018                     	ds	1
   690   000019                     ??_gpio_pin_write_logic:
   691   000019                     fputc@fp:
   692                           	callstack 0
   693   000019                     strlen@a:
   694                           	callstack 0
   695   000019                     ___awdiv@divisor:
   696                           	callstack 0
   697   000019                     ___awmod@divisor:
   698                           	callstack 0
   699   000019                     ___lwdiv@divisor:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x18
   703   000019                     	ds	1
   704   00001A                     ??_fputc:
   705   00001A                     ADC_init@_adc:
   706                           	callstack 0
   707   00001A                     ADC_select_channel@_adc:
   708                           	callstack 0
   709   00001A                     memset@n:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0x19
   713   00001A                     	ds	1
   714   00001B                     ??_ADC_init:
   715   00001B                     ??___xxtofl:
   716   00001B                     ADC_select_channel@channel:
   717                           	callstack 0
   718   00001B                     ___awdiv@counter:
   719                           	callstack 0
   720   00001B                     ___awmod@counter:
   721                           	callstack 0
   722   00001B                     ___lwdiv@quotient:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x1A
   726   00001B                     	ds	1
   727   00001C                     ??_ADC_select_channel:
   728   00001C                     ADC_init@ret:
   729                           	callstack 0
   730   00001C                     gpio_pin_toggle_logic@ret:
   731                           	callstack 0
   732   00001C                     ___awdiv@sign:
   733                           	callstack 0
   734   00001C                     ___awmod@sign:
   735                           	callstack 0
   736   00001C                     memset@p:
   737                           	callstack 0
   738                           
   739                           ; 1 bytes @ 0x1B
   740   00001C                     	ds	1
   741   00001D                     ?_abs:
   742                           	callstack 0
   743   00001D                     led_TOGGLE@led:
   744                           	callstack 0
   745   00001D                     ADC_select_channel@ret:
   746                           	callstack 0
   747   00001D                     gpio_pin_direction_init@ret:
   748                           	callstack 0
   749   00001D                     mcal_layer_intialize@ret:
   750                           	callstack 0
   751   00001D                     ___lwdiv@counter:
   752                           	callstack 0
   753   00001D                     ___awdiv@quotient:
   754                           	callstack 0
   755   00001D                     abs@a:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0x1C
   759   00001D                     	ds	1
   760   00001E                     ??_led_TOGGLE:
   761   00001E                     ADC_start_conversion_interrupt@_adc:
   762                           	callstack 0
   763   00001E                     gpio_pin_write_logic@ret:
   764                           	callstack 0
   765                           
   766                           ; 1 bytes @ 0x1D
   767   00001E                     	ds	1
   768   00001F                     ??_abs:
   769   00001F                     dc_motor_move_CW@_dc_motor:
   770                           	callstack 0
   771   00001F                     dc_motor_stop@_dc_motor:
   772                           	callstack 0
   773   00001F                     lcd_send_4bits@_lcd:
   774                           	callstack 0
   775   00001F                     lcd_4bit_send_enable_signal@_lcd:
   776                           	callstack 0
   777   00001F                     led_TOGGLE@ret:
   778                           	callstack 0
   779   00001F                     ADC_start_conversion_interrupt@channel:
   780                           	callstack 0
   781   00001F                     gpio_pin_initialize@_pin_config:
   782                           	callstack 0
   783   00001F                     buzzer_turn_on@_buzzer:
   784                           	callstack 0
   785   00001F                     buzzer_turn_off@_buzzer:
   786                           	callstack 0
   787   00001F                     ___xxtofl@sign:
   788                           	callstack 0
   789                           
   790                           ; 1 bytes @ 0x1E
   791   00001F                     	ds	1
   792   000020                     ??_gpio_pin_initialize:
   793   000020                     dc_motor_move_CW@ret:
   794                           	callstack 0
   795   000020                     dc_motor_stop@ret:
   796                           	callstack 0
   797   000020                     lcd_send_4bits@data_command:
   798                           	callstack 0
   799   000020                     lcd_4bit_send_enable_signal@ret:
   800                           	callstack 0
   801   000020                     led_TOGGLE@led_pin_config:
   802                           	callstack 0
   803   000020                     ADC_start_conversion_interrupt@ret:
   804                           	callstack 0
   805   000020                     buzzer_turn_on@ret:
   806                           	callstack 0
   807   000020                     buzzer_turn_off@ret:
   808                           	callstack 0
   809   000020                     ___xxtofl@exp:
   810                           	callstack 0
   811                           
   812                           ; 1 bytes @ 0x1F
   813   000020                     	ds	1
   814   000021                     lcd_send_4bits@ret_0:
   815                           	callstack 0
   816   000021                     gpio_pin_initialize@ret:
   817                           	callstack 0
   818   000021                     vfpfcnvrt@fp:
   819                           	callstack 0
   820   000021                     ___xxtofl@arg:
   821                           	callstack 0
   822                           
   823                           ; 4 bytes @ 0x20
   824   000021                     	ds	1
   825   000022                     dc_motor_init@_dc_motor:
   826                           	callstack 0
   827   000022                     lcd_send_4bits@ret_1:
   828                           	callstack 0
   829   000022                     led_init@led:
   830                           	callstack 0
   831   000022                     led_turn_ON@led:
   832                           	callstack 0
   833   000022                     led_turn_OFF@led:
   834                           	callstack 0
   835   000022                     buzzer_init@_buzzer:
   836                           	callstack 0
   837   000022                     vfpfcnvrt@fmt:
   838                           	callstack 0
   839                           
   840                           ; 1 bytes @ 0x21
   841   000022                     	ds	1
   842   000023                     ??_led_turn_ON:
   843   000023                     ??_led_turn_OFF:
   844   000023                     ??_dc_motor_init:
   845   000023                     ??_led_init:
   846   000023                     lcd_send_4bits@ret_2:
   847                           	callstack 0
   848   000023                     buzzer_init@ret:
   849                           	callstack 0
   850   000023                     vfpfcnvrt@ap:
   851                           	callstack 0
   852                           
   853                           ; 1 bytes @ 0x22
   854   000023                     	ds	1
   855   000024                     ??_vfpfcnvrt:
   856   000024                     dc_motor_init@ret:
   857                           	callstack 0
   858   000024                     lcd_send_4bits@ret_3:
   859                           	callstack 0
   860   000024                     led_init@ret:
   861                           	callstack 0
   862   000024                     led_turn_ON@ret:
   863                           	callstack 0
   864   000024                     led_turn_OFF@ret:
   865                           	callstack 0
   866                           
   867                           ; 1 bytes @ 0x23
   868   000024                     	ds	1
   869   000025                     ?___flmul:
   870                           	callstack 0
   871   000025                     lcd_send_4bits@ret:
   872                           	callstack 0
   873   000025                     led_init@led_pin_config:
   874                           	callstack 0
   875   000025                     led_turn_ON@led_pin_config:
   876                           	callstack 0
   877   000025                     led_turn_OFF@led_pin_config:
   878                           	callstack 0
   879   000025                     vfpfcnvrt@done:
   880                           	callstack 0
   881   000025                     ___flmul@b:
   882                           	callstack 0
   883                           
   884                           ; 4 bytes @ 0x24
   885   000025                     	ds	1
   886   000026                     lcd_4bit_send_command@_lcd:
   887                           	callstack 0
   888   000026                     lcd_4bit_send_char_data@_lcd:
   889                           	callstack 0
   890   000026                     vfpfcnvrt@cp:
   891                           	callstack 0
   892                           
   893                           ; 1 bytes @ 0x25
   894   000026                     	ds	1
   895   000027                     lcd_4bit_send_command@command:
   896                           	callstack 0
   897   000027                     lcd_4bit_send_char_data@data:
   898                           	callstack 0
   899   000027                     vfpfcnvrt@convarg:
   900                           	callstack 0
   901                           
   902                           ; 4 bytes @ 0x26
   903   000027                     	ds	1
   904   000028                     lcd_4bit_send_command@ret:
   905                           	callstack 0
   906   000028                     lcd_4bit_send_char_data@ret:
   907                           	callstack 0
   908                           
   909                           ; 1 bytes @ 0x27
   910   000028                     	ds	1
   911   000029                     lcd_4bit_initialize@_lcd:
   912                           	callstack 0
   913   000029                     lcd_4bit_send_string@_lcd:
   914                           	callstack 0
   915   000029                     lcd_4bit_set_cursor@_lcd:
   916                           	callstack 0
   917   000029                     ___flmul@a:
   918                           	callstack 0
   919                           
   920                           ; 4 bytes @ 0x28
   921   000029                     	ds	1
   922   00002A                     ??_lcd_4bit_initialize:
   923   00002A                     lcd_4bit_set_cursor@row:
   924                           	callstack 0
   925   00002A                     lcd_4bit_send_string@str:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x29
   929   00002A                     	ds	1
   930   00002B                     lcd_4bit_initialize@l_data_pins_counter:
   931                           	callstack 0
   932   00002B                     lcd_4bit_set_cursor@column:
   933                           	callstack 0
   934   00002B                     vfpfcnvrt@c:
   935                           	callstack 0
   936                           
   937                           ; 1 bytes @ 0x2A
   938   00002B                     	ds	1
   939   00002C                     ??_lcd_4bit_set_cursor:
   940   00002C                     ?_vfprintf:
   941                           	callstack 0
   942   00002C                     lcd_4bit_initialize@ret:
   943                           	callstack 0
   944   00002C                     lcd_4bit_send_string@ret:
   945                           	callstack 0
   946   00002C                     vfprintf@fp:
   947                           	callstack 0
   948                           
   949                           ; 1 bytes @ 0x2B
   950   00002C                     	ds	1
   951   00002D                     ??___flmul:
   952   00002D                     ecu_layer_intialize@ret:
   953                           	callstack 0
   954   00002D                     vfprintf@fmt:
   955                           	callstack 0
   956                           
   957                           ; 1 bytes @ 0x2C
   958   00002D                     	ds	1
   959   00002E                     application_initialize@ret:
   960                           	callstack 0
   961   00002E                     lcd_4bit_set_cursor@ret:
   962                           	callstack 0
   963   00002E                     vfprintf@ap:
   964                           	callstack 0
   965                           
   966                           ; 1 bytes @ 0x2D
   967   00002E                     	ds	1
   968   00002F                     ??_intro_msg:
   969   00002F                     lcd_4bit_send_string_pos@_lcd:
   970                           	callstack 0
   971   00002F                     vfprintf@cfmt:
   972                           	callstack 0
   973                           
   974                           ; 1 bytes @ 0x2E
   975   00002F                     	ds	1
   976   000030                     ?_sprintf:
   977                           	callstack 0
   978   000030                     lcd_4bit_send_string_pos@row:
   979                           	callstack 0
   980   000030                     sprintf@s:
   981                           	callstack 0
   982                           
   983                           ; 1 bytes @ 0x2F
   984   000030                     	ds	1
   985   000031                     ?___fltol:
   986                           	callstack 0
   987   000031                     lcd_4bit_send_string_pos@column:
   988                           	callstack 0
   989   000031                     sprintf@fmt:
   990                           	callstack 0
   991   000031                     ___fltol@f1:
   992                           	callstack 0
   993                           
   994                           ; 4 bytes @ 0x30
   995   000031                     	ds	1
   996   000032                     lcd_4bit_send_string_pos@str:
   997                           	callstack 0
   998                           
   999                           ; 2 bytes @ 0x31
  1000   000032                     	ds	2
  1001   000034                     lcd_4bit_send_string_pos@ret:
  1002                           	callstack 0
  1003                           
  1004                           ; 1 bytes @ 0x33
  1005   000034                     	ds	1
  1006   000035                     ??_danger_msg:
  1007   000035                     ??___fltol:
  1008                           
  1009                           ; 1 bytes @ 0x34
  1010   000035                     	ds	1
  1011   000036                     convert_uint16_to_string@value:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x35
  1015   000036                     	ds	1
  1016   000037                     danger_msg@ret:
  1017                           	callstack 0
  1018                           
  1019                           ; 1 bytes @ 0x36
  1020   000037                     	ds	1
  1021   000038                     convert_uint16_to_string@str:
  1022                           	callstack 0
  1023                           
  1024                           ; 1 bytes @ 0x37
  1025   000038                     	ds	1
  1026   000039                     convert_uint16_to_string@ret:
  1027                           	callstack 0
  1028   000039                     ___fltol@sign1:
  1029                           	callstack 0
  1030                           
  1031                           ; 1 bytes @ 0x38
  1032   000039                     	ds	1
  1033   00003A                     ___fltol@exp1:
  1034                           	callstack 0
  1035                           
  1036                           ; 1 bytes @ 0x39
  1037   00003A                     	ds	1
  1038                           
  1039 ;;
  1040 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1041 ;;
  1042 ;; *************** function _main *****************
  1043 ;; Defined at:
  1044 ;;		line 17 in file "APP/application.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;		None
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;  ret             1    0        unsigned char 
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  2   68[None  ] int 
  1051 ;; Registers used:
  1052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1060 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1061 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1062 ;;Total ram usage:        2 bytes
  1063 ;; Hardware stack levels required when called: 14
  1064 ;; This function calls:
  1065 ;;		_ADC_start_conversion_interrupt
  1066 ;;		___flmul
  1067 ;;		___fltol
  1068 ;;		___lwdiv
  1069 ;;		___xxtofl
  1070 ;;		_application_initialize
  1071 ;;		_convert_uint16_to_string
  1072 ;;		_danger_msg
  1073 ;;		_dc_motor_move_CW
  1074 ;;		_dc_motor_stop
  1075 ;;		_intro_msg
  1076 ;;		_lcd_4bit_send_string_pos
  1077 ;;		_led_turn_OFF
  1078 ;;		_led_turn_ON
  1079 ;; This function is called by:
  1080 ;;		Startup code after reset
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084                           	psect	text0
  1085   00146E                     __ptext0:
  1086                           	callstack 0
  1087   00146E                     _main:
  1088                           	callstack 17
  1089   00146E  ECC0  F018         	call	_application_initialize	;wreg free
  1090   001472  EC66  F00D         	call	_intro_msg	;wreg free
  1091   001476  0EB9               	movlw	low _lcd_4bits
  1092   001478  6E2F               	movwf	lcd_4bit_send_string_pos@_lcd^0,c
  1093   00147A  0E01               	movlw	1
  1094   00147C  6E30               	movwf	lcd_4bit_send_string_pos@row^0,c
  1095   00147E  0E02               	movlw	2
  1096   001480  6E31               	movwf	lcd_4bit_send_string_pos@column^0,c
  1097   001482  0E01               	movlw	low STR_1
  1098   001484  6E32               	movwf	lcd_4bit_send_string_pos@str^0,c
  1099   001486  5032               	movf	lcd_4bit_send_string_pos@str^0,w,c
  1100   001488  A4D8               	btfss	status,2,c
  1101   00148A  0E10               	movlw	high __smallconst
  1102   00148C  6E33               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1103   00148E  EC28  F017         	call	_lcd_4bit_send_string_pos	;wreg free
  1104   001492                     l6405:
  1105   001492  0EB2               	movlw	low _adc
  1106   001494  6E1E               	movwf	ADC_start_conversion_interrupt@_adc^0,c
  1107   001496  0E00               	movlw	0
  1108   001498  6E1F               	movwf	ADC_start_conversion_interrupt@channel^0,c
  1109   00149A  ECD0  F017         	call	_ADC_start_conversion_interrupt	;wreg free
  1110   00149E                     
  1111                           ;APP/application.c: 29:         temp = adc_res * 4.88f;
  1112   00149E  0EF6               	movlw	246
  1113   0014A0  6E29               	movwf	___flmul@a^0,c
  1114   0014A2  0E28               	movlw	40
  1115   0014A4  6E2A               	movwf	(___flmul@a+1)^0,c
  1116   0014A6  0E9C               	movlw	156
  1117   0014A8  6E2B               	movwf	(___flmul@a+2)^0,c
  1118   0014AA  0E40               	movlw	64
  1119   0014AC  6E2C               	movwf	(___flmul@a+3)^0,c
  1120   0014AE  C05E  F017         	movff	_adc_res,___xxtofl@val	;volatile
  1121   0014B2  C05F  F018         	movff	_adc_res+1,___xxtofl@val+1	;volatile
  1122   0014B6  6A19               	clrf	(___xxtofl@val+2)^0,c
  1123   0014B8  6A1A               	clrf	(___xxtofl@val+3)^0,c
  1124   0014BA  0E00               	movlw	0
  1125   0014BC  ECF9  F00B         	call	___xxtofl
  1126   0014C0  C017  F025         	movff	?___xxtofl,___flmul@b
  1127   0014C4  C018  F026         	movff	?___xxtofl+1,___flmul@b+1
  1128   0014C8  C019  F027         	movff	?___xxtofl+2,___flmul@b+2
  1129   0014CC  C01A  F028         	movff	?___xxtofl+3,___flmul@b+3
  1130   0014D0  EC21  F008         	call	___flmul	;wreg free
  1131   0014D4  C025  F031         	movff	?___flmul,___fltol@f1
  1132   0014D8  C026  F032         	movff	?___flmul+1,___fltol@f1+1
  1133   0014DC  C027  F033         	movff	?___flmul+2,___fltol@f1+2
  1134   0014E0  C028  F034         	movff	?___flmul+3,___fltol@f1+3
  1135   0014E4  EC7B  F00E         	call	___fltol	;wreg free
  1136   0014E8  C031  F067         	movff	?___fltol,_temp
  1137   0014EC  C032  F068         	movff	?___fltol+1,_temp+1
  1138   0014F0                     
  1139                           ;APP/application.c: 30:         temp /= 10;
  1140   0014F0  C067  F017         	movff	_temp,___lwdiv@dividend
  1141   0014F4  C068  F018         	movff	_temp+1,___lwdiv@dividend+1
  1142   0014F8  0E00               	movlw	0
  1143   0014FA  6E1A               	movwf	(___lwdiv@divisor+1)^0,c
  1144   0014FC  0E0A               	movlw	10
  1145   0014FE  6E19               	movwf	___lwdiv@divisor^0,c
  1146   001500  ECE3  F014         	call	___lwdiv	;wreg free
  1147   001504  C017  F067         	movff	?___lwdiv,_temp
  1148   001508  C018  F068         	movff	?___lwdiv+1,_temp+1
  1149   00150C  C067  F036         	movff	_temp,convert_uint16_to_string@value
  1150   001510  C068  F037         	movff	_temp+1,convert_uint16_to_string@value+1
  1151   001514  0EDF               	movlw	low _adc_res_txt
  1152   001516  6E38               	movwf	convert_uint16_to_string@str^0,c
  1153   001518  EC9E  F016         	call	_convert_uint16_to_string	;wreg free
  1154   00151C                     
  1155                           ;APP/application.c: 32:         _delay((unsigned long)((150)*(8000000/4000.0)));
  1156   00151C  0E02               	movlw	2
  1157   00151E  0100               	movlb	0	; () banked
  1158   001520  6FFE               	movwf	(??_main+1)& (0+255),b
  1159   001522  0E86               	movlw	134
  1160   001524  6FFD               	movwf	??_main& (0+255),b
  1161   001526  0E99               	movlw	153
  1162   001528                     u6107:
  1163   001528  2EE8               	decfsz	wreg,f,c
  1164   00152A  D7FE               	bra	u6107
  1165   00152C  2FFD               	decfsz	??_main& (0+255),f,b
  1166   00152E  D7FC               	bra	u6107
  1167   001530  2FFE               	decfsz	(??_main+1)& (0+255),f,b
  1168   001532  D7FA               	bra	u6107
  1169   001534  0EB9               	movlw	low _lcd_4bits
  1170   001536  6E2F               	movwf	lcd_4bit_send_string_pos@_lcd^0,c
  1171   001538  0E01               	movlw	1
  1172   00153A  6E30               	movwf	lcd_4bit_send_string_pos@row^0,c
  1173   00153C  0E0D               	movlw	13
  1174   00153E  6E31               	movwf	lcd_4bit_send_string_pos@column^0,c
  1175   001540  0EDF               	movlw	low _adc_res_txt
  1176   001542  6E32               	movwf	lcd_4bit_send_string_pos@str^0,c
  1177   001544  6A33               	clrf	(lcd_4bit_send_string_pos@str+1)^0,c
  1178   001546  EC28  F017         	call	_lcd_4bit_send_string_pos	;wreg free
  1179   00154A                     
  1180                           ;APP/application.c: 35:         if (temp < 30)
  1181   00154A  5068               	movf	(_temp+1)^0,w,c
  1182   00154C  E107               	bnz	u5721
  1183   00154E  0E1E               	movlw	30
  1184   001550  5C67               	subwf	_temp^0,w,c
  1185   001552  B0D8               	btfsc	status,0,c
  1186   001554  EFAE  F00A         	goto	u5721
  1187   001558  EFB0  F00A         	goto	u5720
  1188   00155C                     u5721:
  1189   00155C  EFCC  F00A         	goto	l6427
  1190   001560                     u5720:
  1191   001560  0E66               	movlw	low _green_led
  1192   001562  6E22               	movwf	led_turn_ON@led^0,c
  1193   001564  ECF4  F012         	call	_led_turn_ON	;wreg free
  1194   001568  0EB9               	movlw	low _lcd_4bits
  1195   00156A  6E2F               	movwf	lcd_4bit_send_string_pos@_lcd^0,c
  1196   00156C  0E02               	movlw	2
  1197   00156E  6E30               	movwf	lcd_4bit_send_string_pos@row^0,c
  1198   001570  0E03               	movlw	3
  1199   001572  6E31               	movwf	lcd_4bit_send_string_pos@column^0,c
  1200   001574  0E1A               	movlw	low STR_2
  1201   001576  6E32               	movwf	lcd_4bit_send_string_pos@str^0,c
  1202   001578  5032               	movf	lcd_4bit_send_string_pos@str^0,w,c
  1203   00157A  A4D8               	btfss	status,2,c
  1204   00157C  0E10               	movlw	high __smallconst
  1205   00157E  6E33               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1206   001580  EC28  F017         	call	_lcd_4bit_send_string_pos	;wreg free
  1207   001584  0E62               	movlw	low _motor_1
  1208   001586  6E1F               	movwf	dc_motor_stop@_dc_motor^0,c
  1209   001588  EC47  F017         	call	_dc_motor_stop	;wreg free
  1210   00158C                     l6425:
  1211   00158C  0E60               	movlw	low _motor_2
  1212   00158E  6E1F               	movwf	dc_motor_stop@_dc_motor^0,c
  1213   001590  EC47  F017         	call	_dc_motor_stop	;wreg free
  1214                           
  1215                           ;APP/application.c: 41:         }
  1216   001594  EF49  F00A         	goto	l6405
  1217   001598                     l6427:
  1218   001598  5068               	movf	(_temp+1)^0,w,c
  1219   00159A  E109               	bnz	u5730
  1220   00159C  0E1F               	movlw	31
  1221   00159E  5C67               	subwf	_temp^0,w,c
  1222   0015A0  A0D8               	btfss	status,0,c
  1223   0015A2  EFD5  F00A         	goto	u5731
  1224   0015A6  EFD7  F00A         	goto	u5730
  1225   0015AA                     u5731:
  1226   0015AA  EFFA  F00A         	goto	l6439
  1227   0015AE                     u5730:
  1228   0015AE  5068               	movf	(_temp+1)^0,w,c
  1229   0015B0  E107               	bnz	u5741
  1230   0015B2  0E23               	movlw	35
  1231   0015B4  5C67               	subwf	_temp^0,w,c
  1232   0015B6  B0D8               	btfsc	status,0,c
  1233   0015B8  EFE0  F00A         	goto	u5741
  1234   0015BC  EFE2  F00A         	goto	u5740
  1235   0015C0                     u5741:
  1236   0015C0  EFFA  F00A         	goto	l6439
  1237   0015C4                     u5740:
  1238   0015C4  0E66               	movlw	low _green_led
  1239   0015C6  6E22               	movwf	led_turn_ON@led^0,c
  1240   0015C8  ECF4  F012         	call	_led_turn_ON	;wreg free
  1241   0015CC  0EB9               	movlw	low _lcd_4bits
  1242   0015CE  6E2F               	movwf	lcd_4bit_send_string_pos@_lcd^0,c
  1243   0015D0  0E02               	movlw	2
  1244   0015D2  6E30               	movwf	lcd_4bit_send_string_pos@row^0,c
  1245   0015D4  0E03               	movlw	3
  1246   0015D6  6E31               	movwf	lcd_4bit_send_string_pos@column^0,c
  1247   0015D8  0E32               	movlw	low STR_3
  1248   0015DA  6E32               	movwf	lcd_4bit_send_string_pos@str^0,c
  1249   0015DC  5032               	movf	lcd_4bit_send_string_pos@str^0,w,c
  1250   0015DE  A4D8               	btfss	status,2,c
  1251   0015E0  0E10               	movlw	high __smallconst
  1252   0015E2  6E33               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1253   0015E4  EC28  F017         	call	_lcd_4bit_send_string_pos	;wreg free
  1254   0015E8  0E62               	movlw	low _motor_1
  1255   0015EA  6E1F               	movwf	dc_motor_move_CW@_dc_motor^0,c
  1256   0015EC  EC63  F017         	call	_dc_motor_move_CW	;wreg free
  1257   0015F0  EFC6  F00A         	goto	l6425
  1258   0015F4                     l6439:
  1259   0015F4  5068               	movf	(_temp+1)^0,w,c
  1260   0015F6  E109               	bnz	u5750
  1261   0015F8  0E24               	movlw	36
  1262   0015FA  5C67               	subwf	_temp^0,w,c
  1263   0015FC  A0D8               	btfss	status,0,c
  1264   0015FE  EF03  F00B         	goto	u5751
  1265   001602  EF05  F00B         	goto	u5750
  1266   001606                     u5751:
  1267   001606  EF15  F00B         	goto	l71
  1268   00160A                     u5750:
  1269   00160A  0E66               	movlw	low _green_led
  1270   00160C  6E22               	movwf	led_turn_OFF@led^0,c
  1271   00160E  EC3F  F013         	call	_led_turn_OFF	;wreg free
  1272   001612  EC8A  F013         	call	_danger_msg	;wreg free
  1273   001616  0E62               	movlw	low _motor_1
  1274   001618  6E1F               	movwf	dc_motor_move_CW@_dc_motor^0,c
  1275   00161A  EC63  F017         	call	_dc_motor_move_CW	;wreg free
  1276   00161E  0E60               	movlw	low _motor_2
  1277   001620  6E1F               	movwf	dc_motor_move_CW@_dc_motor^0,c
  1278   001622  EC63  F017         	call	_dc_motor_move_CW	;wreg free
  1279                           
  1280                           ;APP/application.c: 56:         }
  1281   001626  EF49  F00A         	goto	l6405
  1282   00162A                     l71:
  1283   00162A  EF49  F00A         	goto	l6405
  1284   00162E  EF4B  F000         	goto	start
  1285   001632                     __end_of_main:
  1286                           	callstack 0
  1287                           
  1288 ;; *************** function _led_turn_ON *****************
  1289 ;; Defined at:
  1290 ;;		line 43 in file "ECUAL/LED/LED.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;  led             1   33[COMRAM] PTR const struct .
  1293 ;;		 -> green_led(1), 
  1294 ;; Auto vars:     Size  Location     Type
  1295 ;;  led_pin_conf    1   36[COMRAM] struct .
  1296 ;;  ret             1   35[COMRAM] unsigned char 
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  1    wreg      unsigned char 
  1299 ;; Registers used:
  1300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1306 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1307 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1308 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1309 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1310 ;;Total ram usage:        4 bytes
  1311 ;; Hardware stack levels used: 1
  1312 ;; Hardware stack levels required when called: 10
  1313 ;; This function calls:
  1314 ;;		_gpio_pin_initialize
  1315 ;;		_gpio_pin_write_logic
  1316 ;; This function is called by:
  1317 ;;		_main
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           	psect	text1
  1322   0025E8                     __ptext1:
  1323                           	callstack 0
  1324   0025E8                     _led_turn_ON:
  1325                           	callstack 20
  1326   0025E8                     
  1327                           ;ECUAL/LED/LED.c: 45:     if(((void*)0) == led || (led -> pin) > (8 - 1)){
  1328   0025E8  5022               	movf	led_turn_ON@led^0,w,c
  1329   0025EA  B4D8               	btfsc	status,2,c
  1330   0025EC  EFFA  F012         	goto	u5361
  1331   0025F0  EFFC  F012         	goto	u5360
  1332   0025F4                     u5361:
  1333   0025F4  EF0A  F013         	goto	l6139
  1334   0025F8                     u5360:
  1335   0025F8  5022               	movf	led_turn_ON@led^0,w,c
  1336   0025FA  6ED9               	movwf	fsr2l,c
  1337   0025FC  6ADA               	clrf	fsr2h,c
  1338   0025FE  38DF               	swapf	223,w,c
  1339   002600  0B07               	andlw	7
  1340   002602  6E23               	movwf	??_led_turn_ON^0,c
  1341   002604  0E07               	movlw	7
  1342   002606  6423               	cpfsgt	??_led_turn_ON^0,c
  1343   002608  EF08  F013         	goto	u5371
  1344   00260C  EF0A  F013         	goto	u5370
  1345   002610                     u5371:
  1346   002610  EF0E  F013         	goto	l329
  1347   002614                     u5370:
  1348   002614                     l6139:
  1349                           
  1350                           ;ECUAL/LED/LED.c: 46:         ret = (Std_ReturnType)0x01U;
  1351   002614  0E01               	movlw	1
  1352   002616  6E24               	movwf	led_turn_ON@ret^0,c
  1353                           
  1354                           ;ECUAL/LED/LED.c: 47:     }
  1355   002618  EF3D  F013         	goto	l6151
  1356   00261C                     l329:
  1357                           
  1358                           ;ECUAL/LED/LED.c: 49:         pin_config_t led_pin_config = {.port = led->port, .pin = l
      +                          ed->pin,
  1359   00261C  C05B  F025         	movff	led_turn_ON@F3066,led_turn_ON@led_pin_config
  1360   002620  5022               	movf	led_turn_ON@led^0,w,c
  1361   002622  6ED9               	movwf	fsr2l,c
  1362   002624  6ADA               	clrf	fsr2h,c
  1363   002626  50DF               	movf	223,w,c
  1364   002628  0B0F               	andlw	15
  1365   00262A  6E23               	movwf	??_led_turn_ON^0,c
  1366   00262C  5025               	movf	led_turn_ON@led_pin_config^0,w,c
  1367   00262E  1823               	xorwf	??_led_turn_ON^0,w,c
  1368   002630  0BF8               	andlw	-8
  1369   002632  1823               	xorwf	??_led_turn_ON^0,w,c
  1370   002634  6E25               	movwf	led_turn_ON@led_pin_config^0,c
  1371   002636  5022               	movf	led_turn_ON@led^0,w,c
  1372   002638  6ED9               	movwf	fsr2l,c
  1373   00263A  6ADA               	clrf	fsr2h,c
  1374   00263C  38DF               	swapf	223,w,c
  1375   00263E  0B07               	andlw	7
  1376   002640  6E23               	movwf	??_led_turn_ON^0,c
  1377   002642  4623               	rlncf	??_led_turn_ON^0,f,c
  1378   002644  4623               	rlncf	??_led_turn_ON^0,f,c
  1379   002646  4623               	rlncf	??_led_turn_ON^0,f,c
  1380   002648  5025               	movf	led_turn_ON@led_pin_config^0,w,c
  1381   00264A  1823               	xorwf	??_led_turn_ON^0,w,c
  1382   00264C  0BC7               	andlw	-57
  1383   00264E  1823               	xorwf	??_led_turn_ON^0,w,c
  1384   002650  6E25               	movwf	led_turn_ON@led_pin_config^0,c
  1385   002652  9C25               	bcf	led_turn_ON@led_pin_config^0,6,c
  1386   002654  5022               	movf	led_turn_ON@led^0,w,c
  1387   002656  6ED9               	movwf	fsr2l,c
  1388   002658  6ADA               	clrf	fsr2h,c
  1389   00265A  AEDF               	btfss	indf2,7,c
  1390   00265C  D002               	bra	u5385
  1391   00265E  8E25               	bsf	led_turn_ON@led_pin_config^0,7,c
  1392   002660  D001               	bra	u5387
  1393   002662                     u5385:
  1394   002662  9E25               	bcf	led_turn_ON@led_pin_config^0,7,c
  1395   002664                     u5387:
  1396   002664  0E25               	movlw	low led_turn_ON@led_pin_config
  1397   002666  6E1F               	movwf	gpio_pin_initialize@_pin_config^0,c
  1398   002668  ECE5  F015         	call	_gpio_pin_initialize	;wreg free
  1399   00266C                     
  1400                           ;ECUAL/LED/LED.c: 53:         ret = gpio_pin_write_logic(&led_pin_config, GPIO_HIGH);
  1401   00266C  0E25               	movlw	low led_turn_ON@led_pin_config
  1402   00266E  6E17               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1403   002670  0E01               	movlw	1
  1404   002672  6E18               	movwf	gpio_pin_write_logic@logic^0,c
  1405   002674  ECF3  F00D         	call	_gpio_pin_write_logic	;wreg free
  1406   002678  6E24               	movwf	led_turn_ON@ret^0,c
  1407   00267A                     l6151:
  1408                           
  1409                           ;ECUAL/LED/LED.c: 55:     return ret;
  1410   00267A  5024               	movf	led_turn_ON@ret^0,w,c
  1411   00267C  0012               	return		;funcret
  1412   00267E                     __end_of_led_turn_ON:
  1413                           	callstack 0
  1414                           
  1415 ;; *************** function _led_turn_OFF *****************
  1416 ;; Defined at:
  1417 ;;		line 65 in file "ECUAL/LED/LED.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;  led             1   33[COMRAM] PTR const struct .
  1420 ;;		 -> green_led(1), 
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;  led_pin_conf    1   36[COMRAM] struct .
  1423 ;;  ret             1   35[COMRAM] unsigned char 
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  1    wreg      unsigned char 
  1426 ;; Registers used:
  1427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1433 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1434 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1435 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1436 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1437 ;;Total ram usage:        4 bytes
  1438 ;; Hardware stack levels used: 1
  1439 ;; Hardware stack levels required when called: 10
  1440 ;; This function calls:
  1441 ;;		_gpio_pin_initialize
  1442 ;;		_gpio_pin_write_logic
  1443 ;; This function is called by:
  1444 ;;		_main
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           	psect	text2
  1449   00267E                     __ptext2:
  1450                           	callstack 0
  1451   00267E                     _led_turn_OFF:
  1452                           	callstack 20
  1453   00267E                     
  1454                           ;ECUAL/LED/LED.c: 67:     if(((void*)0) == led || (led -> pin) > (8 - 1)){
  1455   00267E  5022               	movf	led_turn_OFF@led^0,w,c
  1456   002680  B4D8               	btfsc	status,2,c
  1457   002682  EF45  F013         	goto	u5411
  1458   002686  EF47  F013         	goto	u5410
  1459   00268A                     u5411:
  1460   00268A  EF55  F013         	goto	l6179
  1461   00268E                     u5410:
  1462   00268E  5022               	movf	led_turn_OFF@led^0,w,c
  1463   002690  6ED9               	movwf	fsr2l,c
  1464   002692  6ADA               	clrf	fsr2h,c
  1465   002694  38DF               	swapf	223,w,c
  1466   002696  0B07               	andlw	7
  1467   002698  6E23               	movwf	??_led_turn_OFF^0,c
  1468   00269A  0E07               	movlw	7
  1469   00269C  6423               	cpfsgt	??_led_turn_OFF^0,c
  1470   00269E  EF53  F013         	goto	u5421
  1471   0026A2  EF55  F013         	goto	u5420
  1472   0026A6                     u5421:
  1473   0026A6  EF59  F013         	goto	l338
  1474   0026AA                     u5420:
  1475   0026AA                     l6179:
  1476                           
  1477                           ;ECUAL/LED/LED.c: 68:         ret = (Std_ReturnType)0x01U;
  1478   0026AA  0E01               	movlw	1
  1479   0026AC  6E24               	movwf	led_turn_OFF@ret^0,c
  1480                           
  1481                           ;ECUAL/LED/LED.c: 69:     }
  1482   0026AE  EF88  F013         	goto	l6191
  1483   0026B2                     l338:
  1484                           
  1485                           ;ECUAL/LED/LED.c: 71:         pin_config_t led_pin_config = {.port = led->port, .pin = l
      +                          ed->pin,
  1486   0026B2  C05A  F025         	movff	led_turn_OFF@F3071,led_turn_OFF@led_pin_config
  1487   0026B6  5022               	movf	led_turn_OFF@led^0,w,c
  1488   0026B8  6ED9               	movwf	fsr2l,c
  1489   0026BA  6ADA               	clrf	fsr2h,c
  1490   0026BC  50DF               	movf	223,w,c
  1491   0026BE  0B0F               	andlw	15
  1492   0026C0  6E23               	movwf	??_led_turn_OFF^0,c
  1493   0026C2  5025               	movf	led_turn_OFF@led_pin_config^0,w,c
  1494   0026C4  1823               	xorwf	??_led_turn_OFF^0,w,c
  1495   0026C6  0BF8               	andlw	-8
  1496   0026C8  1823               	xorwf	??_led_turn_OFF^0,w,c
  1497   0026CA  6E25               	movwf	led_turn_OFF@led_pin_config^0,c
  1498   0026CC  5022               	movf	led_turn_OFF@led^0,w,c
  1499   0026CE  6ED9               	movwf	fsr2l,c
  1500   0026D0  6ADA               	clrf	fsr2h,c
  1501   0026D2  38DF               	swapf	223,w,c
  1502   0026D4  0B07               	andlw	7
  1503   0026D6  6E23               	movwf	??_led_turn_OFF^0,c
  1504   0026D8  4623               	rlncf	??_led_turn_OFF^0,f,c
  1505   0026DA  4623               	rlncf	??_led_turn_OFF^0,f,c
  1506   0026DC  4623               	rlncf	??_led_turn_OFF^0,f,c
  1507   0026DE  5025               	movf	led_turn_OFF@led_pin_config^0,w,c
  1508   0026E0  1823               	xorwf	??_led_turn_OFF^0,w,c
  1509   0026E2  0BC7               	andlw	-57
  1510   0026E4  1823               	xorwf	??_led_turn_OFF^0,w,c
  1511   0026E6  6E25               	movwf	led_turn_OFF@led_pin_config^0,c
  1512   0026E8  9C25               	bcf	led_turn_OFF@led_pin_config^0,6,c
  1513   0026EA  5022               	movf	led_turn_OFF@led^0,w,c
  1514   0026EC  6ED9               	movwf	fsr2l,c
  1515   0026EE  6ADA               	clrf	fsr2h,c
  1516   0026F0  AEDF               	btfss	indf2,7,c
  1517   0026F2  D002               	bra	u5435
  1518   0026F4  8E25               	bsf	led_turn_OFF@led_pin_config^0,7,c
  1519   0026F6  D001               	bra	u5437
  1520   0026F8                     u5435:
  1521   0026F8  9E25               	bcf	led_turn_OFF@led_pin_config^0,7,c
  1522   0026FA                     u5437:
  1523   0026FA  0E25               	movlw	low led_turn_OFF@led_pin_config
  1524   0026FC  6E1F               	movwf	gpio_pin_initialize@_pin_config^0,c
  1525   0026FE  ECE5  F015         	call	_gpio_pin_initialize	;wreg free
  1526   002702                     
  1527                           ;ECUAL/LED/LED.c: 75:         ret = gpio_pin_write_logic(&led_pin_config, GPIO_LOW);
  1528   002702  0E25               	movlw	low led_turn_OFF@led_pin_config
  1529   002704  6E17               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1530   002706  0E00               	movlw	0
  1531   002708  6E18               	movwf	gpio_pin_write_logic@logic^0,c
  1532   00270A  ECF3  F00D         	call	_gpio_pin_write_logic	;wreg free
  1533   00270E  6E24               	movwf	led_turn_OFF@ret^0,c
  1534   002710                     l6191:
  1535                           
  1536                           ;ECUAL/LED/LED.c: 77:     return ret;
  1537   002710  5024               	movf	led_turn_OFF@ret^0,w,c
  1538   002712  0012               	return		;funcret
  1539   002714                     __end_of_led_turn_OFF:
  1540                           	callstack 0
  1541                           
  1542 ;; *************** function _intro_msg *****************
  1543 ;; Defined at:
  1544 ;;		line 75 in file "APP/application.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;		None
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;  l_counter       1   21[BANK0 ] unsigned char 
  1549 ;;  l_counter       1   20[BANK0 ] unsigned char 
  1550 ;;  temp_txt       12    0[BANK0 ] unsigned char [12]
  1551 ;;  control_txt     8   12[BANK0 ] unsigned char [8]
  1552 ;;  ret             1   22[BANK0 ] unsigned char 
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  1    wreg      unsigned char 
  1555 ;; Registers used:
  1556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1563 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1564 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1565 ;;      Totals:         2      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1566 ;;Total ram usage:       25 bytes
  1567 ;; Hardware stack levels used: 1
  1568 ;; Hardware stack levels required when called: 12
  1569 ;; This function calls:
  1570 ;;		_lcd_4bit_send_char_data
  1571 ;;		_lcd_4bit_send_command
  1572 ;;		_lcd_4bit_set_cursor
  1573 ;;		_strlen
  1574 ;; This function is called by:
  1575 ;;		_main
  1576 ;; This function uses a non-reentrant model
  1577 ;;
  1578                           
  1579                           	psect	text3
  1580   001ACC                     __ptext3:
  1581                           	callstack 0
  1582   001ACC                     _intro_msg:
  1583                           	callstack 18
  1584   001ACC                     
  1585                           ;APP/application.c: 79:     uint8_t temp_txt[] = "Temperature";
  1586   001ACC  EE20  F080         	lfsr	2,intro_msg@F3259
  1587   001AD0  EE10  F0E6         	lfsr	1,intro_msg@temp_txt
  1588   001AD4  0E0B               	movlw	11
  1589   001AD6                     u5301:
  1590   001AD6  CFDB FFE3          	movff	plusw2,plusw1
  1591   001ADA  06E8               	decf	wreg,f,c
  1592   001ADC  E2FC               	bc	u5301
  1593   001ADE  0EB9               	movlw	low _lcd_4bits
  1594   001AE0  6E29               	movwf	lcd_4bit_set_cursor@_lcd^0,c
  1595   001AE2  0E01               	movlw	1
  1596   001AE4  6E2A               	movwf	lcd_4bit_set_cursor@row^0,c
  1597   001AE6  0E04               	movlw	4
  1598   001AE8  6E2B               	movwf	lcd_4bit_set_cursor@column^0,c
  1599   001AEA  EC48  F012         	call	_lcd_4bit_set_cursor	;wreg free
  1600   001AEE                     
  1601                           ;APP/application.c: 81:     for (uint8_t l_counter = 0; l_counter < strlen(temp_txt); ++
      +                          l_counter)
  1602   001AEE  0E00               	movlw	0
  1603   001AF0  0100               	movlb	0	; () banked
  1604   001AF2  6FFA               	movwf	intro_msg@l_counter& (0+255),b
  1605   001AF4  EF8F  F00D         	goto	l6087
  1606   001AF8                     l6081:
  1607                           
  1608                           ; BSR set to: 0
  1609   001AF8  0EB9               	movlw	low _lcd_4bits
  1610   001AFA  6E26               	movwf	lcd_4bit_send_char_data@_lcd^0,c
  1611   001AFC  51FA               	movf	intro_msg@l_counter& (0+255),w,b
  1612   001AFE  0FE6               	addlw	low intro_msg@temp_txt
  1613   001B00  6ED9               	movwf	fsr2l,c
  1614   001B02  6ADA               	clrf	fsr2h,c
  1615   001B04  50DF               	movf	indf2,w,c
  1616   001B06  6E27               	movwf	lcd_4bit_send_char_data@data^0,c
  1617   001B08  EC14  F016         	call	_lcd_4bit_send_char_data	;wreg free
  1618   001B0C                     
  1619                           ;APP/application.c: 84:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1620   001B0C  0E82               	movlw	130
  1621   001B0E  6E2F               	movwf	??_intro_msg^0,c
  1622   001B10  0EDE               	movlw	222
  1623   001B12                     u6117:
  1624   001B12  2EE8               	decfsz	wreg,f,c
  1625   001B14  D7FE               	bra	u6117
  1626   001B16  2E2F               	decfsz	??_intro_msg^0,f,c
  1627   001B18  D7FC               	bra	u6117
  1628   001B1A                     
  1629                           ;APP/application.c: 85:     }
  1630   001B1A  0100               	movlb	0	; () banked
  1631   001B1C  2BFA               	incf	intro_msg@l_counter& (0+255),f,b
  1632   001B1E                     l6087:
  1633                           
  1634                           ; BSR set to: 0
  1635   001B1E  0EE6               	movlw	low intro_msg@temp_txt
  1636   001B20  6E17               	movwf	strlen@s^0,c
  1637   001B22  EC01  F018         	call	_strlen	;wreg free
  1638   001B26  0100               	movlb	0	; () banked
  1639   001B28  51FA               	movf	intro_msg@l_counter& (0+255),w,b
  1640   001B2A  6E2F               	movwf	??_intro_msg^0,c
  1641   001B2C  6A30               	clrf	(??_intro_msg+1)^0,c
  1642   001B2E  5017               	movf	?_strlen^0,w,c
  1643   001B30  5C2F               	subwf	??_intro_msg^0,w,c
  1644   001B32  5018               	movf	(?_strlen+1)^0,w,c
  1645   001B34  5830               	subwfb	(??_intro_msg+1)^0,w,c
  1646   001B36  A0D8               	btfss	status,0,c
  1647   001B38  EFA0  F00D         	goto	u5311
  1648   001B3C  EFA2  F00D         	goto	u5310
  1649   001B40                     u5311:
  1650   001B40  EF7C  F00D         	goto	l6081
  1651   001B44                     u5310:
  1652   001B44                     
  1653                           ; BSR set to: 0
  1654                           ;APP/application.c: 87:     uint8_t control_txt[] = "Control";
  1655   001B44  EE20  F0AA         	lfsr	2,intro_msg@F3262
  1656   001B48  EE10  F0F2         	lfsr	1,intro_msg@control_txt
  1657   001B4C  0E07               	movlw	7
  1658   001B4E                     u5321:
  1659   001B4E  CFDB FFE3          	movff	plusw2,plusw1
  1660   001B52  06E8               	decf	wreg,f,c
  1661   001B54  E2FC               	bc	u5321
  1662   001B56                     
  1663                           ; BSR set to: 0
  1664   001B56  0EB9               	movlw	low _lcd_4bits
  1665   001B58  6E29               	movwf	lcd_4bit_set_cursor@_lcd^0,c
  1666   001B5A  0E02               	movlw	2
  1667   001B5C  6E2A               	movwf	lcd_4bit_set_cursor@row^0,c
  1668   001B5E  0E06               	movlw	6
  1669   001B60  6E2B               	movwf	lcd_4bit_set_cursor@column^0,c
  1670   001B62  EC48  F012         	call	_lcd_4bit_set_cursor	;wreg free
  1671   001B66                     
  1672                           ;APP/application.c: 89:     for (uint8_t l_counter = 0; l_counter < strlen(control_txt);
      +                           ++l_counter)
  1673   001B66  0E00               	movlw	0
  1674   001B68  0100               	movlb	0	; () banked
  1675   001B6A  6FFB               	movwf	intro_msg@l_counter_258& (0+255),b
  1676   001B6C  EFCB  F00D         	goto	l6101
  1677   001B70                     l6095:
  1678                           
  1679                           ; BSR set to: 0
  1680   001B70  0EB9               	movlw	low _lcd_4bits
  1681   001B72  6E26               	movwf	lcd_4bit_send_char_data@_lcd^0,c
  1682   001B74  51FB               	movf	intro_msg@l_counter_258& (0+255),w,b
  1683   001B76  0FF2               	addlw	low intro_msg@control_txt
  1684   001B78  6ED9               	movwf	fsr2l,c
  1685   001B7A  6ADA               	clrf	fsr2h,c
  1686   001B7C  50DF               	movf	indf2,w,c
  1687   001B7E  6E27               	movwf	lcd_4bit_send_char_data@data^0,c
  1688   001B80  EC14  F016         	call	_lcd_4bit_send_char_data	;wreg free
  1689   001B84                     
  1690                           ;APP/application.c: 92:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1691   001B84  0E82               	movlw	130
  1692   001B86  6E2F               	movwf	??_intro_msg^0,c
  1693   001B88  0EDE               	movlw	222
  1694   001B8A                     u6127:
  1695   001B8A  2EE8               	decfsz	wreg,f,c
  1696   001B8C  D7FE               	bra	u6127
  1697   001B8E  2E2F               	decfsz	??_intro_msg^0,f,c
  1698   001B90  D7FC               	bra	u6127
  1699   001B92                     
  1700                           ;APP/application.c: 93:     }
  1701   001B92  0100               	movlb	0	; () banked
  1702   001B94  2BFB               	incf	intro_msg@l_counter_258& (0+255),f,b
  1703   001B96                     l6101:
  1704                           
  1705                           ; BSR set to: 0
  1706   001B96  0EF2               	movlw	low intro_msg@control_txt
  1707   001B98  6E17               	movwf	strlen@s^0,c
  1708   001B9A  EC01  F018         	call	_strlen	;wreg free
  1709   001B9E  0100               	movlb	0	; () banked
  1710   001BA0  51FB               	movf	intro_msg@l_counter_258& (0+255),w,b
  1711   001BA2  6E2F               	movwf	??_intro_msg^0,c
  1712   001BA4  6A30               	clrf	(??_intro_msg+1)^0,c
  1713   001BA6  5017               	movf	?_strlen^0,w,c
  1714   001BA8  5C2F               	subwf	??_intro_msg^0,w,c
  1715   001BAA  5018               	movf	(?_strlen+1)^0,w,c
  1716   001BAC  5830               	subwfb	(??_intro_msg+1)^0,w,c
  1717   001BAE  A0D8               	btfss	status,0,c
  1718   001BB0  EFDC  F00D         	goto	u5331
  1719   001BB4  EFDE  F00D         	goto	u5330
  1720   001BB8                     u5331:
  1721   001BB8  EFB8  F00D         	goto	l6095
  1722   001BBC                     u5330:
  1723   001BBC                     
  1724                           ; BSR set to: 0
  1725                           ;APP/application.c: 95:     _delay((unsigned long)((1500)*(8000000/4000.0)));
  1726   001BBC  0E10               	movlw	16
  1727   001BBE  6E30               	movwf	(??_intro_msg+1)^0,c
  1728   001BC0  0E39               	movlw	57
  1729   001BC2  6E2F               	movwf	??_intro_msg^0,c
  1730   001BC4  0E0E               	movlw	14
  1731   001BC6                     u6137:
  1732   001BC6  2EE8               	decfsz	wreg,f,c
  1733   001BC8  D7FE               	bra	u6137
  1734   001BCA  2E2F               	decfsz	??_intro_msg^0,f,c
  1735   001BCC  D7FC               	bra	u6137
  1736   001BCE  2E30               	decfsz	(??_intro_msg+1)^0,f,c
  1737   001BD0  D7FA               	bra	u6137
  1738   001BD2                     
  1739                           ;APP/application.c: 96:     ret = lcd_4bit_send_command(&lcd_4bits, 0x01);
  1740   001BD2  0EB9               	movlw	low _lcd_4bits
  1741   001BD4  6E26               	movwf	lcd_4bit_send_command@_lcd^0,c
  1742   001BD6  0E01               	movlw	1
  1743   001BD8  6E27               	movwf	lcd_4bit_send_command@command^0,c
  1744   001BDA  EC70  F016         	call	_lcd_4bit_send_command	;wreg free
  1745   001BDE  0100               	movlb	0	; () banked
  1746   001BE0  6FFC               	movwf	intro_msg@ret& (0+255),b
  1747   001BE2                     
  1748                           ; BSR set to: 0
  1749                           ;APP/application.c: 98:     return ret;
  1750   001BE2  51FC               	movf	intro_msg@ret& (0+255),w,b
  1751   001BE4                     
  1752                           ; BSR set to: 0
  1753   001BE4  0012               	return		;funcret
  1754   001BE6                     __end_of_intro_msg:
  1755                           	callstack 0
  1756                           
  1757 ;; *************** function _strlen *****************
  1758 ;; Defined at:
  1759 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strlen.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;  s               1   22[COMRAM] PTR const unsigned char 
  1762 ;;		 -> intro_msg@control_txt(8), intro_msg@temp_txt(12), 
  1763 ;; Auto vars:     Size  Location     Type
  1764 ;;  a               1   24[COMRAM] PTR const unsigned char 
  1765 ;;		 -> intro_msg@control_txt(8), intro_msg@temp_txt(12), 
  1766 ;; Return value:  Size  Location     Type
  1767 ;;                  2   22[COMRAM] unsigned int 
  1768 ;; Registers used:
  1769 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1775 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1776 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1778 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1779 ;;Total ram usage:        3 bytes
  1780 ;; Hardware stack levels used: 1
  1781 ;; Hardware stack levels required when called: 8
  1782 ;; This function calls:
  1783 ;;		Nothing
  1784 ;; This function is called by:
  1785 ;;		_intro_msg
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           	psect	text4
  1790   003002                     __ptext4:
  1791                           	callstack 0
  1792   003002                     _strlen:
  1793                           	callstack 21
  1794   003002  C017  F019         	movff	strlen@s,strlen@a
  1795   003006  EF06  F018         	goto	l5959
  1796   00300A                     l5957:
  1797   00300A  2A17               	incf	strlen@s^0,f,c
  1798   00300C                     l5959:
  1799   00300C  5017               	movf	strlen@s^0,w,c
  1800   00300E  6ED9               	movwf	fsr2l,c
  1801   003010  6ADA               	clrf	fsr2h,c
  1802   003012  50DF               	movf	indf2,w,c
  1803   003014  A4D8               	btfss	status,2,c
  1804   003016  EF0F  F018         	goto	u5191
  1805   00301A  EF11  F018         	goto	u5190
  1806   00301E                     u5191:
  1807   00301E  EF05  F018         	goto	l5957
  1808   003022                     u5190:
  1809   003022  5019               	movf	strlen@a^0,w,c
  1810   003024  5C17               	subwf	strlen@s^0,w,c
  1811   003026  6E17               	movwf	?_strlen^0,c
  1812   003028  6A18               	clrf	(?_strlen+1)^0,c
  1813   00302A  BE17               	btfsc	?_strlen^0,7,c
  1814   00302C  0618               	decf	(?_strlen+1)^0,f,c
  1815   00302E  0012               	return		;funcret
  1816   003030                     __end_of_strlen:
  1817                           	callstack 0
  1818                           
  1819 ;; *************** function _dc_motor_stop *****************
  1820 ;; Defined at:
  1821 ;;		line 41 in file "ECUAL/DC_Motor/dc_motor.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;  _dc_motor       1   30[COMRAM] PTR const struct .
  1824 ;;		 -> motor_2(2), motor_1(2), 
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;  ret             1   31[COMRAM] unsigned char 
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  1    wreg      unsigned char 
  1829 ;; Registers used:
  1830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1836 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1837 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1839 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1840 ;;Total ram usage:        2 bytes
  1841 ;; Hardware stack levels used: 1
  1842 ;; Hardware stack levels required when called: 9
  1843 ;; This function calls:
  1844 ;;		_gpio_pin_write_logic
  1845 ;; This function is called by:
  1846 ;;		_main
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850                           	psect	text5
  1851   002E8E                     __ptext5:
  1852                           	callstack 0
  1853   002E8E                     _dc_motor_stop:
  1854                           	callstack 21
  1855   002E8E                     
  1856                           ;ECUAL/DC_Motor/dc_motor.c: 43:     if(((void*)0) == _dc_motor){
  1857   002E8E  501F               	movf	dc_motor_stop@_dc_motor^0,w,c
  1858   002E90  A4D8               	btfss	status,2,c
  1859   002E92  EF4D  F017         	goto	u5391
  1860   002E96  EF4F  F017         	goto	u5390
  1861   002E9A                     u5391:
  1862   002E9A  EF53  F017         	goto	l6159
  1863   002E9E                     u5390:
  1864   002E9E                     
  1865                           ;ECUAL/DC_Motor/dc_motor.c: 44:         ret = (Std_ReturnType)0x01U;
  1866   002E9E  0E01               	movlw	1
  1867   002EA0  6E20               	movwf	dc_motor_stop@ret^0,c
  1868                           
  1869                           ;ECUAL/DC_Motor/dc_motor.c: 45:     }else{
  1870   002EA2  EF61  F017         	goto	l6161
  1871   002EA6                     l6159:
  1872                           
  1873                           ;ECUAL/DC_Motor/dc_motor.c: 46:         ret = gpio_pin_write_logic(&(_dc_motor->motor_pi
      +                          n[0x00U]), GPIO_LOW);
  1874   002EA6  C01F  F017         	movff	dc_motor_stop@_dc_motor,gpio_pin_write_logic@_pin_config
  1875   002EAA  0E00               	movlw	0
  1876   002EAC  6E18               	movwf	gpio_pin_write_logic@logic^0,c
  1877   002EAE  ECF3  F00D         	call	_gpio_pin_write_logic	;wreg free
  1878   002EB2  6E20               	movwf	dc_motor_stop@ret^0,c
  1879                           
  1880                           ;ECUAL/DC_Motor/dc_motor.c: 47:         ret = gpio_pin_write_logic(&(_dc_motor->motor_pi
      +                          n[0x01U]), GPIO_LOW);
  1881   002EB4  281F               	incf	dc_motor_stop@_dc_motor^0,w,c
  1882   002EB6  6E17               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1883   002EB8  0E00               	movlw	0
  1884   002EBA  6E18               	movwf	gpio_pin_write_logic@logic^0,c
  1885   002EBC  ECF3  F00D         	call	_gpio_pin_write_logic	;wreg free
  1886   002EC0  6E20               	movwf	dc_motor_stop@ret^0,c
  1887   002EC2                     l6161:
  1888                           
  1889                           ;ECUAL/DC_Motor/dc_motor.c: 49:     return ret;
  1890   002EC2  5020               	movf	dc_motor_stop@ret^0,w,c
  1891   002EC4  0012               	return		;funcret
  1892   002EC6                     __end_of_dc_motor_stop:
  1893                           	callstack 0
  1894                           
  1895 ;; *************** function _dc_motor_move_CW *****************
  1896 ;; Defined at:
  1897 ;;		line 21 in file "ECUAL/DC_Motor/dc_motor.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  _dc_motor       1   30[COMRAM] PTR const struct .
  1900 ;;		 -> motor_2(2), motor_1(2), 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  ret             1   31[COMRAM] unsigned char 
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  1    wreg      unsigned char 
  1905 ;; Registers used:
  1906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1912 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1913 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1915 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1916 ;;Total ram usage:        2 bytes
  1917 ;; Hardware stack levels used: 1
  1918 ;; Hardware stack levels required when called: 9
  1919 ;; This function calls:
  1920 ;;		_gpio_pin_write_logic
  1921 ;; This function is called by:
  1922 ;;		_main
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           	psect	text6
  1927   002EC6                     __ptext6:
  1928                           	callstack 0
  1929   002EC6                     _dc_motor_move_CW:
  1930                           	callstack 21
  1931   002EC6                     
  1932                           ;ECUAL/DC_Motor/dc_motor.c: 23:     if(((void*)0) == _dc_motor){
  1933   002EC6  501F               	movf	dc_motor_move_CW@_dc_motor^0,w,c
  1934   002EC8  A4D8               	btfss	status,2,c
  1935   002ECA  EF69  F017         	goto	u5401
  1936   002ECE  EF6B  F017         	goto	u5400
  1937   002ED2                     u5401:
  1938   002ED2  EF6F  F017         	goto	l6169
  1939   002ED6                     u5400:
  1940   002ED6                     
  1941                           ;ECUAL/DC_Motor/dc_motor.c: 24:         ret = (Std_ReturnType)0x01U;
  1942   002ED6  0E01               	movlw	1
  1943   002ED8  6E20               	movwf	dc_motor_move_CW@ret^0,c
  1944                           
  1945                           ;ECUAL/DC_Motor/dc_motor.c: 25:     }else{
  1946   002EDA  EF7D  F017         	goto	l6171
  1947   002EDE                     l6169:
  1948                           
  1949                           ;ECUAL/DC_Motor/dc_motor.c: 26:         ret = gpio_pin_write_logic(&(_dc_motor->motor_pi
      +                          n[0x00U]), GPIO_HIGH);
  1950   002EDE  C01F  F017         	movff	dc_motor_move_CW@_dc_motor,gpio_pin_write_logic@_pin_config
  1951   002EE2  0E01               	movlw	1
  1952   002EE4  6E18               	movwf	gpio_pin_write_logic@logic^0,c
  1953   002EE6  ECF3  F00D         	call	_gpio_pin_write_logic	;wreg free
  1954   002EEA  6E20               	movwf	dc_motor_move_CW@ret^0,c
  1955                           
  1956                           ;ECUAL/DC_Motor/dc_motor.c: 27:         ret = gpio_pin_write_logic(&(_dc_motor->motor_pi
      +                          n[0x01U]), GPIO_LOW);
  1957   002EEC  281F               	incf	dc_motor_move_CW@_dc_motor^0,w,c
  1958   002EEE  6E17               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1959   002EF0  0E00               	movlw	0
  1960   002EF2  6E18               	movwf	gpio_pin_write_logic@logic^0,c
  1961   002EF4  ECF3  F00D         	call	_gpio_pin_write_logic	;wreg free
  1962   002EF8  6E20               	movwf	dc_motor_move_CW@ret^0,c
  1963   002EFA                     l6171:
  1964                           
  1965                           ;ECUAL/DC_Motor/dc_motor.c: 29:     return ret;
  1966   002EFA  5020               	movf	dc_motor_move_CW@ret^0,w,c
  1967   002EFC  0012               	return		;funcret
  1968   002EFE                     __end_of_dc_motor_move_CW:
  1969                           	callstack 0
  1970                           
  1971 ;; *************** function _danger_msg *****************
  1972 ;; Defined at:
  1973 ;;		line 101 in file "APP/application.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;		None
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;  ret             1   54[COMRAM] unsigned char 
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      unsigned char 
  1980 ;; Registers used:
  1981 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1988 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1989 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1990 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1991 ;;Total ram usage:        3 bytes
  1992 ;; Hardware stack levels used: 1
  1993 ;; Hardware stack levels required when called: 13
  1994 ;; This function calls:
  1995 ;;		_buzzer_turn_off
  1996 ;;		_buzzer_turn_on
  1997 ;;		_lcd_4bit_send_string_pos
  1998 ;;		_led_TOGGLE
  1999 ;; This function is called by:
  2000 ;;		_main
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           	psect	text7
  2005   002714                     __ptext7:
  2006                           	callstack 0
  2007   002714                     _danger_msg:
  2008                           	callstack 17
  2009   002714  0EB9               	movlw	low _lcd_4bits
  2010   002716  6E2F               	movwf	lcd_4bit_send_string_pos@_lcd^0,c
  2011   002718  0E02               	movlw	2
  2012   00271A  6E30               	movwf	lcd_4bit_send_string_pos@row^0,c
  2013   00271C  0E03               	movlw	3
  2014   00271E  6E31               	movwf	lcd_4bit_send_string_pos@column^0,c
  2015   002720  0E26               	movlw	low STR_4
  2016   002722  6E32               	movwf	lcd_4bit_send_string_pos@str^0,c
  2017   002724  5032               	movf	lcd_4bit_send_string_pos@str^0,w,c
  2018   002726  A4D8               	btfss	status,2,c
  2019   002728  0E10               	movlw	high __smallconst
  2020   00272A  6E33               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  2021   00272C  EC28  F017         	call	_lcd_4bit_send_string_pos	;wreg free
  2022   002730  0E65               	movlw	low _red_led
  2023   002732  6E1D               	movwf	led_TOGGLE@led^0,c
  2024   002734  EC17  F014         	call	_led_TOGGLE	;wreg free
  2025   002738  0E64               	movlw	low _buzzer
  2026   00273A  6E1F               	movwf	buzzer_turn_on@_buzzer^0,c
  2027   00273C  EC46  F018         	call	_buzzer_turn_on	;wreg free
  2028   002740                     
  2029                           ;APP/application.c: 107:     _delay((unsigned long)((200)*(8000000/4000.0)));
  2030   002740  0E03               	movlw	3
  2031   002742  6E36               	movwf	(??_danger_msg+1)^0,c
  2032   002744  0E08               	movlw	8
  2033   002746  6E35               	movwf	??_danger_msg^0,c
  2034   002748  0E77               	movlw	119
  2035   00274A                     u6147:
  2036   00274A  2EE8               	decfsz	wreg,f,c
  2037   00274C  D7FE               	bra	u6147
  2038   00274E  2E35               	decfsz	??_danger_msg^0,f,c
  2039   002750  D7FC               	bra	u6147
  2040   002752  2E36               	decfsz	(??_danger_msg+1)^0,f,c
  2041   002754  D7FA               	bra	u6147
  2042   002756  0000               	nop	
  2043   002758  0EB9               	movlw	low _lcd_4bits
  2044   00275A  6E2F               	movwf	lcd_4bit_send_string_pos@_lcd^0,c
  2045   00275C  0E02               	movlw	2
  2046   00275E  6E30               	movwf	lcd_4bit_send_string_pos@row^0,c
  2047   002760  0E03               	movlw	3
  2048   002762  6E31               	movwf	lcd_4bit_send_string_pos@column^0,c
  2049   002764  0E0E               	movlw	low STR_5
  2050   002766  6E32               	movwf	lcd_4bit_send_string_pos@str^0,c
  2051   002768  5032               	movf	lcd_4bit_send_string_pos@str^0,w,c
  2052   00276A  A4D8               	btfss	status,2,c
  2053   00276C  0E10               	movlw	high __smallconst
  2054   00276E  6E33               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  2055   002770  EC28  F017         	call	_lcd_4bit_send_string_pos	;wreg free
  2056   002774  0E65               	movlw	low _red_led
  2057   002776  6E1D               	movwf	led_TOGGLE@led^0,c
  2058   002778  EC17  F014         	call	_led_TOGGLE	;wreg free
  2059   00277C                     
  2060                           ;APP/application.c: 110:     ret = buzzer_turn_off(&buzzer);
  2061   00277C  0E64               	movlw	low _buzzer
  2062   00277E  6E1F               	movwf	buzzer_turn_off@_buzzer^0,c
  2063   002780  EC5B  F018         	call	_buzzer_turn_off	;wreg free
  2064   002784  6E37               	movwf	danger_msg@ret^0,c
  2065   002786                     
  2066                           ;APP/application.c: 111:     _delay((unsigned long)((200)*(8000000/4000.0)));
  2067   002786  0E03               	movlw	3
  2068   002788  6E36               	movwf	(??_danger_msg+1)^0,c
  2069   00278A  0E08               	movlw	8
  2070   00278C  6E35               	movwf	??_danger_msg^0,c
  2071   00278E  0E77               	movlw	119
  2072   002790                     u6157:
  2073   002790  2EE8               	decfsz	wreg,f,c
  2074   002792  D7FE               	bra	u6157
  2075   002794  2E35               	decfsz	??_danger_msg^0,f,c
  2076   002796  D7FC               	bra	u6157
  2077   002798  2E36               	decfsz	(??_danger_msg+1)^0,f,c
  2078   00279A  D7FA               	bra	u6157
  2079   00279C  0000               	nop	
  2080                           
  2081                           ;APP/application.c: 112:     return ret;
  2082   00279E  5037               	movf	danger_msg@ret^0,w,c
  2083   0027A0  0012               	return		;funcret
  2084   0027A2                     __end_of_danger_msg:
  2085                           	callstack 0
  2086                           
  2087 ;; *************** function _led_TOGGLE *****************
  2088 ;; Defined at:
  2089 ;;		line 87 in file "ECUAL/LED/LED.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  led             1   28[COMRAM] PTR const struct .
  2092 ;;		 -> red_led(1), 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  led_pin_conf    1   31[COMRAM] struct .
  2095 ;;  ret             1   30[COMRAM] unsigned char 
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  1    wreg      unsigned char 
  2098 ;; Registers used:
  2099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2105 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2106 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2107 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2108 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2109 ;;Total ram usage:        4 bytes
  2110 ;; Hardware stack levels used: 1
  2111 ;; Hardware stack levels required when called: 9
  2112 ;; This function calls:
  2113 ;;		_gpio_pin_toggle_logic
  2114 ;; This function is called by:
  2115 ;;		_danger_msg
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119                           	psect	text8
  2120   00282E                     __ptext8:
  2121                           	callstack 0
  2122   00282E                     _led_TOGGLE:
  2123                           	callstack 20
  2124   00282E                     
  2125                           ;ECUAL/LED/LED.c: 89:     if(((void*)0) == led || (led -> pin) > (8 - 1)){
  2126   00282E  501D               	movf	led_TOGGLE@led^0,w,c
  2127   002830  B4D8               	btfsc	status,2,c
  2128   002832  EF1D  F014         	goto	u5201
  2129   002836  EF1F  F014         	goto	u5200
  2130   00283A                     u5201:
  2131   00283A  EF2D  F014         	goto	l5969
  2132   00283E                     u5200:
  2133   00283E  501D               	movf	led_TOGGLE@led^0,w,c
  2134   002840  6ED9               	movwf	fsr2l,c
  2135   002842  6ADA               	clrf	fsr2h,c
  2136   002844  38DF               	swapf	223,w,c
  2137   002846  0B07               	andlw	7
  2138   002848  6E1E               	movwf	??_led_TOGGLE^0,c
  2139   00284A  0E07               	movlw	7
  2140   00284C  641E               	cpfsgt	??_led_TOGGLE^0,c
  2141   00284E  EF2B  F014         	goto	u5211
  2142   002852  EF2D  F014         	goto	u5210
  2143   002856                     u5211:
  2144   002856  EF31  F014         	goto	l347
  2145   00285A                     u5210:
  2146   00285A                     l5969:
  2147                           
  2148                           ;ECUAL/LED/LED.c: 90:         ret = (Std_ReturnType)0x01U;
  2149   00285A  0E01               	movlw	1
  2150   00285C  6E1F               	movwf	led_TOGGLE@ret^0,c
  2151                           
  2152                           ;ECUAL/LED/LED.c: 91:     }
  2153   00285E  EF5A  F014         	goto	l5979
  2154   002862                     l347:
  2155                           
  2156                           ;ECUAL/LED/LED.c: 93:         pin_config_t led_pin_config = {.port = led->port, .pin = l
      +                          ed->pin,
  2157   002862  C059  F020         	movff	led_TOGGLE@F3076,led_TOGGLE@led_pin_config
  2158   002866  501D               	movf	led_TOGGLE@led^0,w,c
  2159   002868  6ED9               	movwf	fsr2l,c
  2160   00286A  6ADA               	clrf	fsr2h,c
  2161   00286C  50DF               	movf	223,w,c
  2162   00286E  0B0F               	andlw	15
  2163   002870  6E1E               	movwf	??_led_TOGGLE^0,c
  2164   002872  5020               	movf	led_TOGGLE@led_pin_config^0,w,c
  2165   002874  181E               	xorwf	??_led_TOGGLE^0,w,c
  2166   002876  0BF8               	andlw	-8
  2167   002878  181E               	xorwf	??_led_TOGGLE^0,w,c
  2168   00287A  6E20               	movwf	led_TOGGLE@led_pin_config^0,c
  2169   00287C  501D               	movf	led_TOGGLE@led^0,w,c
  2170   00287E  6ED9               	movwf	fsr2l,c
  2171   002880  6ADA               	clrf	fsr2h,c
  2172   002882  38DF               	swapf	223,w,c
  2173   002884  0B07               	andlw	7
  2174   002886  6E1E               	movwf	??_led_TOGGLE^0,c
  2175   002888  461E               	rlncf	??_led_TOGGLE^0,f,c
  2176   00288A  461E               	rlncf	??_led_TOGGLE^0,f,c
  2177   00288C  461E               	rlncf	??_led_TOGGLE^0,f,c
  2178   00288E  5020               	movf	led_TOGGLE@led_pin_config^0,w,c
  2179   002890  181E               	xorwf	??_led_TOGGLE^0,w,c
  2180   002892  0BC7               	andlw	-57
  2181   002894  181E               	xorwf	??_led_TOGGLE^0,w,c
  2182   002896  6E20               	movwf	led_TOGGLE@led_pin_config^0,c
  2183   002898  9C20               	bcf	led_TOGGLE@led_pin_config^0,6,c
  2184   00289A  501D               	movf	led_TOGGLE@led^0,w,c
  2185   00289C  6ED9               	movwf	fsr2l,c
  2186   00289E  6ADA               	clrf	fsr2h,c
  2187   0028A0  AEDF               	btfss	indf2,7,c
  2188   0028A2  D002               	bra	u5225
  2189   0028A4  8E20               	bsf	led_TOGGLE@led_pin_config^0,7,c
  2190   0028A6  D001               	bra	u5227
  2191   0028A8                     u5225:
  2192   0028A8  9E20               	bcf	led_TOGGLE@led_pin_config^0,7,c
  2193   0028AA                     u5227:
  2194   0028AA                     
  2195                           ;ECUAL/LED/LED.c: 95:         ret = gpio_pin_toggle_logic(&led_pin_config);
  2196   0028AA  0E20               	movlw	low led_TOGGLE@led_pin_config
  2197   0028AC  6E17               	movwf	gpio_pin_toggle_logic@_pin_config^0,c
  2198   0028AE  ECD1  F013         	call	_gpio_pin_toggle_logic	;wreg free
  2199   0028B2  6E1F               	movwf	led_TOGGLE@ret^0,c
  2200   0028B4                     l5979:
  2201                           
  2202                           ;ECUAL/LED/LED.c: 97:     return ret;
  2203   0028B4  501F               	movf	led_TOGGLE@ret^0,w,c
  2204   0028B6  0012               	return		;funcret
  2205   0028B8                     __end_of_led_TOGGLE:
  2206                           	callstack 0
  2207                           
  2208 ;; *************** function _gpio_pin_toggle_logic *****************
  2209 ;; Defined at:
  2210 ;;		line 135 in file "MCAL/GPIO/gpio.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  _pin_config     1   22[COMRAM] PTR const struct .
  2213 ;;		 -> led_TOGGLE@led_pin_config(1), 
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;  ret             1   27[COMRAM] unsigned char 
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  1    wreg      unsigned char 
  2218 ;; Registers used:
  2219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2225 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2226 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2227 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2228 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2229 ;;Total ram usage:        6 bytes
  2230 ;; Hardware stack levels used: 1
  2231 ;; Hardware stack levels required when called: 8
  2232 ;; This function calls:
  2233 ;;		Nothing
  2234 ;; This function is called by:
  2235 ;;		_led_TOGGLE
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           	psect	text9
  2240   0027A2                     __ptext9:
  2241                           	callstack 0
  2242   0027A2                     _gpio_pin_toggle_logic:
  2243                           	callstack 20
  2244   0027A2                     
  2245                           ;MCAL/GPIO/gpio.c: 136:     Std_ReturnType ret = (Std_ReturnType)0x00U;
  2246   0027A2  0E00               	movlw	0
  2247   0027A4  6E1C               	movwf	gpio_pin_toggle_logic@ret^0,c
  2248                           
  2249                           ;MCAL/GPIO/gpio.c: 137:     if(((void*)0) == _pin_config || (_pin_config -> pin) > 8 - 1
      +                           ){
  2250   0027A6  5017               	movf	gpio_pin_toggle_logic@_pin_config^0,w,c
  2251   0027A8  B4D8               	btfsc	status,2,c
  2252   0027AA  EFD9  F013         	goto	u2981
  2253   0027AE  EFDB  F013         	goto	u2980
  2254   0027B2                     u2981:
  2255   0027B2  EFEB  F013         	goto	l4217
  2256   0027B6                     u2980:
  2257   0027B6  5017               	movf	gpio_pin_toggle_logic@_pin_config^0,w,c
  2258   0027B8  6ED9               	movwf	fsr2l,c
  2259   0027BA  6ADA               	clrf	fsr2h,c
  2260   0027BC  30DF               	rrcf	223,w,c
  2261   0027BE  32E8               	rrcf	wreg,f,c
  2262   0027C0  32E8               	rrcf	wreg,f,c
  2263   0027C2  0B07               	andlw	7
  2264   0027C4  6E18               	movwf	??_gpio_pin_toggle_logic^0,c
  2265   0027C6  0E07               	movlw	7
  2266   0027C8  6418               	cpfsgt	??_gpio_pin_toggle_logic^0,c
  2267   0027CA  EFE9  F013         	goto	u2991
  2268   0027CE  EFEB  F013         	goto	u2990
  2269   0027D2                     u2991:
  2270   0027D2  EFEF  F013         	goto	l4219
  2271   0027D6                     u2990:
  2272   0027D6                     l4217:
  2273                           
  2274                           ;MCAL/GPIO/gpio.c: 138:         ret = (Std_ReturnType)0x01U;
  2275   0027D6  0E01               	movlw	1
  2276   0027D8  6E1C               	movwf	gpio_pin_toggle_logic@ret^0,c
  2277                           
  2278                           ;MCAL/GPIO/gpio.c: 139:     } else{
  2279   0027DA  EF15  F014         	goto	l4221
  2280   0027DE                     l4219:
  2281                           
  2282                           ;MCAL/GPIO/gpio.c: 140:         *lat_registers[_pin_config -> port] ^= ((uint8_t)0x01 <<
      +                           _pin_config -> pin);
  2283   0027DE  5017               	movf	gpio_pin_toggle_logic@_pin_config^0,w,c
  2284   0027E0  6ED9               	movwf	fsr2l,c
  2285   0027E2  6ADA               	clrf	fsr2h,c
  2286   0027E4  30DF               	rrcf	223,w,c
  2287   0027E6  32E8               	rrcf	wreg,f,c
  2288   0027E8  32E8               	rrcf	wreg,f,c
  2289   0027EA  0B07               	andlw	7
  2290   0027EC  6E18               	movwf	??_gpio_pin_toggle_logic^0,c
  2291   0027EE  0E01               	movlw	1
  2292   0027F0  6E19               	movwf	(??_gpio_pin_toggle_logic+1)^0,c
  2293   0027F2  2A18               	incf	??_gpio_pin_toggle_logic^0,f,c
  2294   0027F4  EFFE  F013         	goto	u3004
  2295   0027F8                     u3005:
  2296   0027F8  90D8               	bcf	status,0,c
  2297   0027FA  3619               	rlcf	(??_gpio_pin_toggle_logic+1)^0,f,c
  2298   0027FC                     u3004:
  2299   0027FC  2E18               	decfsz	??_gpio_pin_toggle_logic^0,f,c
  2300   0027FE  EFFC  F013         	goto	u3005
  2301   002802  5017               	movf	gpio_pin_toggle_logic@_pin_config^0,w,c
  2302   002804  6ED9               	movwf	fsr2l,c
  2303   002806  6ADA               	clrf	fsr2h,c
  2304   002808  50DF               	movf	223,w,c
  2305   00280A  0B07               	andlw	7
  2306   00280C  0D02               	mullw	2
  2307   00280E  50F3               	movf	243,w,c
  2308   002810  0F96               	addlw	low _lat_registers
  2309   002812  6ED9               	movwf	fsr2l,c
  2310   002814  6ADA               	clrf	fsr2h,c
  2311   002816  CFDE F01A          	movff	postinc2,??_gpio_pin_toggle_logic+2
  2312   00281A  CFDD F01B          	movff	postdec2,??_gpio_pin_toggle_logic+3
  2313   00281E  C01A  FFD9         	movff	??_gpio_pin_toggle_logic+2,fsr2l
  2314   002822  C01B  FFDA         	movff	??_gpio_pin_toggle_logic+3,fsr2h
  2315   002826  5019               	movf	(??_gpio_pin_toggle_logic+1)^0,w,c
  2316   002828  1ADF               	xorwf	indf2,f,c
  2317   00282A                     l4221:
  2318                           
  2319                           ;MCAL/GPIO/gpio.c: 142:     return ret;
  2320   00282A  501C               	movf	gpio_pin_toggle_logic@ret^0,w,c
  2321   00282C  0012               	return		;funcret
  2322   00282E                     __end_of_gpio_pin_toggle_logic:
  2323                           	callstack 0
  2324                           
  2325 ;; *************** function _lcd_4bit_send_string_pos *****************
  2326 ;; Defined at:
  2327 ;;		line 167 in file "ECUAL/LCD/lcd.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;  _lcd            1   46[COMRAM] PTR const struct .
  2330 ;;		 -> lcd_4bits(6), 
  2331 ;;  row             1   47[COMRAM] unsigned char 
  2332 ;;  column          1   48[COMRAM] unsigned char 
  2333 ;;  str             2   49[COMRAM] PTR unsigned char 
  2334 ;;		 -> STR_5(12), STR_4(12), STR_3(12), STR_2(12), 
  2335 ;;		 -> adc_res_txt(7), STR_1(13), 
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;  ret             1   51[COMRAM] unsigned char 
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  1    wreg      unsigned char 
  2340 ;; Registers used:
  2341 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2347 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2350 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2351 ;;Total ram usage:        6 bytes
  2352 ;; Hardware stack levels used: 1
  2353 ;; Hardware stack levels required when called: 12
  2354 ;; This function calls:
  2355 ;;		_lcd_4bit_send_string
  2356 ;;		_lcd_4bit_set_cursor
  2357 ;; This function is called by:
  2358 ;;		_main
  2359 ;;		_danger_msg
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363                           	psect	text10
  2364   002E50                     __ptext10:
  2365                           	callstack 0
  2366   002E50                     _lcd_4bit_send_string_pos:
  2367                           	callstack 18
  2368   002E50                     
  2369                           ;ECUAL/LCD/lcd.c: 170:     if(((void*)0) == _lcd){
  2370   002E50  502F               	movf	lcd_4bit_send_string_pos@_lcd^0,w,c
  2371   002E52  A4D8               	btfss	status,2,c
  2372   002E54  EF2E  F017         	goto	u5181
  2373   002E58  EF30  F017         	goto	u5180
  2374   002E5C                     u5181:
  2375   002E5C  EF34  F017         	goto	l5921
  2376   002E60                     u5180:
  2377   002E60                     
  2378                           ;ECUAL/LCD/lcd.c: 171:         ret = (Std_ReturnType)0x01U;
  2379   002E60  0E01               	movlw	1
  2380   002E62  6E34               	movwf	lcd_4bit_send_string_pos@ret^0,c
  2381                           
  2382                           ;ECUAL/LCD/lcd.c: 172:     }
  2383   002E64  EF45  F017         	goto	l5925
  2384   002E68                     l5921:
  2385   002E68  C02F  F029         	movff	lcd_4bit_send_string_pos@_lcd,lcd_4bit_set_cursor@_lcd
  2386   002E6C  C030  F02A         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
  2387   002E70  C031  F02B         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_cursor@column
  2388   002E74  EC48  F012         	call	_lcd_4bit_set_cursor	;wreg free
  2389   002E78                     
  2390                           ;ECUAL/LCD/lcd.c: 175:         ret = lcd_4bit_send_string(_lcd, str);
  2391   002E78  C02F  F029         	movff	lcd_4bit_send_string_pos@_lcd,lcd_4bit_send_string@_lcd
  2392   002E7C  C032  F02A         	movff	lcd_4bit_send_string_pos@str,lcd_4bit_send_string@str
  2393   002E80  C033  F02B         	movff	lcd_4bit_send_string_pos@str+1,lcd_4bit_send_string@str+1
  2394   002E84  ECA1  F014         	call	_lcd_4bit_send_string	;wreg free
  2395   002E88  6E34               	movwf	lcd_4bit_send_string_pos@ret^0,c
  2396   002E8A                     l5925:
  2397                           
  2398                           ;ECUAL/LCD/lcd.c: 177:    return ret;
  2399   002E8A  5034               	movf	lcd_4bit_send_string_pos@ret^0,w,c
  2400   002E8C  0012               	return		;funcret
  2401   002E8E                     __end_of_lcd_4bit_send_string_pos:
  2402                           	callstack 0
  2403                           
  2404 ;; *************** function _lcd_4bit_set_cursor *****************
  2405 ;; Defined at:
  2406 ;;		line 220 in file "ECUAL/LCD/lcd.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;  _lcd            1   40[COMRAM] PTR const struct .
  2409 ;;		 -> lcd_4bits(6), 
  2410 ;;  row             1   41[COMRAM] unsigned char 
  2411 ;;  column          1   42[COMRAM] unsigned char 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;  ret             1   45[COMRAM] unsigned char 
  2414 ;; Return value:  Size  Location     Type
  2415 ;;                  1    wreg      unsigned char 
  2416 ;; Registers used:
  2417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2423 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2424 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2425 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2426 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2427 ;;Total ram usage:        6 bytes
  2428 ;; Hardware stack levels used: 1
  2429 ;; Hardware stack levels required when called: 11
  2430 ;; This function calls:
  2431 ;;		_lcd_4bit_send_command
  2432 ;; This function is called by:
  2433 ;;		_intro_msg
  2434 ;;		_lcd_4bit_send_string_pos
  2435 ;;		_lcd_4bit_send_char_data_pos
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           	psect	text11
  2440   002490                     __ptext11:
  2441                           	callstack 0
  2442   002490                     _lcd_4bit_set_cursor:
  2443                           	callstack 18
  2444   002490                     
  2445                           ;ECUAL/LCD/lcd.c: 222:     if(((void*)0) == _lcd){
  2446   002490  5029               	movf	lcd_4bit_set_cursor@_lcd^0,w,c
  2447   002492  A4D8               	btfss	status,2,c
  2448   002494  EF4E  F012         	goto	u4951
  2449   002498  EF50  F012         	goto	u4950
  2450   00249C                     u4951:
  2451   00249C  EF80  F012         	goto	l5741
  2452   0024A0                     u4950:
  2453   0024A0                     l5727:
  2454                           
  2455                           ;ECUAL/LCD/lcd.c: 223:         ret = (Std_ReturnType)0x01U;
  2456   0024A0  0E01               	movlw	1
  2457   0024A2  6E2E               	movwf	lcd_4bit_set_cursor@ret^0,c
  2458                           
  2459                           ;ECUAL/LCD/lcd.c: 224:     }
  2460   0024A4  EF9D  F012         	goto	l5743
  2461   0024A8                     l5729:
  2462                           
  2463                           ;ECUAL/LCD/lcd.c: 228:             ret = lcd_4bit_send_command(_lcd, 0x80 + --column);
  2464   0024A8  C029  F026         	movff	lcd_4bit_set_cursor@_lcd,lcd_4bit_send_command@_lcd
  2465   0024AC  062B               	decf	lcd_4bit_set_cursor@column^0,f,c
  2466   0024AE  502B               	movf	lcd_4bit_set_cursor@column^0,w,c
  2467   0024B0  0F80               	addlw	128
  2468   0024B2  6E27               	movwf	lcd_4bit_send_command@command^0,c
  2469   0024B4  EC70  F016         	call	_lcd_4bit_send_command	;wreg free
  2470   0024B8  6E2E               	movwf	lcd_4bit_set_cursor@ret^0,c
  2471                           
  2472                           ;ECUAL/LCD/lcd.c: 229:             break;
  2473   0024BA  EF9D  F012         	goto	l5743
  2474   0024BE                     l5731:
  2475                           
  2476                           ;ECUAL/LCD/lcd.c: 231:             ret = lcd_4bit_send_command(_lcd, 0xC0 + --column);
  2477   0024BE  C029  F026         	movff	lcd_4bit_set_cursor@_lcd,lcd_4bit_send_command@_lcd
  2478   0024C2  062B               	decf	lcd_4bit_set_cursor@column^0,f,c
  2479   0024C4  502B               	movf	lcd_4bit_set_cursor@column^0,w,c
  2480   0024C6  0FC0               	addlw	192
  2481   0024C8  6E27               	movwf	lcd_4bit_send_command@command^0,c
  2482   0024CA  EC70  F016         	call	_lcd_4bit_send_command	;wreg free
  2483   0024CE  6E2E               	movwf	lcd_4bit_set_cursor@ret^0,c
  2484                           
  2485                           ;ECUAL/LCD/lcd.c: 232:             break;
  2486   0024D0  EF9D  F012         	goto	l5743
  2487   0024D4                     l5733:
  2488                           
  2489                           ;ECUAL/LCD/lcd.c: 234:             ret = lcd_4bit_send_command(_lcd, 0x94 + --column);
  2490   0024D4  C029  F026         	movff	lcd_4bit_set_cursor@_lcd,lcd_4bit_send_command@_lcd
  2491   0024D8  062B               	decf	lcd_4bit_set_cursor@column^0,f,c
  2492   0024DA  502B               	movf	lcd_4bit_set_cursor@column^0,w,c
  2493   0024DC  0F94               	addlw	148
  2494   0024DE  6E27               	movwf	lcd_4bit_send_command@command^0,c
  2495   0024E0  EC70  F016         	call	_lcd_4bit_send_command	;wreg free
  2496   0024E4  6E2E               	movwf	lcd_4bit_set_cursor@ret^0,c
  2497                           
  2498                           ;ECUAL/LCD/lcd.c: 235:             break;
  2499   0024E6  EF9D  F012         	goto	l5743
  2500   0024EA                     l5735:
  2501                           
  2502                           ;ECUAL/LCD/lcd.c: 237:             ret = lcd_4bit_send_command(_lcd, 0xD4 + --column);
  2503   0024EA  C029  F026         	movff	lcd_4bit_set_cursor@_lcd,lcd_4bit_send_command@_lcd
  2504   0024EE  062B               	decf	lcd_4bit_set_cursor@column^0,f,c
  2505   0024F0  502B               	movf	lcd_4bit_set_cursor@column^0,w,c
  2506   0024F2  0FD4               	addlw	212
  2507   0024F4  6E27               	movwf	lcd_4bit_send_command@command^0,c
  2508   0024F6  EC70  F016         	call	_lcd_4bit_send_command	;wreg free
  2509   0024FA  6E2E               	movwf	lcd_4bit_set_cursor@ret^0,c
  2510                           
  2511                           ;ECUAL/LCD/lcd.c: 238:             break;
  2512   0024FC  EF9D  F012         	goto	l5743
  2513   002500                     l5741:
  2514   002500  502A               	movf	lcd_4bit_set_cursor@row^0,w,c
  2515   002502  6E2C               	movwf	??_lcd_4bit_set_cursor^0,c
  2516   002504  6A2D               	clrf	(??_lcd_4bit_set_cursor+1)^0,c
  2517                           
  2518                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2519                           ; Switch size 1, requested type "simple"
  2520                           ; Number of cases is 1, Range of values is 0 to 0
  2521                           ; switch strategies available:
  2522                           ; Name         Instructions Cycles
  2523                           ; simple_byte            4     3 (average)
  2524                           ;	Chosen strategy is simple_byte
  2525   002506  502D               	movf	(??_lcd_4bit_set_cursor+1)^0,w,c
  2526   002508  0A00               	xorlw	0	; case 0
  2527   00250A  B4D8               	btfsc	status,2,c
  2528   00250C  EF8A  F012         	goto	l6877
  2529   002510  EF50  F012         	goto	l5727
  2530   002514                     l6877:
  2531                           
  2532                           ; Switch size 1, requested type "simple"
  2533                           ; Number of cases is 4, Range of values is 1 to 4
  2534                           ; switch strategies available:
  2535                           ; Name         Instructions Cycles
  2536                           ; simple_byte           13     7 (average)
  2537                           ;	Chosen strategy is simple_byte
  2538   002514  502C               	movf	??_lcd_4bit_set_cursor^0,w,c
  2539   002516  0A01               	xorlw	1	; case 1
  2540   002518  B4D8               	btfsc	status,2,c
  2541   00251A  EF54  F012         	goto	l5729
  2542   00251E  0A03               	xorlw	3	; case 2
  2543   002520  B4D8               	btfsc	status,2,c
  2544   002522  EF5F  F012         	goto	l5731
  2545   002526  0A01               	xorlw	1	; case 3
  2546   002528  B4D8               	btfsc	status,2,c
  2547   00252A  EF6A  F012         	goto	l5733
  2548   00252E  0A07               	xorlw	7	; case 4
  2549   002530  B4D8               	btfsc	status,2,c
  2550   002532  EF75  F012         	goto	l5735
  2551   002536  EF50  F012         	goto	l5727
  2552   00253A                     l5743:
  2553                           
  2554                           ;ECUAL/LCD/lcd.c: 245:     return ret;
  2555   00253A  502E               	movf	lcd_4bit_set_cursor@ret^0,w,c
  2556   00253C  0012               	return		;funcret
  2557   00253E                     __end_of_lcd_4bit_set_cursor:
  2558                           	callstack 0
  2559                           
  2560 ;; *************** function _lcd_4bit_send_string *****************
  2561 ;; Defined at:
  2562 ;;		line 141 in file "ECUAL/LCD/lcd.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;  _lcd            1   40[COMRAM] PTR const struct .
  2565 ;;		 -> lcd_4bits(6), 
  2566 ;;  str             2   41[COMRAM] PTR unsigned char 
  2567 ;;		 -> STR_5(12), STR_4(12), STR_3(12), STR_2(12), 
  2568 ;;		 -> adc_res_txt(7), STR_1(13), 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;  ret             1   43[COMRAM] unsigned char 
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  1    wreg      unsigned char 
  2573 ;; Registers used:
  2574 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2580 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2581 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2583 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2584 ;;Total ram usage:        4 bytes
  2585 ;; Hardware stack levels used: 1
  2586 ;; Hardware stack levels required when called: 11
  2587 ;; This function calls:
  2588 ;;		_lcd_4bit_send_char_data
  2589 ;; This function is called by:
  2590 ;;		_lcd_4bit_send_string_pos
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           	psect	text12
  2595   002942                     __ptext12:
  2596                           	callstack 0
  2597   002942                     _lcd_4bit_send_string:
  2598                           	callstack 18
  2599   002942                     
  2600                           ;ECUAL/LCD/lcd.c: 142:         Std_ReturnType ret =(Std_ReturnType)0x00U;
  2601   002942  0E00               	movlw	0
  2602   002944  6E2C               	movwf	lcd_4bit_send_string@ret^0,c
  2603                           
  2604                           ;ECUAL/LCD/lcd.c: 143:     if(((void*)0) == _lcd){
  2605   002946  5029               	movf	lcd_4bit_send_string@_lcd^0,w,c
  2606   002948  A4D8               	btfss	status,2,c
  2607   00294A  EFA9  F014         	goto	u5011
  2608   00294E  EFAB  F014         	goto	u5010
  2609   002952                     u5011:
  2610   002952  EFC8  F014         	goto	l5815
  2611   002956                     u5010:
  2612   002956                     
  2613                           ;ECUAL/LCD/lcd.c: 144:         ret = (Std_ReturnType)0x01U;
  2614   002956  0E01               	movlw	1
  2615   002958  6E2C               	movwf	lcd_4bit_send_string@ret^0,c
  2616                           
  2617                           ;ECUAL/LCD/lcd.c: 145:     }
  2618   00295A  EFE1  F014         	goto	l5817
  2619   00295E                     l5811:
  2620                           
  2621                           ;ECUAL/LCD/lcd.c: 148:             ret = lcd_4bit_send_char_data(_lcd, *str++);
  2622   00295E  C029  F026         	movff	lcd_4bit_send_string@_lcd,lcd_4bit_send_char_data@_lcd
  2623   002962  C02A  FFF6         	movff	lcd_4bit_send_string@str,tblptrl
  2624   002966  C02B  FFF7         	movff	lcd_4bit_send_string@str+1,tblptrh
  2625   00296A  0E00               	movlw	low (__smallconst shr (0+16))
  2626   00296C  6EF8               	movwf	tblptru,c
  2627   00296E  0E0F               	movlw	(high __ramtop+-1)
  2628   002970  64F7               	cpfsgt	tblptrh,c
  2629   002972  D003               	bra	u5027
  2630   002974  0008               	tblrd		*
  2631   002976  50F5               	movf	tablat,w,c
  2632   002978  D005               	bra	u5020
  2633   00297A                     u5027:
  2634   00297A  CFF6 FFE9          	movff	tblptrl,fsr0l
  2635   00297E  CFF7 FFEA          	movff	tblptrh,fsr0h
  2636   002982  50EF               	movf	indf0,w,c
  2637   002984                     u5020:
  2638   002984  6E27               	movwf	lcd_4bit_send_char_data@data^0,c
  2639   002986  EC14  F016         	call	_lcd_4bit_send_char_data	;wreg free
  2640   00298A  6E2C               	movwf	lcd_4bit_send_string@ret^0,c
  2641   00298C  4A2A               	infsnz	lcd_4bit_send_string@str^0,f,c
  2642   00298E  2A2B               	incf	(lcd_4bit_send_string@str+1)^0,f,c
  2643   002990                     l5815:
  2644                           
  2645                           ;ECUAL/LCD/lcd.c: 147:         while(*str){
  2646   002990  C02A  FFF6         	movff	lcd_4bit_send_string@str,tblptrl
  2647   002994  C02B  FFF7         	movff	lcd_4bit_send_string@str+1,tblptrh
  2648   002998  0E00               	movlw	low (__smallconst shr (0+16))
  2649   00299A  6EF8               	movwf	tblptru,c
  2650   00299C  0E0F               	movlw	(high __ramtop+-1)
  2651   00299E  64F7               	cpfsgt	tblptrh,c
  2652   0029A0  D003               	bra	u5037
  2653   0029A2  0008               	tblrd		*
  2654   0029A4  50F5               	movf	tablat,w,c
  2655   0029A6  D005               	bra	u5030
  2656   0029A8                     u5037:
  2657   0029A8  CFF6 FFE9          	movff	tblptrl,fsr0l
  2658   0029AC  CFF7 FFEA          	movff	tblptrh,fsr0h
  2659   0029B0  50EF               	movf	indf0,w,c
  2660   0029B2                     u5030:
  2661   0029B2  0900               	iorlw	0
  2662   0029B4  A4D8               	btfss	status,2,c
  2663   0029B6  EFDF  F014         	goto	u5041
  2664   0029BA  EFE1  F014         	goto	u5040
  2665   0029BE                     u5041:
  2666   0029BE  EFAF  F014         	goto	l5811
  2667   0029C2                     u5040:
  2668   0029C2                     l5817:
  2669                           
  2670                           ;ECUAL/LCD/lcd.c: 151:    return ret;
  2671   0029C2  502C               	movf	lcd_4bit_send_string@ret^0,w,c
  2672   0029C4  0012               	return		;funcret
  2673   0029C6                     __end_of_lcd_4bit_send_string:
  2674                           	callstack 0
  2675                           
  2676 ;; *************** function _lcd_4bit_send_char_data *****************
  2677 ;; Defined at:
  2678 ;;		line 89 in file "ECUAL/LCD/lcd.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;  _lcd            1   37[COMRAM] PTR const struct .
  2681 ;;		 -> lcd_4bits(6), 
  2682 ;;  data            1   38[COMRAM] unsigned char 
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;  ret             1   39[COMRAM] unsigned char 
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  1    wreg      unsigned char 
  2687 ;; Registers used:
  2688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2694 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2695 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2697 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2698 ;;Total ram usage:        3 bytes
  2699 ;; Hardware stack levels used: 1
  2700 ;; Hardware stack levels required when called: 10
  2701 ;; This function calls:
  2702 ;;		_gpio_pin_write_logic
  2703 ;;		_lcd_4bit_send_enable_signal
  2704 ;;		_lcd_send_4bits
  2705 ;; This function is called by:
  2706 ;;		_intro_msg
  2707 ;;		_lcd_4bit_send_string
  2708 ;;		_lcd_4bit_send_char_data_pos
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           	psect	text13
  2713   002C28                     __ptext13:
  2714                           	callstack 0
  2715   002C28                     _lcd_4bit_send_char_data:
  2716                           	callstack 18
  2717   002C28                     
  2718                           ;ECUAL/LCD/lcd.c: 91:     if(((void*)0) == _lcd){
  2719   002C28  5026               	movf	lcd_4bit_send_char_data@_lcd^0,w,c
  2720   002C2A  A4D8               	btfss	status,2,c
  2721   002C2C  EF1A  F016         	goto	u4721
  2722   002C30  EF1C  F016         	goto	u4720
  2723   002C34                     u4721:
  2724   002C34  EF20  F016         	goto	l5567
  2725   002C38                     u4720:
  2726   002C38                     
  2727                           ;ECUAL/LCD/lcd.c: 92:         ret = (Std_ReturnType)0x01U;
  2728   002C38  0E01               	movlw	1
  2729   002C3A  6E28               	movwf	lcd_4bit_send_char_data@ret^0,c
  2730                           
  2731                           ;ECUAL/LCD/lcd.c: 93:     }
  2732   002C3C  EF40  F016         	goto	l5569
  2733   002C40                     l5567:
  2734                           
  2735                           ;ECUAL/LCD/lcd.c: 95:         ret = gpio_pin_write_logic(&(_lcd->lcd_rs_pin), GPIO_HIGH)
      +                          ;
  2736   002C40  C026  F017         	movff	lcd_4bit_send_char_data@_lcd,gpio_pin_write_logic@_pin_config
  2737   002C44  0E01               	movlw	1
  2738   002C46  6E18               	movwf	gpio_pin_write_logic@logic^0,c
  2739   002C48  ECF3  F00D         	call	_gpio_pin_write_logic	;wreg free
  2740   002C4C  6E28               	movwf	lcd_4bit_send_char_data@ret^0,c
  2741                           
  2742                           ;ECUAL/LCD/lcd.c: 96:         ret = lcd_send_4bits(_lcd, data >> 4);
  2743   002C4E  C026  F01F         	movff	lcd_4bit_send_char_data@_lcd,lcd_send_4bits@_lcd
  2744   002C52  3827               	swapf	lcd_4bit_send_char_data@data^0,w,c
  2745   002C54  0B0F               	andlw	15
  2746   002C56  6E20               	movwf	lcd_send_4bits@data_command^0,c
  2747   002C58  ECB5  F015         	call	_lcd_send_4bits	;wreg free
  2748   002C5C  6E28               	movwf	lcd_4bit_send_char_data@ret^0,c
  2749                           
  2750                           ;ECUAL/LCD/lcd.c: 97:         ret = lcd_4bit_send_enable_signal(_lcd);
  2751   002C5E  C026  F01F         	movff	lcd_4bit_send_char_data@_lcd,lcd_4bit_send_enable_signal@_lcd
  2752   002C62  EC70  F018         	call	_lcd_4bit_send_enable_signal	;wreg free
  2753   002C66  6E28               	movwf	lcd_4bit_send_char_data@ret^0,c
  2754                           
  2755                           ;ECUAL/LCD/lcd.c: 98:         ret = lcd_send_4bits(_lcd, data);
  2756   002C68  C026  F01F         	movff	lcd_4bit_send_char_data@_lcd,lcd_send_4bits@_lcd
  2757   002C6C  C027  F020         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@data_command
  2758   002C70  ECB5  F015         	call	_lcd_send_4bits	;wreg free
  2759   002C74  6E28               	movwf	lcd_4bit_send_char_data@ret^0,c
  2760                           
  2761                           ;ECUAL/LCD/lcd.c: 99:         ret = lcd_4bit_send_enable_signal(_lcd);
  2762   002C76  C026  F01F         	movff	lcd_4bit_send_char_data@_lcd,lcd_4bit_send_enable_signal@_lcd
  2763   002C7A  EC70  F018         	call	_lcd_4bit_send_enable_signal	;wreg free
  2764   002C7E  6E28               	movwf	lcd_4bit_send_char_data@ret^0,c
  2765   002C80                     l5569:
  2766                           
  2767                           ;ECUAL/LCD/lcd.c: 101:    return ret;
  2768   002C80  5028               	movf	lcd_4bit_send_char_data@ret^0,w,c
  2769   002C82  0012               	return		;funcret
  2770   002C84                     __end_of_lcd_4bit_send_char_data:
  2771                           	callstack 0
  2772                           
  2773 ;; *************** function _buzzer_turn_on *****************
  2774 ;; Defined at:
  2775 ;;		line 43 in file "ECUAL/BUZZER/buzzer.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;  _buzzer         1   30[COMRAM] PTR const struct .
  2778 ;;		 -> buzzer(1), 
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;  ret             1   31[COMRAM] unsigned char 
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  1    wreg      unsigned char 
  2783 ;; Registers used:
  2784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2790 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2791 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2793 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2794 ;;Total ram usage:        2 bytes
  2795 ;; Hardware stack levels used: 1
  2796 ;; Hardware stack levels required when called: 9
  2797 ;; This function calls:
  2798 ;;		_gpio_pin_write_logic
  2799 ;; This function is called by:
  2800 ;;		_danger_msg
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text14
  2805   00308C                     __ptext14:
  2806                           	callstack 0
  2807   00308C                     _buzzer_turn_on:
  2808                           	callstack 20
  2809   00308C                     
  2810                           ;ECUAL/BUZZER/buzzer.c: 46:     if (((void*)0) == _buzzer)
  2811   00308C  501F               	movf	buzzer_turn_on@_buzzer^0,w,c
  2812   00308E  A4D8               	btfss	status,2,c
  2813   003090  EF4C  F018         	goto	u5231
  2814   003094  EF4E  F018         	goto	u5230
  2815   003098                     u5231:
  2816   003098  EF52  F018         	goto	l5987
  2817   00309C                     u5230:
  2818   00309C                     
  2819                           ;ECUAL/BUZZER/buzzer.c: 47:     {;ECUAL/BUZZER/buzzer.c: 48:         ret = (Std_ReturnTy
      +                          pe)0x01U;
  2820   00309C  0E01               	movlw	1
  2821   00309E  6E20               	movwf	buzzer_turn_on@ret^0,c
  2822                           
  2823                           ;ECUAL/BUZZER/buzzer.c: 49:     }
  2824   0030A0  EF59  F018         	goto	l5989
  2825   0030A4                     l5987:
  2826                           
  2827                           ;ECUAL/BUZZER/buzzer.c: 51:     {;ECUAL/BUZZER/buzzer.c: 52:         ret = gpio_pin_writ
      +                          e_logic(&(_buzzer->buzzer_pin), 0x01U);
  2828   0030A4  C01F  F017         	movff	buzzer_turn_on@_buzzer,gpio_pin_write_logic@_pin_config
  2829   0030A8  0E01               	movlw	1
  2830   0030AA  6E18               	movwf	gpio_pin_write_logic@logic^0,c
  2831   0030AC  ECF3  F00D         	call	_gpio_pin_write_logic	;wreg free
  2832   0030B0  6E20               	movwf	buzzer_turn_on@ret^0,c
  2833   0030B2                     l5989:
  2834                           
  2835                           ;ECUAL/BUZZER/buzzer.c: 54:     return ret;
  2836   0030B2  5020               	movf	buzzer_turn_on@ret^0,w,c
  2837   0030B4  0012               	return		;funcret
  2838   0030B6                     __end_of_buzzer_turn_on:
  2839                           	callstack 0
  2840                           
  2841 ;; *************** function _buzzer_turn_off *****************
  2842 ;; Defined at:
  2843 ;;		line 65 in file "ECUAL/BUZZER/buzzer.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;  _buzzer         1   30[COMRAM] PTR const struct .
  2846 ;;		 -> buzzer(1), 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;  ret             1   31[COMRAM] unsigned char 
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1    wreg      unsigned char 
  2851 ;; Registers used:
  2852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2858 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2859 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2861 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2862 ;;Total ram usage:        2 bytes
  2863 ;; Hardware stack levels used: 1
  2864 ;; Hardware stack levels required when called: 9
  2865 ;; This function calls:
  2866 ;;		_gpio_pin_write_logic
  2867 ;; This function is called by:
  2868 ;;		_danger_msg
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           	psect	text15
  2873   0030B6                     __ptext15:
  2874                           	callstack 0
  2875   0030B6                     _buzzer_turn_off:
  2876                           	callstack 20
  2877   0030B6                     
  2878                           ;ECUAL/BUZZER/buzzer.c: 68:     if (((void*)0) == _buzzer)
  2879   0030B6  501F               	movf	buzzer_turn_off@_buzzer^0,w,c
  2880   0030B8  A4D8               	btfss	status,2,c
  2881   0030BA  EF61  F018         	goto	u5241
  2882   0030BE  EF63  F018         	goto	u5240
  2883   0030C2                     u5241:
  2884   0030C2  EF67  F018         	goto	l5997
  2885   0030C6                     u5240:
  2886   0030C6                     
  2887                           ;ECUAL/BUZZER/buzzer.c: 69:     {;ECUAL/BUZZER/buzzer.c: 70:         ret = (Std_ReturnTy
      +                          pe)0x01U;
  2888   0030C6  0E01               	movlw	1
  2889   0030C8  6E20               	movwf	buzzer_turn_off@ret^0,c
  2890                           
  2891                           ;ECUAL/BUZZER/buzzer.c: 71:     }
  2892   0030CA  EF6E  F018         	goto	l5999
  2893   0030CE                     l5997:
  2894                           
  2895                           ;ECUAL/BUZZER/buzzer.c: 73:     {;ECUAL/BUZZER/buzzer.c: 74:         ret = gpio_pin_writ
      +                          e_logic(&(_buzzer->buzzer_pin), 0x00U);
  2896   0030CE  C01F  F017         	movff	buzzer_turn_off@_buzzer,gpio_pin_write_logic@_pin_config
  2897   0030D2  0E00               	movlw	0
  2898   0030D4  6E18               	movwf	gpio_pin_write_logic@logic^0,c
  2899   0030D6  ECF3  F00D         	call	_gpio_pin_write_logic	;wreg free
  2900   0030DA  6E20               	movwf	buzzer_turn_off@ret^0,c
  2901   0030DC                     l5999:
  2902                           
  2903                           ;ECUAL/BUZZER/buzzer.c: 76:     return ret;
  2904   0030DC  5020               	movf	buzzer_turn_off@ret^0,w,c
  2905   0030DE  0012               	return		;funcret
  2906   0030E0                     __end_of_buzzer_turn_off:
  2907                           	callstack 0
  2908                           
  2909 ;; *************** function _convert_uint16_to_string *****************
  2910 ;; Defined at:
  2911 ;;		line 514 in file "ECUAL/LCD/lcd.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;  value           2   53[COMRAM] unsigned short 
  2914 ;;  str             1   55[COMRAM] PTR unsigned char 
  2915 ;;		 -> adc_res_txt(7), 
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;  ret             1   56[COMRAM] unsigned char 
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  1    wreg      unsigned char 
  2920 ;; Registers used:
  2921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2927 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2928 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2930 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2931 ;;Total ram usage:        4 bytes
  2932 ;; Hardware stack levels used: 1
  2933 ;; Hardware stack levels required when called: 13
  2934 ;; This function calls:
  2935 ;;		_memset
  2936 ;;		_sprintf
  2937 ;; This function is called by:
  2938 ;;		_main
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           	psect	text16
  2943   002D3C                     __ptext16:
  2944                           	callstack 0
  2945   002D3C                     _convert_uint16_to_string:
  2946                           	callstack 17
  2947   002D3C                     
  2948                           ;ECUAL/LCD/lcd.c: 515:     Std_ReturnType ret = (Std_ReturnType)0x00U;
  2949   002D3C  0E00               	movlw	0
  2950   002D3E  6E39               	movwf	convert_uint16_to_string@ret^0,c
  2951                           
  2952                           ;ECUAL/LCD/lcd.c: 516:     if(((void*)0) == str){
  2953   002D40  5038               	movf	convert_uint16_to_string@str^0,w,c
  2954   002D42  A4D8               	btfss	status,2,c
  2955   002D44  EFA6  F016         	goto	u5351
  2956   002D48  EFA8  F016         	goto	u5350
  2957   002D4C                     u5351:
  2958   002D4C  EFAC  F016         	goto	l6127
  2959   002D50                     u5350:
  2960   002D50                     
  2961                           ;ECUAL/LCD/lcd.c: 517:         ret = (Std_ReturnType)0x01U;
  2962   002D50  0E01               	movlw	1
  2963   002D52  6E39               	movwf	convert_uint16_to_string@ret^0,c
  2964                           
  2965                           ;ECUAL/LCD/lcd.c: 518:     }
  2966   002D54  EFC2  F016         	goto	l6131
  2967   002D58                     l6127:
  2968                           
  2969                           ;ECUAL/LCD/lcd.c: 520:         memset(str, '\0', 6);
  2970   002D58  C038  F017         	movff	convert_uint16_to_string@str,memset@dest
  2971   002D5C  0E00               	movlw	0
  2972   002D5E  6E19               	movwf	(memset@c+1)^0,c
  2973   002D60  0E00               	movlw	0
  2974   002D62  6E18               	movwf	memset@c^0,c
  2975   002D64  0E00               	movlw	0
  2976   002D66  6E1B               	movwf	(memset@n+1)^0,c
  2977   002D68  0E06               	movlw	6
  2978   002D6A  6E1A               	movwf	memset@n^0,c
  2979   002D6C  ECE9  F017         	call	_memset	;wreg free
  2980   002D70                     
  2981                           ;ECUAL/LCD/lcd.c: 521:         sprintf(str, "%i", value);
  2982   002D70  C038  F030         	movff	convert_uint16_to_string@str,sprintf@s
  2983   002D74  0E3E               	movlw	low STR_6
  2984   002D76  6E31               	movwf	sprintf@fmt^0,c
  2985   002D78  C036  F032         	movff	convert_uint16_to_string@value,?_sprintf+2
  2986   002D7C  C037  F033         	movff	convert_uint16_to_string@value+1,?_sprintf+3
  2987   002D80  EC7F  F017         	call	_sprintf	;wreg free
  2988   002D84                     l6131:
  2989                           
  2990                           ;ECUAL/LCD/lcd.c: 523:     return ret;
  2991   002D84  5039               	movf	convert_uint16_to_string@ret^0,w,c
  2992   002D86  0012               	return		;funcret
  2993   002D88                     __end_of_convert_uint16_to_string:
  2994                           	callstack 0
  2995                           
  2996 ;; *************** function _sprintf *****************
  2997 ;; Defined at:
  2998 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;  s               1   47[COMRAM] PTR unsigned char 
  3001 ;;		 -> adc_res_txt(7), 
  3002 ;;  fmt             1   48[COMRAM] PTR const unsigned char 
  3003 ;;		 -> STR_8(3), STR_7(3), STR_6(3), 
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;  f              12    1[BANK0 ] struct _IO_FILE
  3006 ;;  ret             2    0        int 
  3007 ;;  ap              1    0[BANK0 ] PTR void [1]
  3008 ;;		 -> ?_sprintf(2), 
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  2   47[COMRAM] int 
  3011 ;; Registers used:
  3012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3018 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3019 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3021 ;;      Totals:         6      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3022 ;;Total ram usage:       19 bytes
  3023 ;; Hardware stack levels used: 1
  3024 ;; Hardware stack levels required when called: 12
  3025 ;; This function calls:
  3026 ;;		_vfprintf
  3027 ;; This function is called by:
  3028 ;;		_convert_uint16_to_string
  3029 ;;		_convert_uint8_to_string
  3030 ;;		_convert_uint32_to_string
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           	psect	text17
  3035   002EFE                     __ptext17:
  3036                           	callstack 0
  3037   002EFE                     _sprintf:
  3038                           	callstack 17
  3039   002EFE  0E32               	movlw	low (?_sprintf+2)
  3040   002F00  0100               	movlb	0	; () banked
  3041   002F02  6FE6               	movwf	sprintf@ap& (0+255),b
  3042   002F04  C030  F0E7         	movff	sprintf@s,sprintf@f
  3043   002F08                     
  3044                           ; BSR set to: 0
  3045   002F08  0E00               	movlw	0
  3046   002F0A  6FEB               	movwf	(sprintf@f+4)& (0+255),b
  3047   002F0C  0E00               	movlw	0
  3048   002F0E  6FEA               	movwf	(sprintf@f+3)& (0+255),b
  3049   002F10                     
  3050                           ; BSR set to: 0
  3051   002F10  0E00               	movlw	0
  3052   002F12  6FF2               	movwf	(sprintf@f+11)& (0+255),b
  3053   002F14  0E00               	movlw	0
  3054   002F16  6FF1               	movwf	(sprintf@f+10)& (0+255),b
  3055   002F18                     
  3056                           ; BSR set to: 0
  3057   002F18  0EE7               	movlw	low sprintf@f
  3058   002F1A  6E2C               	movwf	vfprintf@fp^0,c
  3059   002F1C  C031  F02D         	movff	sprintf@fmt,vfprintf@fmt
  3060   002F20  0EE6               	movlw	low sprintf@ap
  3061   002F22  6E2E               	movwf	vfprintf@ap^0,c
  3062   002F24  ECE8  F016         	call	_vfprintf	;wreg free
  3063   002F28  5030               	movf	sprintf@s^0,w,c
  3064   002F2A  0100               	movlb	0	; () banked
  3065   002F2C  25EA               	addwf	(sprintf@f+3)& (0+255),w,b
  3066   002F2E  6ED9               	movwf	fsr2l,c
  3067   002F30  6ADA               	clrf	fsr2h,c
  3068   002F32  6ADF               	clrf	indf2,c
  3069   002F34                     
  3070                           ; BSR set to: 0
  3071   002F34  0012               	return		;funcret
  3072   002F36                     __end_of_sprintf:
  3073                           	callstack 0
  3074                           
  3075 ;; *************** function _vfprintf *****************
  3076 ;; Defined at:
  3077 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;  fp              1   43[COMRAM] PTR struct _IO_FILE
  3080 ;;		 -> sprintf@f(12), 
  3081 ;;  fmt             1   44[COMRAM] PTR const unsigned char 
  3082 ;;		 -> STR_8(3), STR_7(3), STR_6(3), 
  3083 ;;  ap              1   45[COMRAM] PTR PTR void 
  3084 ;;		 -> sprintf@ap(1), 
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;  cfmt            1   46[COMRAM] PTR unsigned char 
  3087 ;;		 -> STR_8(3), STR_7(3), STR_6(3), 
  3088 ;; Return value:  Size  Location     Type
  3089 ;;                  2   43[COMRAM] int 
  3090 ;; Registers used:
  3091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3097 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3098 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3100 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3101 ;;Total ram usage:        4 bytes
  3102 ;; Hardware stack levels used: 1
  3103 ;; Hardware stack levels required when called: 11
  3104 ;; This function calls:
  3105 ;;		_vfpfcnvrt
  3106 ;; This function is called by:
  3107 ;;		_sprintf
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111                           	psect	text18
  3112   002DD0                     __ptext18:
  3113                           	callstack 0
  3114   002DD0                     _vfprintf:
  3115                           	callstack 17
  3116   002DD0                     
  3117                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3118   002DD0  C02D  F02F         	movff	vfprintf@fmt,vfprintf@cfmt
  3119                           
  3120                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3121   002DD4  EFF4  F016         	goto	l5891
  3122   002DD8                     l5889:
  3123                           
  3124                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3125   002DD8  C02C  F021         	movff	vfprintf@fp,vfpfcnvrt@fp
  3126   002DDC  0E2F               	movlw	low vfprintf@cfmt
  3127   002DDE  6E22               	movwf	vfpfcnvrt@fmt^0,c
  3128   002DE0  C02E  F023         	movff	vfprintf@ap,vfpfcnvrt@ap
  3129   002DE4  EC19  F00B         	call	_vfpfcnvrt	;wreg free
  3130   002DE8                     l5891:
  3131                           
  3132                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3133   002DE8  C02F  FFF6         	movff	vfprintf@cfmt,tblptrl
  3134   002DEC                     	if	1	;There is more than 1 active tblptr byte
  3135   002DEC  0E10               	movlw	high __smallconst
  3136   002DEE  6EF7               	movwf	tblptrh,c
  3137   002DF0                     	endif
  3138   002DF0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3139   002DF0  6AF8               	clrf	tblptru,c
  3140   002DF2                     	endif
  3141   002DF2                     	if	0	;tblptru may be non-zero
  3142   002DF2                     	endif
  3143   002DF2  0008               	tblrd		*
  3144   002DF4  50F5               	movf	tablat,w,c
  3145   002DF6  0900               	iorlw	0
  3146   002DF8  A4D8               	btfss	status,2,c
  3147   002DFA  EF01  F017         	goto	u5121
  3148   002DFE  EF03  F017         	goto	u5120
  3149   002E02                     u5121:
  3150   002E02  EFEC  F016         	goto	l5889
  3151   002E06                     u5120:
  3152   002E06                     
  3153                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3154   002E06  0E00               	movlw	0
  3155   002E08  6E2D               	movwf	(?_vfprintf+1)^0,c
  3156   002E0A  0E00               	movlw	0
  3157   002E0C  6E2C               	movwf	?_vfprintf^0,c
  3158   002E0E  0012               	return		;funcret
  3159   002E10                     __end_of_vfprintf:
  3160                           	callstack 0
  3161                           
  3162 ;; *************** function _vfpfcnvrt *****************
  3163 ;; Defined at:
  3164 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;  fp              1   32[COMRAM] PTR struct _IO_FILE
  3167 ;;		 -> sprintf@f(12), 
  3168 ;;  fmt             1   33[COMRAM] PTR PTR unsigned char 
  3169 ;;		 -> vfprintf@cfmt(1), 
  3170 ;;  ap              1   34[COMRAM] PTR PTR void 
  3171 ;;		 -> sprintf@ap(1), 
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;  convarg         4   38[COMRAM] struct .
  3174 ;;  c               1   42[COMRAM] unsigned char 
  3175 ;;  cp              1   37[COMRAM] PTR unsigned char 
  3176 ;;		 -> STR_8(3), STR_7(3), STR_6(3), 
  3177 ;;  done            1   36[COMRAM] _Bool 
  3178 ;; Return value:  Size  Location     Type
  3179 ;;                  1    wreg      void 
  3180 ;; Registers used:
  3181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3182 ;; Tracked objects:
  3183 ;;		On entry : 0/0
  3184 ;;		On exit  : 0/0
  3185 ;;		Unchanged: 0/0
  3186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3187 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3188 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3189 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3190 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3191 ;;Total ram usage:       11 bytes
  3192 ;; Hardware stack levels used: 1
  3193 ;; Hardware stack levels required when called: 10
  3194 ;; This function calls:
  3195 ;;		___awdiv
  3196 ;;		___awmod
  3197 ;;		_abs
  3198 ;;		_fputc
  3199 ;; This function is called by:
  3200 ;;		_vfprintf
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           
  3204                           	psect	text19
  3205   001632                     __ptext19:
  3206                           	callstack 0
  3207   001632                     _vfpfcnvrt:
  3208                           	callstack 17
  3209   001632                     
  3210                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3211   001632  5022               	movf	vfpfcnvrt@fmt^0,w,c
  3212   001634  6ED9               	movwf	fsr2l,c
  3213   001636  6ADA               	clrf	fsr2h,c
  3214   001638  CFDF FFF6          	movff	indf2,tblptrl
  3215   00163C                     	if	1	;There is more than 1 active tblptr byte
  3216   00163C  0E10               	movlw	high __smallconst
  3217   00163E  6EF7               	movwf	tblptrh,c
  3218   001640                     	endif
  3219   001640                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3220   001640  6AF8               	clrf	tblptru,c
  3221   001642                     	endif
  3222   001642                     	if	0	;tblptru may be non-zero
  3223   001642                     	endif
  3224   001642  0008               	tblrd		*
  3225   001644  50F5               	movf	tablat,w,c
  3226   001646  0A25               	xorlw	37
  3227   001648  A4D8               	btfss	status,2,c
  3228   00164A  EF29  F00B         	goto	u4801
  3229   00164E  EF2B  F00B         	goto	u4800
  3230   001652                     u4801:
  3231   001652  EFE6  F00B         	goto	l5695
  3232   001656                     u4800:
  3233   001656                     
  3234                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3235   001656  5022               	movf	vfpfcnvrt@fmt^0,w,c
  3236   001658  6ED9               	movwf	fsr2l,c
  3237   00165A  6ADA               	clrf	fsr2h,c
  3238   00165C  2ADF               	incf	indf2,f,c
  3239   00165E                     
  3240                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3241   00165E  0E00               	movlw	0
  3242   001660  6E3C               	movwf	(_width+1)^0,c
  3243   001662  0E00               	movlw	0
  3244   001664  6E3B               	movwf	_width^0,c
  3245   001666  C03B  F057         	movff	_width,_flags
  3246   00166A                     
  3247                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3248   00166A  683D               	setf	_prec^0,c
  3249   00166C  683E               	setf	(_prec+1)^0,c
  3250   00166E                     
  3251                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3252   00166E  5022               	movf	vfpfcnvrt@fmt^0,w,c
  3253   001670  6ED9               	movwf	fsr2l,c
  3254   001672  6ADA               	clrf	fsr2h,c
  3255   001674  50DF               	movf	indf2,w,c
  3256   001676  6E26               	movwf	vfpfcnvrt@cp^0,c
  3257   001678                     
  3258                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3259   001678  C026  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3260   00167C                     	if	1	;There is more than 1 active tblptr byte
  3261   00167C  0E10               	movlw	high __smallconst
  3262   00167E  6EF7               	movwf	tblptrh,c
  3263   001680                     	endif
  3264   001680                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3265   001680  6AF8               	clrf	tblptru,c
  3266   001682                     	endif
  3267   001682                     	if	0	;tblptru may be non-zero
  3268   001682                     	endif
  3269   001682  0008               	tblrd		*
  3270   001684  50F5               	movf	tablat,w,c
  3271   001686  0A64               	xorlw	100
  3272   001688  B4D8               	btfsc	status,2,c
  3273   00168A  EF49  F00B         	goto	u4811
  3274   00168E  EF4B  F00B         	goto	u4810
  3275   001692                     u4811:
  3276   001692  EF5A  F00B         	goto	l5665
  3277   001696                     u4810:
  3278   001696  C026  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3279   00169A                     	if	1	;There is more than 1 active tblptr byte
  3280   00169A  0E10               	movlw	high __smallconst
  3281   00169C  6EF7               	movwf	tblptrh,c
  3282   00169E                     	endif
  3283   00169E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3284   00169E  6AF8               	clrf	tblptru,c
  3285   0016A0                     	endif
  3286   0016A0                     	if	0	;tblptru may be non-zero
  3287   0016A0                     	endif
  3288   0016A0  0008               	tblrd		*
  3289   0016A2  50F5               	movf	tablat,w,c
  3290   0016A4  0A69               	xorlw	105
  3291   0016A6  A4D8               	btfss	status,2,c
  3292   0016A8  EF58  F00B         	goto	u4821
  3293   0016AC  EF5A  F00B         	goto	u4820
  3294   0016B0                     u4821:
  3295   0016B0  EFE0  F00B         	goto	l5691
  3296   0016B4                     u4820:
  3297   0016B4                     l5665:
  3298                           
  3299                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3300   0016B4  5023               	movf	vfpfcnvrt@ap^0,w,c
  3301   0016B6  6ED9               	movwf	fsr2l,c
  3302   0016B8  6ADA               	clrf	fsr2h,c
  3303   0016BA  0E02               	movlw	2
  3304   0016BC  26DF               	addwf	indf2,f,c
  3305   0016BE  5CDF               	subwf	indf2,w,c
  3306   0016C0  6ED9               	movwf	fsr2l,c
  3307   0016C2  6ADA               	clrf	fsr2h,c
  3308   0016C4  CFDE F027          	movff	postinc2,vfpfcnvrt@convarg
  3309   0016C8  CFDE F028          	movff	postinc2,vfpfcnvrt@convarg+1
  3310   0016CC                     
  3311                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3312   0016CC  5022               	movf	vfpfcnvrt@fmt^0,w,c
  3313   0016CE  6ED9               	movwf	fsr2l,c
  3314   0016D0  6ADA               	clrf	fsr2h,c
  3315   0016D2  2826               	incf	vfpfcnvrt@cp^0,w,c
  3316   0016D4  6EDF               	movwf	indf2,c
  3317   0016D6                     
  3318                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  3319   0016D6  0E20               	movlw	32
  3320   0016D8  6E2B               	movwf	vfpfcnvrt@c^0,c
  3321                           
  3322                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  3323   0016DA  BE28               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  3324   0016DC  EF72  F00B         	goto	u4831
  3325   0016E0  EF75  F00B         	goto	u4830
  3326   0016E4                     u4831:
  3327   0016E4  0E01               	movlw	1
  3328   0016E6  EF76  F00B         	goto	u4840
  3329   0016EA                     u4830:
  3330   0016EA  0E00               	movlw	0
  3331   0016EC                     u4840:
  3332   0016EC  6E25               	movwf	vfpfcnvrt@done^0,c
  3333   0016EE                     l5671:
  3334                           
  3335                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  3336   0016EE  062B               	decf	vfpfcnvrt@c^0,f,c
  3337   0016F0  502B               	movf	vfpfcnvrt@c^0,w,c
  3338   0016F2  0FBF               	addlw	low _dbuf
  3339   0016F4  6ED9               	movwf	fsr2l,c
  3340   0016F6  6ADA               	clrf	fsr2h,c
  3341   0016F8  C027  F017         	movff	vfpfcnvrt@convarg,___awmod@dividend
  3342   0016FC  C028  F018         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  3343   001700  0E00               	movlw	0
  3344   001702  6E1A               	movwf	(___awmod@divisor+1)^0,c
  3345   001704  0E0A               	movlw	10
  3346   001706  6E19               	movwf	___awmod@divisor^0,c
  3347   001708  ECF0  F011         	call	___awmod	;wreg free
  3348   00170C  C017  F01D         	movff	?___awmod,abs@a
  3349   001710  C018  F01E         	movff	?___awmod+1,abs@a+1
  3350   001714  ECB6  F017         	call	_abs	;wreg free
  3351   001718  501D               	movf	?_abs^0,w,c
  3352   00171A  0F30               	addlw	48
  3353   00171C  6EDF               	movwf	indf2,c
  3354   00171E                     
  3355                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  3356   00171E  C027  F017         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  3357   001722  C028  F018         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  3358   001726  0E00               	movlw	0
  3359   001728  6E1A               	movwf	(___awdiv@divisor+1)^0,c
  3360   00172A  0E0A               	movlw	10
  3361   00172C  6E19               	movwf	___awdiv@divisor^0,c
  3362   00172E  EC8E  F011         	call	___awdiv	;wreg free
  3363   001732  C017  F027         	movff	?___awdiv,vfpfcnvrt@convarg
  3364   001736  C018  F028         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  3365   00173A                     
  3366                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  3367   00173A  5027               	movf	vfpfcnvrt@convarg^0,w,c
  3368   00173C  1028               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  3369   00173E  B4D8               	btfsc	status,2,c
  3370   001740  EFA4  F00B         	goto	u4851
  3371   001744  EFA6  F00B         	goto	u4850
  3372   001748                     u4851:
  3373   001748  EFAE  F00B         	goto	l5679
  3374   00174C                     u4850:
  3375   00174C  502B               	movf	vfpfcnvrt@c^0,w,c
  3376   00174E  A4D8               	btfss	status,2,c
  3377   001750  EFAC  F00B         	goto	u4861
  3378   001754  EFAE  F00B         	goto	u4860
  3379   001758                     u4861:
  3380   001758  EF77  F00B         	goto	l5671
  3381   00175C                     u4860:
  3382   00175C                     l5679:
  3383                           
  3384                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  3385   00175C  502B               	movf	vfpfcnvrt@c^0,w,c
  3386   00175E  B4D8               	btfsc	status,2,c
  3387   001760  EFB4  F00B         	goto	u4871
  3388   001764  EFB6  F00B         	goto	u4870
  3389   001768                     u4871:
  3390   001768  EFD5  F00B         	goto	l5689
  3391   00176C                     u4870:
  3392   00176C  5025               	movf	vfpfcnvrt@done^0,w,c
  3393   00176E  B4D8               	btfsc	status,2,c
  3394   001770  EFBC  F00B         	goto	u4881
  3395   001774  EFBE  F00B         	goto	u4880
  3396   001778                     u4881:
  3397   001778  EFD5  F00B         	goto	l5689
  3398   00177C                     u4880:
  3399   00177C                     
  3400                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  3401   00177C  062B               	decf	vfpfcnvrt@c^0,f,c
  3402   00177E  502B               	movf	vfpfcnvrt@c^0,w,c
  3403   001780  0FBF               	addlw	low _dbuf
  3404   001782  6ED9               	movwf	fsr2l,c
  3405   001784  6ADA               	clrf	fsr2h,c
  3406   001786  0E2D               	movlw	45
  3407   001788  6EDF               	movwf	indf2,c
  3408   00178A  EFD5  F00B         	goto	l5689
  3409   00178E                     l5685:
  3410                           
  3411                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  3412   00178E  502B               	movf	vfpfcnvrt@c^0,w,c
  3413   001790  0FBF               	addlw	low _dbuf
  3414   001792  6ED9               	movwf	fsr2l,c
  3415   001794  6ADA               	clrf	fsr2h,c
  3416   001796  50DF               	movf	indf2,w,c
  3417   001798  6E24               	movwf	??_vfpfcnvrt^0,c
  3418   00179A  5024               	movf	??_vfpfcnvrt^0,w,c
  3419   00179C  6E17               	movwf	fputc@c^0,c
  3420   00179E  6A18               	clrf	(fputc@c+1)^0,c
  3421   0017A0  C021  F019         	movff	vfpfcnvrt@fp,fputc@fp
  3422   0017A4  EC9F  F012         	call	_fputc	;wreg free
  3423   0017A8  2A2B               	incf	vfpfcnvrt@c^0,f,c
  3424   0017AA                     l5689:
  3425                           
  3426                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  3427   0017AA  0E20               	movlw	32
  3428   0017AC  182B               	xorwf	vfpfcnvrt@c^0,w,c
  3429   0017AE  A4D8               	btfss	status,2,c
  3430   0017B0  EFDC  F00B         	goto	u4891
  3431   0017B4  EFDE  F00B         	goto	u4890
  3432   0017B8                     u4891:
  3433   0017B8  EFC7  F00B         	goto	l5685
  3434   0017BC                     u4890:
  3435   0017BC  EFF8  F00B         	goto	l1693
  3436   0017C0                     l5691:
  3437                           
  3438                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3439   0017C0  5022               	movf	vfpfcnvrt@fmt^0,w,c
  3440   0017C2  6ED9               	movwf	fsr2l,c
  3441   0017C4  6ADA               	clrf	fsr2h,c
  3442   0017C6  2ADF               	incf	indf2,f,c
  3443   0017C8  EFF8  F00B         	goto	l1693
  3444   0017CC                     l5695:
  3445                           
  3446                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3447   0017CC  5022               	movf	vfpfcnvrt@fmt^0,w,c
  3448   0017CE  6ED9               	movwf	fsr2l,c
  3449   0017D0  6ADA               	clrf	fsr2h,c
  3450   0017D2  CFDF FFF6          	movff	indf2,tblptrl
  3451   0017D6                     	if	1	;There is more than 1 active tblptr byte
  3452   0017D6  0E10               	movlw	high __smallconst
  3453   0017D8  6EF7               	movwf	tblptrh,c
  3454   0017DA                     	endif
  3455   0017DA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3456   0017DA  6AF8               	clrf	tblptru,c
  3457   0017DC                     	endif
  3458   0017DC                     	if	0	;tblptru may be non-zero
  3459   0017DC                     	endif
  3460   0017DC  0008               	tblrd		*
  3461   0017DE  50F5               	movf	tablat,w,c
  3462   0017E0  6E17               	movwf	fputc@c^0,c
  3463   0017E2  6A18               	clrf	(fputc@c+1)^0,c
  3464   0017E4  C021  F019         	movff	vfpfcnvrt@fp,fputc@fp
  3465   0017E8  EC9F  F012         	call	_fputc	;wreg free
  3466   0017EC  EFE0  F00B         	goto	l5691
  3467   0017F0                     l1693:
  3468   0017F0  0012               	return		;funcret
  3469   0017F2                     __end_of_vfpfcnvrt:
  3470                           	callstack 0
  3471                           
  3472 ;; *************** function _fputc *****************
  3473 ;; Defined at:
  3474 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;  c               2   22[COMRAM] int 
  3477 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
  3478 ;;		 -> sprintf@f(12), 
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;		None
  3481 ;; Return value:  Size  Location     Type
  3482 ;;                  2   22[COMRAM] int 
  3483 ;; Registers used:
  3484 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3490 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3492 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3493 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3494 ;;Total ram usage:        8 bytes
  3495 ;; Hardware stack levels used: 1
  3496 ;; Hardware stack levels required when called: 9
  3497 ;; This function calls:
  3498 ;;		_putch
  3499 ;; This function is called by:
  3500 ;;		_vfpfcnvrt
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503                           
  3504                           	psect	text20
  3505   00253E                     __ptext20:
  3506                           	callstack 0
  3507   00253E                     _fputc:
  3508                           	callstack 17
  3509   00253E  5019               	movf	fputc@fp^0,w,c
  3510   002540  B4D8               	btfsc	status,2,c
  3511   002542  EFA5  F012         	goto	u4671
  3512   002546  EFA7  F012         	goto	u4670
  3513   00254A                     u4671:
  3514   00254A  EFAF  F012         	goto	l5549
  3515   00254E                     u4670:
  3516   00254E  5019               	movf	fputc@fp^0,w,c
  3517   002550  A4D8               	btfss	status,2,c
  3518   002552  EFAD  F012         	goto	u4681
  3519   002556  EFAF  F012         	goto	u4680
  3520   00255A                     u4681:
  3521   00255A  EFB4  F012         	goto	l5551
  3522   00255E                     u4680:
  3523   00255E                     l5549:
  3524   00255E  5017               	movf	fputc@c^0,w,c
  3525   002560  ECDF  F018         	call	_putch
  3526   002564  EFF3  F012         	goto	l1718
  3527   002568                     l5551:
  3528   002568  5019               	movf	fputc@fp^0,w,c
  3529   00256A  6ED9               	movwf	fsr2l,c
  3530   00256C  6ADA               	clrf	fsr2h,c
  3531   00256E  0E0A               	movlw	10
  3532   002570  26D9               	addwf	fsr2l,f,c
  3533   002572  50DE               	movf	postinc2,w,c
  3534   002574  10DE               	iorwf	postinc2,w,c
  3535   002576  B4D8               	btfsc	status,2,c
  3536   002578  EFC0  F012         	goto	u4691
  3537   00257C  EFC2  F012         	goto	u4690
  3538   002580                     u4691:
  3539   002580  EFDB  F012         	goto	l5555
  3540   002584                     u4690:
  3541   002584  5019               	movf	fputc@fp^0,w,c
  3542   002586  6ED9               	movwf	fsr2l,c
  3543   002588  6ADA               	clrf	fsr2h,c
  3544   00258A  0E0A               	movlw	10
  3545   00258C  26D9               	addwf	fsr2l,f,c
  3546   00258E  5019               	movf	fputc@fp^0,w,c
  3547   002590  6EE1               	movwf	fsr1l,c
  3548   002592  6AE2               	clrf	fsr1h,c
  3549   002594  0E03               	movlw	3
  3550   002596  26E1               	addwf	fsr1l,f,c
  3551   002598  50DE               	movf	postinc2,w,c
  3552   00259A  5CE6               	subwf	postinc1,w,c
  3553   00259C  50E6               	movf	postinc1,w,c
  3554   00259E  0A80               	xorlw	128
  3555   0025A0  6E1E               	movwf	(??_fputc+4)^0,c
  3556   0025A2  50DE               	movf	postinc2,w,c
  3557   0025A4  0A80               	xorlw	128
  3558   0025A6  581E               	subwfb	(??_fputc+4)^0,w,c
  3559   0025A8  B0D8               	btfsc	status,0,c
  3560   0025AA  EFD9  F012         	goto	u4701
  3561   0025AE  EFDB  F012         	goto	u4700
  3562   0025B2                     u4701:
  3563   0025B2  EFF3  F012         	goto	l1718
  3564   0025B6                     u4700:
  3565   0025B6                     l5555:
  3566   0025B6  5019               	movf	fputc@fp^0,w,c
  3567   0025B8  6ED9               	movwf	fsr2l,c
  3568   0025BA  6ADA               	clrf	fsr2h,c
  3569   0025BC  0E03               	movlw	3
  3570   0025BE  26D9               	addwf	fsr2l,f,c
  3571   0025C0  50DF               	movf	indf2,w,c
  3572   0025C2  6E1A               	movwf	??_fputc^0,c
  3573   0025C4  5019               	movf	fputc@fp^0,w,c
  3574   0025C6  6ED9               	movwf	fsr2l,c
  3575   0025C8  6ADA               	clrf	fsr2h,c
  3576   0025CA  50DF               	movf	indf2,w,c
  3577   0025CC  241A               	addwf	??_fputc^0,w,c
  3578   0025CE  6ED9               	movwf	fsr2l,c
  3579   0025D0  6ADA               	clrf	fsr2h,c
  3580   0025D2  C017  FFDF         	movff	fputc@c,indf2
  3581   0025D6  5019               	movf	fputc@fp^0,w,c
  3582   0025D8  6ED9               	movwf	fsr2l,c
  3583   0025DA  6ADA               	clrf	fsr2h,c
  3584   0025DC  0E03               	movlw	3
  3585   0025DE  26D9               	addwf	fsr2l,f,c
  3586   0025E0  2ADE               	incf	postinc2,f,c
  3587   0025E2  0E00               	movlw	0
  3588   0025E4  22DD               	addwfc	postdec2,f,c
  3589   0025E6                     l1718:
  3590   0025E6  0012               	return		;funcret
  3591   0025E8                     __end_of_fputc:
  3592                           	callstack 0
  3593                           
  3594 ;; *************** function _putch *****************
  3595 ;; Defined at:
  3596 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;  c               1    wreg     unsigned char 
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;  c               1    0[COMRAM] unsigned char 
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  1    wreg      void 
  3603 ;; Registers used:
  3604 ;;		wreg
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3614 ;;Total ram usage:        0 bytes
  3615 ;; Hardware stack levels used: 1
  3616 ;; Hardware stack levels required when called: 8
  3617 ;; This function calls:
  3618 ;;		Nothing
  3619 ;; This function is called by:
  3620 ;;		_fputc
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624                           	psect	text21
  3625   0031BE                     __ptext21:
  3626                           	callstack 0
  3627   0031BE                     _putch:
  3628                           	callstack 17
  3629   0031BE  0012               	return		;funcret
  3630   0031C0                     __end_of_putch:
  3631                           	callstack 0
  3632                           
  3633 ;; *************** function _abs *****************
  3634 ;; Defined at:
  3635 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;  a               2   28[COMRAM] int 
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;		None
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  2   28[COMRAM] int 
  3642 ;; Registers used:
  3643 ;;		wreg, status,2, status,0
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3649 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3651 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3652 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3653 ;;Total ram usage:        4 bytes
  3654 ;; Hardware stack levels used: 1
  3655 ;; Hardware stack levels required when called: 8
  3656 ;; This function calls:
  3657 ;;		Nothing
  3658 ;; This function is called by:
  3659 ;;		_vfpfcnvrt
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           	psect	text22
  3664   002F6C                     __ptext22:
  3665                           	callstack 0
  3666   002F6C                     _abs:
  3667                           	callstack 18
  3668   002F6C  BE1E               	btfsc	(abs@a+1)^0,7,c
  3669   002F6E  EFBB  F017         	goto	u4711
  3670   002F72  EFBD  F017         	goto	u4710
  3671   002F76                     u4711:
  3672   002F76  EFC3  F017         	goto	l1703
  3673   002F7A                     u4710:
  3674   002F7A  C01D  F01D         	movff	abs@a,?_abs
  3675   002F7E  C01E  F01E         	movff	abs@a+1,?_abs+1
  3676   002F82  EFCF  F017         	goto	l1706
  3677   002F86                     l1703:
  3678   002F86  C01D  F01F         	movff	abs@a,??_abs
  3679   002F8A  C01E  F020         	movff	abs@a+1,??_abs+1
  3680   002F8E  1E1F               	comf	??_abs^0,f,c
  3681   002F90  1E20               	comf	(??_abs+1)^0,f,c
  3682   002F92  4A1F               	infsnz	??_abs^0,f,c
  3683   002F94  2A20               	incf	(??_abs+1)^0,f,c
  3684   002F96  C01F  F01D         	movff	??_abs,?_abs
  3685   002F9A  C020  F01E         	movff	??_abs+1,?_abs+1
  3686   002F9E                     l1706:
  3687   002F9E  0012               	return		;funcret
  3688   002FA0                     __end_of_abs:
  3689                           	callstack 0
  3690                           
  3691 ;; *************** function ___awmod *****************
  3692 ;; Defined at:
  3693 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  3694 ;; Parameters:    Size  Location     Type
  3695 ;;  dividend        2   22[COMRAM] int 
  3696 ;;  divisor         2   24[COMRAM] int 
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;  sign            1   27[COMRAM] unsigned char 
  3699 ;;  counter         1   26[COMRAM] unsigned char 
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  2   22[COMRAM] int 
  3702 ;; Registers used:
  3703 ;;		wreg, status,2, status,0
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3709 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3710 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3712 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3713 ;;Total ram usage:        6 bytes
  3714 ;; Hardware stack levels used: 1
  3715 ;; Hardware stack levels required when called: 8
  3716 ;; This function calls:
  3717 ;;		Nothing
  3718 ;; This function is called by:
  3719 ;;		_vfpfcnvrt
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723                           	psect	text23
  3724   0023E0                     __ptext23:
  3725                           	callstack 0
  3726   0023E0                     ___awmod:
  3727                           	callstack 18
  3728   0023E0  0E00               	movlw	0
  3729   0023E2  6E1C               	movwf	___awmod@sign^0,c
  3730   0023E4  BE18               	btfsc	(___awmod@dividend+1)^0,7,c
  3731   0023E6  EFF9  F011         	goto	u4610
  3732   0023EA  EFF7  F011         	goto	u4611
  3733   0023EE                     u4611:
  3734   0023EE  EFFF  F011         	goto	l5517
  3735   0023F2                     u4610:
  3736   0023F2  6C17               	negf	___awmod@dividend^0,c
  3737   0023F4  1E18               	comf	(___awmod@dividend+1)^0,f,c
  3738   0023F6  B0D8               	btfsc	status,0,c
  3739   0023F8  2A18               	incf	(___awmod@dividend+1)^0,f,c
  3740   0023FA  0E01               	movlw	1
  3741   0023FC  6E1C               	movwf	___awmod@sign^0,c
  3742   0023FE                     l5517:
  3743   0023FE  BE1A               	btfsc	(___awmod@divisor+1)^0,7,c
  3744   002400  EF06  F012         	goto	u4620
  3745   002404  EF04  F012         	goto	u4621
  3746   002408                     u4621:
  3747   002408  EF0A  F012         	goto	l5521
  3748   00240C                     u4620:
  3749   00240C  6C19               	negf	___awmod@divisor^0,c
  3750   00240E  1E1A               	comf	(___awmod@divisor+1)^0,f,c
  3751   002410  B0D8               	btfsc	status,0,c
  3752   002412  2A1A               	incf	(___awmod@divisor+1)^0,f,c
  3753   002414                     l5521:
  3754   002414  5019               	movf	___awmod@divisor^0,w,c
  3755   002416  101A               	iorwf	(___awmod@divisor+1)^0,w,c
  3756   002418  B4D8               	btfsc	status,2,c
  3757   00241A  EF11  F012         	goto	u4631
  3758   00241E  EF13  F012         	goto	u4630
  3759   002422                     u4631:
  3760   002422  EF37  F012         	goto	l5537
  3761   002426                     u4630:
  3762   002426  0E01               	movlw	1
  3763   002428  6E1B               	movwf	___awmod@counter^0,c
  3764   00242A  EF1B  F012         	goto	l5527
  3765   00242E                     l5525:
  3766   00242E  90D8               	bcf	status,0,c
  3767   002430  3619               	rlcf	___awmod@divisor^0,f,c
  3768   002432  361A               	rlcf	(___awmod@divisor+1)^0,f,c
  3769   002434  2A1B               	incf	___awmod@counter^0,f,c
  3770   002436                     l5527:
  3771   002436  AE1A               	btfss	(___awmod@divisor+1)^0,7,c
  3772   002438  EF20  F012         	goto	u4641
  3773   00243C  EF22  F012         	goto	u4640
  3774   002440                     u4641:
  3775   002440  EF17  F012         	goto	l5525
  3776   002444                     u4640:
  3777   002444                     l5529:
  3778   002444  5019               	movf	___awmod@divisor^0,w,c
  3779   002446  5C17               	subwf	___awmod@dividend^0,w,c
  3780   002448  501A               	movf	(___awmod@divisor+1)^0,w,c
  3781   00244A  5818               	subwfb	(___awmod@dividend+1)^0,w,c
  3782   00244C  A0D8               	btfss	status,0,c
  3783   00244E  EF2B  F012         	goto	u4651
  3784   002452  EF2D  F012         	goto	u4650
  3785   002456                     u4651:
  3786   002456  EF31  F012         	goto	l5533
  3787   00245A                     u4650:
  3788   00245A  5019               	movf	___awmod@divisor^0,w,c
  3789   00245C  5E17               	subwf	___awmod@dividend^0,f,c
  3790   00245E  501A               	movf	(___awmod@divisor+1)^0,w,c
  3791   002460  5A18               	subwfb	(___awmod@dividend+1)^0,f,c
  3792   002462                     l5533:
  3793   002462  90D8               	bcf	status,0,c
  3794   002464  321A               	rrcf	(___awmod@divisor+1)^0,f,c
  3795   002466  3219               	rrcf	___awmod@divisor^0,f,c
  3796   002468  2E1B               	decfsz	___awmod@counter^0,f,c
  3797   00246A  EF22  F012         	goto	l5529
  3798   00246E                     l5537:
  3799   00246E  501C               	movf	___awmod@sign^0,w,c
  3800   002470  B4D8               	btfsc	status,2,c
  3801   002472  EF3D  F012         	goto	u4661
  3802   002476  EF3F  F012         	goto	u4660
  3803   00247A                     u4661:
  3804   00247A  EF43  F012         	goto	l5541
  3805   00247E                     u4660:
  3806   00247E  6C17               	negf	___awmod@dividend^0,c
  3807   002480  1E18               	comf	(___awmod@dividend+1)^0,f,c
  3808   002482  B0D8               	btfsc	status,0,c
  3809   002484  2A18               	incf	(___awmod@dividend+1)^0,f,c
  3810   002486                     l5541:
  3811   002486  C017  F017         	movff	___awmod@dividend,?___awmod
  3812   00248A  C018  F018         	movff	___awmod@dividend+1,?___awmod+1
  3813   00248E  0012               	return		;funcret
  3814   002490                     __end_of___awmod:
  3815                           	callstack 0
  3816                           
  3817 ;; *************** function ___awdiv *****************
  3818 ;; Defined at:
  3819 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;  dividend        2   22[COMRAM] int 
  3822 ;;  divisor         2   24[COMRAM] int 
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;  quotient        2   28[COMRAM] int 
  3825 ;;  sign            1   27[COMRAM] unsigned char 
  3826 ;;  counter         1   26[COMRAM] unsigned char 
  3827 ;; Return value:  Size  Location     Type
  3828 ;;                  2   22[COMRAM] int 
  3829 ;; Registers used:
  3830 ;;		wreg, status,2, status,0
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3836 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3837 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3839 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3840 ;;Total ram usage:        8 bytes
  3841 ;; Hardware stack levels used: 1
  3842 ;; Hardware stack levels required when called: 8
  3843 ;; This function calls:
  3844 ;;		Nothing
  3845 ;; This function is called by:
  3846 ;;		_vfpfcnvrt
  3847 ;; This function uses a non-reentrant model
  3848 ;;
  3849                           
  3850                           	psect	text24
  3851   00231C                     __ptext24:
  3852                           	callstack 0
  3853   00231C                     ___awdiv:
  3854                           	callstack 18
  3855   00231C  0E00               	movlw	0
  3856   00231E  6E1C               	movwf	___awdiv@sign^0,c
  3857   002320  BE1A               	btfsc	(___awdiv@divisor+1)^0,7,c
  3858   002322  EF97  F011         	goto	u4550
  3859   002326  EF95  F011         	goto	u4551
  3860   00232A                     u4551:
  3861   00232A  EF9D  F011         	goto	l5473
  3862   00232E                     u4550:
  3863   00232E  6C19               	negf	___awdiv@divisor^0,c
  3864   002330  1E1A               	comf	(___awdiv@divisor+1)^0,f,c
  3865   002332  B0D8               	btfsc	status,0,c
  3866   002334  2A1A               	incf	(___awdiv@divisor+1)^0,f,c
  3867   002336  0E01               	movlw	1
  3868   002338  6E1C               	movwf	___awdiv@sign^0,c
  3869   00233A                     l5473:
  3870   00233A  BE18               	btfsc	(___awdiv@dividend+1)^0,7,c
  3871   00233C  EFA4  F011         	goto	u4560
  3872   002340  EFA2  F011         	goto	u4561
  3873   002344                     u4561:
  3874   002344  EFAA  F011         	goto	l5479
  3875   002348                     u4560:
  3876   002348  6C17               	negf	___awdiv@dividend^0,c
  3877   00234A  1E18               	comf	(___awdiv@dividend+1)^0,f,c
  3878   00234C  B0D8               	btfsc	status,0,c
  3879   00234E  2A18               	incf	(___awdiv@dividend+1)^0,f,c
  3880   002350  0E01               	movlw	1
  3881   002352  1A1C               	xorwf	___awdiv@sign^0,f,c
  3882   002354                     l5479:
  3883   002354  0E00               	movlw	0
  3884   002356  6E1E               	movwf	(___awdiv@quotient+1)^0,c
  3885   002358  0E00               	movlw	0
  3886   00235A  6E1D               	movwf	___awdiv@quotient^0,c
  3887   00235C  5019               	movf	___awdiv@divisor^0,w,c
  3888   00235E  101A               	iorwf	(___awdiv@divisor+1)^0,w,c
  3889   002360  B4D8               	btfsc	status,2,c
  3890   002362  EFB5  F011         	goto	u4571
  3891   002366  EFB7  F011         	goto	u4570
  3892   00236A                     u4571:
  3893   00236A  EFDF  F011         	goto	l5501
  3894   00236E                     u4570:
  3895   00236E  0E01               	movlw	1
  3896   002370  6E1B               	movwf	___awdiv@counter^0,c
  3897   002372  EFBF  F011         	goto	l5487
  3898   002376                     l5485:
  3899   002376  90D8               	bcf	status,0,c
  3900   002378  3619               	rlcf	___awdiv@divisor^0,f,c
  3901   00237A  361A               	rlcf	(___awdiv@divisor+1)^0,f,c
  3902   00237C  2A1B               	incf	___awdiv@counter^0,f,c
  3903   00237E                     l5487:
  3904   00237E  AE1A               	btfss	(___awdiv@divisor+1)^0,7,c
  3905   002380  EFC4  F011         	goto	u4581
  3906   002384  EFC6  F011         	goto	u4580
  3907   002388                     u4581:
  3908   002388  EFBB  F011         	goto	l5485
  3909   00238C                     u4580:
  3910   00238C                     l5489:
  3911   00238C  90D8               	bcf	status,0,c
  3912   00238E  361D               	rlcf	___awdiv@quotient^0,f,c
  3913   002390  361E               	rlcf	(___awdiv@quotient+1)^0,f,c
  3914   002392  5019               	movf	___awdiv@divisor^0,w,c
  3915   002394  5C17               	subwf	___awdiv@dividend^0,w,c
  3916   002396  501A               	movf	(___awdiv@divisor+1)^0,w,c
  3917   002398  5818               	subwfb	(___awdiv@dividend+1)^0,w,c
  3918   00239A  A0D8               	btfss	status,0,c
  3919   00239C  EFD2  F011         	goto	u4591
  3920   0023A0  EFD4  F011         	goto	u4590
  3921   0023A4                     u4591:
  3922   0023A4  EFD9  F011         	goto	l5497
  3923   0023A8                     u4590:
  3924   0023A8  5019               	movf	___awdiv@divisor^0,w,c
  3925   0023AA  5E17               	subwf	___awdiv@dividend^0,f,c
  3926   0023AC  501A               	movf	(___awdiv@divisor+1)^0,w,c
  3927   0023AE  5A18               	subwfb	(___awdiv@dividend+1)^0,f,c
  3928   0023B0  801D               	bsf	___awdiv@quotient^0,0,c
  3929   0023B2                     l5497:
  3930   0023B2  90D8               	bcf	status,0,c
  3931   0023B4  321A               	rrcf	(___awdiv@divisor+1)^0,f,c
  3932   0023B6  3219               	rrcf	___awdiv@divisor^0,f,c
  3933   0023B8  2E1B               	decfsz	___awdiv@counter^0,f,c
  3934   0023BA  EFC6  F011         	goto	l5489
  3935   0023BE                     l5501:
  3936   0023BE  501C               	movf	___awdiv@sign^0,w,c
  3937   0023C0  B4D8               	btfsc	status,2,c
  3938   0023C2  EFE5  F011         	goto	u4601
  3939   0023C6  EFE7  F011         	goto	u4600
  3940   0023CA                     u4601:
  3941   0023CA  EFEB  F011         	goto	l5505
  3942   0023CE                     u4600:
  3943   0023CE  6C1D               	negf	___awdiv@quotient^0,c
  3944   0023D0  1E1E               	comf	(___awdiv@quotient+1)^0,f,c
  3945   0023D2  B0D8               	btfsc	status,0,c
  3946   0023D4  2A1E               	incf	(___awdiv@quotient+1)^0,f,c
  3947   0023D6                     l5505:
  3948   0023D6  C01D  F017         	movff	___awdiv@quotient,?___awdiv
  3949   0023DA  C01E  F018         	movff	___awdiv@quotient+1,?___awdiv+1
  3950   0023DE  0012               	return		;funcret
  3951   0023E0                     __end_of___awdiv:
  3952                           	callstack 0
  3953                           
  3954 ;; *************** function _memset *****************
  3955 ;; Defined at:
  3956 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memset.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;  dest            1   22[COMRAM] PTR void 
  3959 ;;		 -> adc_res_txt(7), 
  3960 ;;  c               2   23[COMRAM] int 
  3961 ;;  n               2   25[COMRAM] unsigned int 
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;  p               1   27[COMRAM] PTR unsigned char 
  3964 ;;		 -> adc_res_txt(7), 
  3965 ;; Return value:  Size  Location     Type
  3966 ;;                  1    wreg      PTR void 
  3967 ;; Registers used:
  3968 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/0
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3974 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3975 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3977 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3978 ;;Total ram usage:        6 bytes
  3979 ;; Hardware stack levels used: 1
  3980 ;; Hardware stack levels required when called: 8
  3981 ;; This function calls:
  3982 ;;		Nothing
  3983 ;; This function is called by:
  3984 ;;		_convert_uint16_to_string
  3985 ;;		_convert_uint8_to_string
  3986 ;;		_convert_uint32_to_string
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990                           	psect	text25
  3991   002FD2                     __ptext25:
  3992                           	callstack 0
  3993   002FD2                     _memset:
  3994                           	callstack 21
  3995   002FD2  C017  F01C         	movff	memset@dest,memset@p
  3996   002FD6  EFF3  F017         	goto	l4419
  3997   002FDA                     l4415:
  3998   002FDA  501C               	movf	memset@p^0,w,c
  3999   002FDC  6ED9               	movwf	fsr2l,c
  4000   002FDE  6ADA               	clrf	fsr2h,c
  4001   002FE0  C018  FFDF         	movff	memset@c,indf2
  4002   002FE4  2A1C               	incf	memset@p^0,f,c
  4003   002FE6                     l4419:
  4004   002FE6  061A               	decf	memset@n^0,f,c
  4005   002FE8  A0D8               	btfss	status,0,c
  4006   002FEA  061B               	decf	(memset@n+1)^0,f,c
  4007   002FEC  281A               	incf	memset@n^0,w,c
  4008   002FEE  E106               	bnz	u3211
  4009   002FF0  281B               	incf	(memset@n+1)^0,w,c
  4010   002FF2  A4D8               	btfss	status,2,c
  4011   002FF4  EFFE  F017         	goto	u3211
  4012   002FF8  EF00  F018         	goto	u3210
  4013   002FFC                     u3211:
  4014   002FFC  EFED  F017         	goto	l4415
  4015   003000                     u3210:
  4016   003000  0012               	return		;funcret
  4017   003002                     __end_of_memset:
  4018                           	callstack 0
  4019                           
  4020 ;; *************** function _application_initialize *****************
  4021 ;; Defined at:
  4022 ;;		line 63 in file "APP/application.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;		None
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;  ret             1   45[COMRAM] unsigned char 
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  1    wreg      unsigned char 
  4029 ;; Registers used:
  4030 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4037 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4039 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4040 ;;Total ram usage:        1 bytes
  4041 ;; Hardware stack levels used: 1
  4042 ;; Hardware stack levels required when called: 13
  4043 ;; This function calls:
  4044 ;;		_ecu_layer_intialize
  4045 ;;		_mcal_layer_intialize
  4046 ;; This function is called by:
  4047 ;;		_main
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051                           	psect	text26
  4052   003180                     __ptext26:
  4053                           	callstack 0
  4054   003180                     _application_initialize:
  4055                           	callstack 17
  4056   003180  EC9B  F017         	call	_ecu_layer_intialize	;wreg free
  4057   003184                     
  4058                           ;APP/application.c: 66:     ret = mcal_layer_intialize();
  4059   003184  ECC7  F018         	call	_mcal_layer_intialize	;wreg free
  4060   003188  6E2E               	movwf	application_initialize@ret^0,c
  4061   00318A                     
  4062                           ;APP/application.c: 67:     return ret;
  4063   00318A  502E               	movf	application_initialize@ret^0,w,c
  4064   00318C  0012               	return		;funcret
  4065   00318E                     __end_of_application_initialize:
  4066                           	callstack 0
  4067                           
  4068 ;; *************** function _mcal_layer_intialize *****************
  4069 ;; Defined at:
  4070 ;;		line 23 in file "MCAL/mcal_layer_init.c"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;		None
  4073 ;; Auto vars:     Size  Location     Type
  4074 ;;  ret             1   28[COMRAM] unsigned char 
  4075 ;; Return value:  Size  Location     Type
  4076 ;;                  1    wreg      unsigned char 
  4077 ;; Registers used:
  4078 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4079 ;; Tracked objects:
  4080 ;;		On entry : 0/0
  4081 ;;		On exit  : 0/0
  4082 ;;		Unchanged: 0/0
  4083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4085 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4087 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4088 ;;Total ram usage:        1 bytes
  4089 ;; Hardware stack levels used: 1
  4090 ;; Hardware stack levels required when called: 10
  4091 ;; This function calls:
  4092 ;;		_ADC_init
  4093 ;; This function is called by:
  4094 ;;		_application_initialize
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           	psect	text27
  4099   00318E                     __ptext27:
  4100                           	callstack 0
  4101   00318E                     _mcal_layer_intialize:
  4102                           	callstack 19
  4103   00318E                     
  4104                           ;MCAL/mcal_layer_init.c: 26:     ret = ADC_init(&adc);
  4105   00318E  0EB2               	movlw	low _adc
  4106   003190  6E1A               	movwf	ADC_init@_adc^0,c
  4107   003192  EC71  F00F         	call	_ADC_init	;wreg free
  4108   003196  6E1D               	movwf	mcal_layer_intialize@ret^0,c
  4109   003198                     
  4110                           ;MCAL/mcal_layer_init.c: 27:     return ret;
  4111   003198  501D               	movf	mcal_layer_intialize@ret^0,w,c
  4112   00319A  0012               	return		;funcret
  4113   00319C                     __end_of_mcal_layer_intialize:
  4114                           	callstack 0
  4115                           
  4116 ;; *************** function _ADC_init *****************
  4117 ;; Defined at:
  4118 ;;		line 27 in file "MCAL/ADC/hal_adc.c"
  4119 ;; Parameters:    Size  Location     Type
  4120 ;;  _adc            1   25[COMRAM] PTR const struct .
  4121 ;;		 -> adc(7), 
  4122 ;; Auto vars:     Size  Location     Type
  4123 ;;  ret             1   27[COMRAM] unsigned char 
  4124 ;; Return value:  Size  Location     Type
  4125 ;;                  1    wreg      unsigned char 
  4126 ;; Registers used:
  4127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4128 ;; Tracked objects:
  4129 ;;		On entry : 0/0
  4130 ;;		On exit  : 0/0
  4131 ;;		Unchanged: 0/0
  4132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4133 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4134 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4135 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4136 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4137 ;;Total ram usage:        3 bytes
  4138 ;; Hardware stack levels used: 1
  4139 ;; Hardware stack levels required when called: 9
  4140 ;; This function calls:
  4141 ;;		_adc_input_channel_port_cfg
  4142 ;;		_adc_set_result_format
  4143 ;;		_adc_set_voltage_ref
  4144 ;; This function is called by:
  4145 ;;		_mcal_layer_intialize
  4146 ;; This function uses a non-reentrant model
  4147 ;;
  4148                           
  4149                           	psect	text28
  4150   001EE2                     __ptext28:
  4151                           	callstack 0
  4152   001EE2                     _ADC_init:
  4153                           	callstack 19
  4154   001EE2                     
  4155                           ;MCAL/ADC/hal_adc.c: 27: Std_ReturnType ADC_init(const adc_cfg_t *_adc);MCAL/ADC/hal_adc
      +                          .c: 28: {;MCAL/ADC/hal_adc.c: 29:     Std_ReturnType ret = (Std_ReturnType)0x00U;
  4156   001EE2  0E00               	movlw	0
  4157   001EE4  6E1C               	movwf	ADC_init@ret^0,c
  4158                           
  4159                           ;MCAL/ADC/hal_adc.c: 30:     if (((void*)0) == _adc)
  4160   001EE6  501A               	movf	ADC_init@_adc^0,w,c
  4161   001EE8  A4D8               	btfss	status,2,c
  4162   001EEA  EF79  F00F         	goto	u5091
  4163   001EEE  EF7B  F00F         	goto	u5090
  4164   001EF2                     u5091:
  4165   001EF2  EF7F  F00F         	goto	l422
  4166   001EF6                     u5090:
  4167   001EF6                     
  4168                           ;MCAL/ADC/hal_adc.c: 31:     {;MCAL/ADC/hal_adc.c: 32:         ret = (Std_ReturnType)0x0
      +                          1U;
  4169   001EF6  0E01               	movlw	1
  4170   001EF8  6E1C               	movwf	ADC_init@ret^0,c
  4171                           
  4172                           ;MCAL/ADC/hal_adc.c: 33:     }
  4173   001EFA  EFE0  F00F         	goto	l5883
  4174   001EFE                     l422:
  4175                           
  4176                           ;MCAL/ADC/hal_adc.c: 35:     {;MCAL/ADC/hal_adc.c: 37:         (ADCON0bits.ADON = 0x00U)
      +                          ;
  4177   001EFE  90C2               	bcf	194,0,c	;volatile
  4178   001F00                     
  4179                           ;MCAL/ADC/hal_adc.c: 39:         (ADCON2bits.ACQT = _adc->acquisition_time);
  4180   001F00  501A               	movf	ADC_init@_adc^0,w,c
  4181   001F02  6ED9               	movwf	fsr2l,c
  4182   001F04  6ADA               	clrf	fsr2h,c
  4183   001F06  0E03               	movlw	3
  4184   001F08  26D9               	addwf	fsr2l,f,c
  4185   001F0A  50DF               	movf	indf2,w,c
  4186   001F0C  6E1B               	movwf	??_ADC_init^0,c
  4187   001F0E  461B               	rlncf	??_ADC_init^0,f,c
  4188   001F10  461B               	rlncf	??_ADC_init^0,f,c
  4189   001F12  461B               	rlncf	??_ADC_init^0,f,c
  4190   001F14  50C0               	movf	192,w,c	;volatile
  4191   001F16  181B               	xorwf	??_ADC_init^0,w,c
  4192   001F18  0BC7               	andlw	-57
  4193   001F1A  181B               	xorwf	??_ADC_init^0,w,c
  4194   001F1C  6EC0               	movwf	192,c	;volatile
  4195                           
  4196                           ;MCAL/ADC/hal_adc.c: 41:         (ADCON2bits.ADCS = _adc->conversion_clock);
  4197   001F1E  501A               	movf	ADC_init@_adc^0,w,c
  4198   001F20  6ED9               	movwf	fsr2l,c
  4199   001F22  6ADA               	clrf	fsr2h,c
  4200   001F24  0E04               	movlw	4
  4201   001F26  26D9               	addwf	fsr2l,f,c
  4202   001F28  50DF               	movf	indf2,w,c
  4203   001F2A  6E1B               	movwf	??_ADC_init^0,c
  4204   001F2C  50C0               	movf	192,w,c	;volatile
  4205   001F2E  181B               	xorwf	??_ADC_init^0,w,c
  4206   001F30  0BF8               	andlw	-8
  4207   001F32  181B               	xorwf	??_ADC_init^0,w,c
  4208   001F34  6EC0               	movwf	192,c	;volatile
  4209                           
  4210                           ;MCAL/ADC/hal_adc.c: 43:         (ADCON0bits.CHS = _adc->adc_channel);
  4211   001F36  501A               	movf	ADC_init@_adc^0,w,c
  4212   001F38  6ED9               	movwf	fsr2l,c
  4213   001F3A  6ADA               	clrf	fsr2h,c
  4214   001F3C  0E05               	movlw	5
  4215   001F3E  26D9               	addwf	fsr2l,f,c
  4216   001F40  50DF               	movf	indf2,w,c
  4217   001F42  6E1B               	movwf	??_ADC_init^0,c
  4218   001F44  461B               	rlncf	??_ADC_init^0,f,c
  4219   001F46  461B               	rlncf	??_ADC_init^0,f,c
  4220   001F48  50C2               	movf	194,w,c	;volatile
  4221   001F4A  181B               	xorwf	??_ADC_init^0,w,c
  4222   001F4C  0BC3               	andlw	-61
  4223   001F4E  181B               	xorwf	??_ADC_init^0,w,c
  4224   001F50  6EC2               	movwf	194,c	;volatile
  4225   001F52                     
  4226                           ;MCAL/ADC/hal_adc.c: 44:         adc_input_channel_port_cfg(_adc);
  4227   001F52  C01A  F017         	movff	ADC_init@_adc,adc_input_channel_port_cfg@_adc
  4228   001F56  EC53  F010         	call	_adc_input_channel_port_cfg	;wreg free
  4229   001F5A                     
  4230                           ;MCAL/ADC/hal_adc.c: 47:         (INTCONbits.GIEH = 0x01U);
  4231   001F5A  8EF2               	bsf	242,7,c	;volatile
  4232   001F5C                     
  4233                           ;MCAL/ADC/hal_adc.c: 48:         (INTCONbits.GIEL = 0x01U);
  4234   001F5C  8CF2               	bsf	242,6,c	;volatile
  4235   001F5E                     
  4236                           ;MCAL/ADC/hal_adc.c: 50:         (RCONbits.IPEN = 0x01U);
  4237   001F5E  8ED0               	bsf	208,7,c	;volatile
  4238   001F60                     
  4239                           ;MCAL/ADC/hal_adc.c: 52:         (PIE1bits.ADIE = 0x01U);
  4240   001F60  8C9D               	bsf	157,6,c	;volatile
  4241   001F62                     
  4242                           ;MCAL/ADC/hal_adc.c: 53:         (PIR1bits.ADIF = 0x00U);
  4243   001F62  9C9E               	bcf	158,6,c	;volatile
  4244   001F64                     
  4245                           ;MCAL/ADC/hal_adc.c: 55:         if (PRIORITY_HIGH == _adc->priority)
  4246   001F64  501A               	movf	ADC_init@_adc^0,w,c
  4247   001F66  6ED9               	movwf	fsr2l,c
  4248   001F68  6ADA               	clrf	fsr2h,c
  4249   001F6A  0E02               	movlw	2
  4250   001F6C  26D9               	addwf	fsr2l,f,c
  4251   001F6E  04DE               	decf	postinc2,w,c
  4252   001F70  A4D8               	btfss	status,2,c
  4253   001F72  EFBD  F00F         	goto	u5101
  4254   001F76  EFBF  F00F         	goto	u5100
  4255   001F7A                     u5101:
  4256   001F7A  EFC2  F00F         	goto	l5871
  4257   001F7E                     u5100:
  4258   001F7E                     
  4259                           ;MCAL/ADC/hal_adc.c: 56:         {;MCAL/ADC/hal_adc.c: 57:             (IPR1bits.ADIP = 
      +                          0x01U);
  4260   001F7E  8C9F               	bsf	159,6,c	;volatile
  4261                           
  4262                           ;MCAL/ADC/hal_adc.c: 58:         }
  4263   001F80  EFD0  F00F         	goto	l5875
  4264   001F84                     l5871:
  4265   001F84  501A               	movf	ADC_init@_adc^0,w,c
  4266   001F86  6ED9               	movwf	fsr2l,c
  4267   001F88  6ADA               	clrf	fsr2h,c
  4268   001F8A  0E02               	movlw	2
  4269   001F8C  26D9               	addwf	fsr2l,f,c
  4270   001F8E  50DF               	movf	indf2,w,c
  4271   001F90  A4D8               	btfss	status,2,c
  4272   001F92  EFCD  F00F         	goto	u5111
  4273   001F96  EFCF  F00F         	goto	u5110
  4274   001F9A                     u5111:
  4275   001F9A  EFD0  F00F         	goto	l5875
  4276   001F9E                     u5110:
  4277   001F9E                     
  4278                           ;MCAL/ADC/hal_adc.c: 60:         {;MCAL/ADC/hal_adc.c: 61:             (IPR1bits.ADIP = 
      +                          0x00U);
  4279   001F9E  9C9F               	bcf	159,6,c	;volatile
  4280   001FA0                     l5875:
  4281                           
  4282                           ;MCAL/ADC/hal_adc.c: 66:         ADC_interrupt_handler = _adc->ADC_InterruptHandler;
  4283   001FA0  501A               	movf	ADC_init@_adc^0,w,c
  4284   001FA2  6ED9               	movwf	fsr2l,c
  4285   001FA4  6ADA               	clrf	fsr2h,c
  4286   001FA6  CFDE F055          	movff	postinc2,_ADC_interrupt_handler
  4287   001FAA  CFDD F056          	movff	postdec2,_ADC_interrupt_handler+1
  4288   001FAE                     
  4289                           ;MCAL/ADC/hal_adc.c: 69:         adc_set_result_format(_adc);
  4290   001FAE  C01A  F017         	movff	ADC_init@_adc,adc_set_result_format@_adc
  4291   001FB2  EC42  F016         	call	_adc_set_result_format	;wreg free
  4292   001FB6                     
  4293                           ;MCAL/ADC/hal_adc.c: 71:         adc_set_voltage_ref(_adc);
  4294   001FB6  C01A  F017         	movff	ADC_init@_adc,adc_set_voltage_ref@_adc
  4295   001FBA  EC84  F015         	call	_adc_set_voltage_ref	;wreg free
  4296   001FBE                     
  4297                           ;MCAL/ADC/hal_adc.c: 73:         (ADCON0bits.ADON = 0x01U);
  4298   001FBE  80C2               	bsf	194,0,c	;volatile
  4299   001FC0                     l5883:
  4300                           
  4301                           ;MCAL/ADC/hal_adc.c: 75:     return ret;
  4302   001FC0  501C               	movf	ADC_init@ret^0,w,c
  4303   001FC2  0012               	return		;funcret
  4304   001FC4                     __end_of_ADC_init:
  4305                           	callstack 0
  4306                           
  4307 ;; *************** function _adc_set_voltage_ref *****************
  4308 ;; Defined at:
  4309 ;;		line 339 in file "MCAL/ADC/hal_adc.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;  _adc            1   22[COMRAM] PTR const struct .
  4312 ;;		 -> adc(7), 
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;		None
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  1    wreg      void 
  4317 ;; Registers used:
  4318 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4319 ;; Tracked objects:
  4320 ;;		On entry : 0/0
  4321 ;;		On exit  : 0/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4324 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4326 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4327 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4328 ;;Total ram usage:        3 bytes
  4329 ;; Hardware stack levels used: 1
  4330 ;; Hardware stack levels required when called: 8
  4331 ;; This function calls:
  4332 ;;		Nothing
  4333 ;; This function is called by:
  4334 ;;		_ADC_init
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           	psect	text29
  4339   002B08                     __ptext29:
  4340                           	callstack 0
  4341   002B08                     _adc_set_voltage_ref:
  4342                           	callstack 19
  4343   002B08                     
  4344                           ;MCAL/ADC/hal_adc.c: 339: static void adc_set_voltage_ref(const adc_cfg_t *_adc);MCAL/AD
      +                          C/hal_adc.c: 340: {;MCAL/ADC/hal_adc.c: 341:     switch (_adc->voltage_reference)
  4345   002B08  EF92  F015         	goto	l5645
  4346   002B0C                     l512:
  4347   002B0C  8AC1               	bsf	193,5,c	;volatile
  4348   002B0E  88C1               	bsf	193,4,c	;volatile
  4349   002B10  EFB4  F015         	goto	l521
  4350   002B14                     l516:
  4351   002B14  9AC1               	bcf	193,5,c	;volatile
  4352   002B16  98C1               	bcf	193,4,c	;volatile
  4353   002B18  EFB4  F015         	goto	l521
  4354   002B1C                     l519:
  4355   002B1C  9AC1               	bcf	193,5,c	;volatile
  4356   002B1E  98C1               	bcf	193,4,c	;volatile
  4357   002B20  EFB4  F015         	goto	l521
  4358   002B24                     l5645:
  4359   002B24  5017               	movf	adc_set_voltage_ref@_adc^0,w,c
  4360   002B26  6ED9               	movwf	fsr2l,c
  4361   002B28  6ADA               	clrf	fsr2h,c
  4362   002B2A  0E06               	movlw	6
  4363   002B2C  26D9               	addwf	fsr2l,f,c
  4364   002B2E  B0DF               	btfsc	indf2,0,c
  4365   002B30  EF9C  F015         	goto	u4781
  4366   002B34  EF9F  F015         	goto	u4780
  4367   002B38                     u4781:
  4368   002B38  0E01               	movlw	1
  4369   002B3A  EFA0  F015         	goto	u4790
  4370   002B3E                     u4780:
  4371   002B3E  0E00               	movlw	0
  4372   002B40                     u4790:
  4373   002B40  6E18               	movwf	??_adc_set_voltage_ref^0,c
  4374   002B42  6A19               	clrf	(??_adc_set_voltage_ref+1)^0,c
  4375                           
  4376                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4377                           ; Switch size 1, requested type "simple"
  4378                           ; Number of cases is 1, Range of values is 0 to 0
  4379                           ; switch strategies available:
  4380                           ; Name         Instructions Cycles
  4381                           ; simple_byte            4     3 (average)
  4382                           ;	Chosen strategy is simple_byte
  4383   002B44  5019               	movf	(??_adc_set_voltage_ref+1)^0,w,c
  4384   002B46  0A00               	xorlw	0	; case 0
  4385   002B48  B4D8               	btfsc	status,2,c
  4386   002B4A  EFA9  F015         	goto	l6879
  4387   002B4E  EF8E  F015         	goto	l519
  4388   002B52                     l6879:
  4389                           
  4390                           ; Switch size 1, requested type "simple"
  4391                           ; Number of cases is 2, Range of values is 0 to 1
  4392                           ; switch strategies available:
  4393                           ; Name         Instructions Cycles
  4394                           ; simple_byte            7     4 (average)
  4395                           ;	Chosen strategy is simple_byte
  4396   002B52  5018               	movf	??_adc_set_voltage_ref^0,w,c
  4397   002B54  0A00               	xorlw	0	; case 0
  4398   002B56  B4D8               	btfsc	status,2,c
  4399   002B58  EF8A  F015         	goto	l516
  4400   002B5C  0A01               	xorlw	1	; case 1
  4401   002B5E  B4D8               	btfsc	status,2,c
  4402   002B60  EF86  F015         	goto	l512
  4403   002B64  EF8E  F015         	goto	l519
  4404   002B68                     l521:
  4405   002B68  0012               	return		;funcret
  4406   002B6A                     __end_of_adc_set_voltage_ref:
  4407                           	callstack 0
  4408                           
  4409 ;; *************** function _adc_set_result_format *****************
  4410 ;; Defined at:
  4411 ;;		line 321 in file "MCAL/ADC/hal_adc.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;  _adc            1   22[COMRAM] PTR const struct .
  4414 ;;		 -> adc(7), 
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;		None
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  1    wreg      void 
  4419 ;; Registers used:
  4420 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4426 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4428 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4429 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4430 ;;Total ram usage:        3 bytes
  4431 ;; Hardware stack levels used: 1
  4432 ;; Hardware stack levels required when called: 8
  4433 ;; This function calls:
  4434 ;;		Nothing
  4435 ;; This function is called by:
  4436 ;;		_ADC_init
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           	psect	text30
  4441   002C84                     __ptext30:
  4442                           	callstack 0
  4443   002C84                     _adc_set_result_format:
  4444                           	callstack 19
  4445   002C84                     
  4446                           ;MCAL/ADC/hal_adc.c: 321: static void adc_set_result_format(const adc_cfg_t *_adc);MCAL/
      +                          ADC/hal_adc.c: 322: {;MCAL/ADC/hal_adc.c: 323:     switch (_adc->result_format)
  4447   002C84  EF4D  F016         	goto	l5635
  4448   002C88                     l503:
  4449   002C88  8EC0               	bsf	192,7,c	;volatile
  4450                           
  4451                           ;MCAL/ADC/hal_adc.c: 326:                             break;
  4452   002C8A  EF6F  F016         	goto	l507
  4453   002C8E                     l505:
  4454   002C8E  9EC0               	bcf	192,7,c	;volatile
  4455                           
  4456                           ;MCAL/ADC/hal_adc.c: 328:                             break;
  4457   002C90  EF6F  F016         	goto	l507
  4458   002C94                     l506:
  4459   002C94  8EC0               	bsf	192,7,c	;volatile
  4460                           
  4461                           ;MCAL/ADC/hal_adc.c: 330:               break;
  4462   002C96  EF6F  F016         	goto	l507
  4463   002C9A                     l5635:
  4464   002C9A  5017               	movf	adc_set_result_format@_adc^0,w,c
  4465   002C9C  6ED9               	movwf	fsr2l,c
  4466   002C9E  6ADA               	clrf	fsr2h,c
  4467   002CA0  0E06               	movlw	6
  4468   002CA2  26D9               	addwf	fsr2l,f,c
  4469   002CA4  B2DF               	btfsc	indf2,1,c
  4470   002CA6  EF57  F016         	goto	u4761
  4471   002CAA  EF5A  F016         	goto	u4760
  4472   002CAE                     u4761:
  4473   002CAE  0E01               	movlw	1
  4474   002CB0  EF5B  F016         	goto	u4770
  4475   002CB4                     u4760:
  4476   002CB4  0E00               	movlw	0
  4477   002CB6                     u4770:
  4478   002CB6  6E18               	movwf	??_adc_set_result_format^0,c
  4479   002CB8  6A19               	clrf	(??_adc_set_result_format+1)^0,c
  4480                           
  4481                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4482                           ; Switch size 1, requested type "simple"
  4483                           ; Number of cases is 1, Range of values is 0 to 0
  4484                           ; switch strategies available:
  4485                           ; Name         Instructions Cycles
  4486                           ; simple_byte            4     3 (average)
  4487                           ;	Chosen strategy is simple_byte
  4488   002CBA  5019               	movf	(??_adc_set_result_format+1)^0,w,c
  4489   002CBC  0A00               	xorlw	0	; case 0
  4490   002CBE  B4D8               	btfsc	status,2,c
  4491   002CC0  EF64  F016         	goto	l6881
  4492   002CC4  EF4A  F016         	goto	l506
  4493   002CC8                     l6881:
  4494                           
  4495                           ; Switch size 1, requested type "simple"
  4496                           ; Number of cases is 2, Range of values is 0 to 1
  4497                           ; switch strategies available:
  4498                           ; Name         Instructions Cycles
  4499                           ; simple_byte            7     4 (average)
  4500                           ;	Chosen strategy is simple_byte
  4501   002CC8  5018               	movf	??_adc_set_result_format^0,w,c
  4502   002CCA  0A00               	xorlw	0	; case 0
  4503   002CCC  B4D8               	btfsc	status,2,c
  4504   002CCE  EF47  F016         	goto	l505
  4505   002CD2  0A01               	xorlw	1	; case 1
  4506   002CD4  B4D8               	btfsc	status,2,c
  4507   002CD6  EF44  F016         	goto	l503
  4508   002CDA  EF4A  F016         	goto	l506
  4509   002CDE                     l507:
  4510   002CDE  0012               	return		;funcret
  4511   002CE0                     __end_of_adc_set_result_format:
  4512                           	callstack 0
  4513                           
  4514 ;; *************** function _ecu_layer_intialize *****************
  4515 ;; Defined at:
  4516 ;;		line 82 in file "ECUAL/ecu_layer_init.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;		None
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;  ret             1   44[COMRAM] unsigned char 
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  1    wreg      unsigned char 
  4523 ;; Registers used:
  4524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4531 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4533 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4534 ;;Total ram usage:        1 bytes
  4535 ;; Hardware stack levels used: 1
  4536 ;; Hardware stack levels required when called: 12
  4537 ;; This function calls:
  4538 ;;		_buzzer_init
  4539 ;;		_dc_motor_init
  4540 ;;		_lcd_4bit_initialize
  4541 ;;		_led_init
  4542 ;; This function is called by:
  4543 ;;		_application_initialize
  4544 ;; This function uses a non-reentrant model
  4545 ;;
  4546                           
  4547                           	psect	text31
  4548   002F36                     __ptext31:
  4549                           	callstack 0
  4550   002F36                     _ecu_layer_intialize:
  4551                           	callstack 17
  4552   002F36  0EB9               	movlw	low _lcd_4bits
  4553   002F38  6E29               	movwf	lcd_4bit_initialize@_lcd^0,c
  4554   002F3A  ECE2  F00F         	call	_lcd_4bit_initialize	;wreg free
  4555   002F3E  0E62               	movlw	low _motor_1
  4556   002F40  6E22               	movwf	dc_motor_init@_dc_motor^0,c
  4557   002F42  EC1D  F015         	call	_dc_motor_init	;wreg free
  4558   002F46  0E60               	movlw	low _motor_2
  4559   002F48  6E22               	movwf	dc_motor_init@_dc_motor^0,c
  4560   002F4A  EC1D  F015         	call	_dc_motor_init	;wreg free
  4561   002F4E  0E65               	movlw	low _red_led
  4562   002F50  6E22               	movwf	led_init@led^0,c
  4563   002F52  EC5C  F014         	call	_led_init	;wreg free
  4564   002F56  0E66               	movlw	low _green_led
  4565   002F58  6E22               	movwf	led_init@led^0,c
  4566   002F5A  EC5C  F014         	call	_led_init	;wreg free
  4567   002F5E                     
  4568                           ;ECUAL/ecu_layer_init.c: 89:     ret = buzzer_init(&buzzer);
  4569   002F5E  0E64               	movlw	low _buzzer
  4570   002F60  6E22               	movwf	buzzer_init@_buzzer^0,c
  4571   002F62  EC83  F018         	call	_buzzer_init	;wreg free
  4572   002F66  6E2D               	movwf	ecu_layer_intialize@ret^0,c
  4573                           
  4574                           ;ECUAL/ecu_layer_init.c: 90:     return ret;
  4575   002F68  502D               	movf	ecu_layer_intialize@ret^0,w,c
  4576   002F6A  0012               	return		;funcret
  4577   002F6C                     __end_of_ecu_layer_intialize:
  4578                           	callstack 0
  4579                           
  4580 ;; *************** function _led_init *****************
  4581 ;; Defined at:
  4582 ;;		line 21 in file "ECUAL/LED/LED.c"
  4583 ;; Parameters:    Size  Location     Type
  4584 ;;  led             1   33[COMRAM] PTR const struct .
  4585 ;;		 -> red_led(1), green_led(1), 
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;  led_pin_conf    1   36[COMRAM] struct .
  4588 ;;  ret             1   35[COMRAM] unsigned char 
  4589 ;; Return value:  Size  Location     Type
  4590 ;;                  1    wreg      unsigned char 
  4591 ;; Registers used:
  4592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4593 ;; Tracked objects:
  4594 ;;		On entry : 0/0
  4595 ;;		On exit  : 0/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4598 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4599 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4600 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4601 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4602 ;;Total ram usage:        4 bytes
  4603 ;; Hardware stack levels used: 1
  4604 ;; Hardware stack levels required when called: 10
  4605 ;; This function calls:
  4606 ;;		_gpio_pin_initialize
  4607 ;; This function is called by:
  4608 ;;		_ecu_layer_intialize
  4609 ;; This function uses a non-reentrant model
  4610 ;;
  4611                           
  4612                           	psect	text32
  4613   0028B8                     __ptext32:
  4614                           	callstack 0
  4615   0028B8                     _led_init:
  4616                           	callstack 18
  4617   0028B8                     
  4618                           ;ECUAL/LED/LED.c: 23:     if(((void*)0) == led || (led -> pin) > (8 - 1) ){
  4619   0028B8  5022               	movf	led_init@led^0,w,c
  4620   0028BA  B4D8               	btfsc	status,2,c
  4621   0028BC  EF62  F014         	goto	u5051
  4622   0028C0  EF64  F014         	goto	u5050
  4623   0028C4                     u5051:
  4624   0028C4  EF72  F014         	goto	l5825
  4625   0028C8                     u5050:
  4626   0028C8  5022               	movf	led_init@led^0,w,c
  4627   0028CA  6ED9               	movwf	fsr2l,c
  4628   0028CC  6ADA               	clrf	fsr2h,c
  4629   0028CE  38DF               	swapf	223,w,c
  4630   0028D0  0B07               	andlw	7
  4631   0028D2  6E23               	movwf	??_led_init^0,c
  4632   0028D4  0E07               	movlw	7
  4633   0028D6  6423               	cpfsgt	??_led_init^0,c
  4634   0028D8  EF70  F014         	goto	u5061
  4635   0028DC  EF72  F014         	goto	u5060
  4636   0028E0                     u5061:
  4637   0028E0  EF76  F014         	goto	l320
  4638   0028E4                     u5060:
  4639   0028E4                     l5825:
  4640                           
  4641                           ;ECUAL/LED/LED.c: 24:         ret = (Std_ReturnType)0x01U;
  4642   0028E4  0E01               	movlw	1
  4643   0028E6  6E24               	movwf	led_init@ret^0,c
  4644                           
  4645                           ;ECUAL/LED/LED.c: 25:     }
  4646   0028E8  EF9F  F014         	goto	l5835
  4647   0028EC                     l320:
  4648                           
  4649                           ;ECUAL/LED/LED.c: 27:         pin_config_t led_pin_config = {.port = led->port, .pin = l
      +                          ed->pin,
  4650   0028EC  C05C  F025         	movff	led_init@F3061,led_init@led_pin_config
  4651   0028F0  5022               	movf	led_init@led^0,w,c
  4652   0028F2  6ED9               	movwf	fsr2l,c
  4653   0028F4  6ADA               	clrf	fsr2h,c
  4654   0028F6  50DF               	movf	223,w,c
  4655   0028F8  0B0F               	andlw	15
  4656   0028FA  6E23               	movwf	??_led_init^0,c
  4657   0028FC  5025               	movf	led_init@led_pin_config^0,w,c
  4658   0028FE  1823               	xorwf	??_led_init^0,w,c
  4659   002900  0BF8               	andlw	-8
  4660   002902  1823               	xorwf	??_led_init^0,w,c
  4661   002904  6E25               	movwf	led_init@led_pin_config^0,c
  4662   002906  5022               	movf	led_init@led^0,w,c
  4663   002908  6ED9               	movwf	fsr2l,c
  4664   00290A  6ADA               	clrf	fsr2h,c
  4665   00290C  38DF               	swapf	223,w,c
  4666   00290E  0B07               	andlw	7
  4667   002910  6E23               	movwf	??_led_init^0,c
  4668   002912  4623               	rlncf	??_led_init^0,f,c
  4669   002914  4623               	rlncf	??_led_init^0,f,c
  4670   002916  4623               	rlncf	??_led_init^0,f,c
  4671   002918  5025               	movf	led_init@led_pin_config^0,w,c
  4672   00291A  1823               	xorwf	??_led_init^0,w,c
  4673   00291C  0BC7               	andlw	-57
  4674   00291E  1823               	xorwf	??_led_init^0,w,c
  4675   002920  6E25               	movwf	led_init@led_pin_config^0,c
  4676   002922  9C25               	bcf	led_init@led_pin_config^0,6,c
  4677   002924  5022               	movf	led_init@led^0,w,c
  4678   002926  6ED9               	movwf	fsr2l,c
  4679   002928  6ADA               	clrf	fsr2h,c
  4680   00292A  AEDF               	btfss	indf2,7,c
  4681   00292C  D002               	bra	u5075
  4682   00292E  8E25               	bsf	led_init@led_pin_config^0,7,c
  4683   002930  D001               	bra	u5077
  4684   002932                     u5075:
  4685   002932  9E25               	bcf	led_init@led_pin_config^0,7,c
  4686   002934                     u5077:
  4687   002934                     
  4688                           ;ECUAL/LED/LED.c: 30:         ret = gpio_pin_initialize(&led_pin_config);
  4689   002934  0E25               	movlw	low led_init@led_pin_config
  4690   002936  6E1F               	movwf	gpio_pin_initialize@_pin_config^0,c
  4691   002938  ECE5  F015         	call	_gpio_pin_initialize	;wreg free
  4692   00293C  6E24               	movwf	led_init@ret^0,c
  4693   00293E                     l5835:
  4694                           
  4695                           ;ECUAL/LED/LED.c: 32:     return ret;
  4696   00293E  5024               	movf	led_init@ret^0,w,c
  4697   002940  0012               	return		;funcret
  4698   002942                     __end_of_led_init:
  4699                           	callstack 0
  4700                           
  4701 ;; *************** function _lcd_4bit_initialize *****************
  4702 ;; Defined at:
  4703 ;;		line 24 in file "ECUAL/LCD/lcd.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;  _lcd            1   40[COMRAM] PTR const struct .
  4706 ;;		 -> lcd_4bits(6), 
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;  ret             1   43[COMRAM] unsigned char 
  4709 ;;  l_data_pins_    1   42[COMRAM] unsigned char 
  4710 ;; Return value:  Size  Location     Type
  4711 ;;                  1    wreg      unsigned char 
  4712 ;; Registers used:
  4713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4719 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4720 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4721 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4722 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4723 ;;Total ram usage:        4 bytes
  4724 ;; Hardware stack levels used: 1
  4725 ;; Hardware stack levels required when called: 11
  4726 ;; This function calls:
  4727 ;;		_gpio_pin_initialize
  4728 ;;		_lcd_4bit_send_command
  4729 ;; This function is called by:
  4730 ;;		_ecu_layer_intialize
  4731 ;; This function uses a non-reentrant model
  4732 ;;
  4733                           
  4734                           	psect	text33
  4735   001FC4                     __ptext33:
  4736                           	callstack 0
  4737   001FC4                     _lcd_4bit_initialize:
  4738                           	callstack 17
  4739   001FC4                     
  4740                           ;ECUAL/LCD/lcd.c: 26:     uint8_t l_data_pins_counter = 0x00U;
  4741   001FC4  0E00               	movlw	0
  4742   001FC6  6E2B               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
  4743                           
  4744                           ;ECUAL/LCD/lcd.c: 27:     if(((void*)0) == _lcd){
  4745   001FC8  5029               	movf	lcd_4bit_initialize@_lcd^0,w,c
  4746   001FCA  A4D8               	btfss	status,2,c
  4747   001FCC  EFEA  F00F         	goto	u4991
  4748   001FD0  EFEC  F00F         	goto	u4990
  4749   001FD4                     u4991:
  4750   001FD4  EFF0  F00F         	goto	l5769
  4751   001FD8                     u4990:
  4752   001FD8                     
  4753                           ;ECUAL/LCD/lcd.c: 28:         ret = (Std_ReturnType)0x01U;
  4754   001FD8  0E01               	movlw	1
  4755   001FDA  6E2C               	movwf	lcd_4bit_initialize@ret^0,c
  4756                           
  4757                           ;ECUAL/LCD/lcd.c: 29:     }
  4758   001FDC  EF51  F010         	goto	l5803
  4759   001FE0                     l5769:
  4760                           
  4761                           ;ECUAL/LCD/lcd.c: 31:         ret = gpio_pin_initialize(&(_lcd->lcd_rs_pin));
  4762   001FE0  C029  F01F         	movff	lcd_4bit_initialize@_lcd,gpio_pin_initialize@_pin_config
  4763   001FE4  ECE5  F015         	call	_gpio_pin_initialize	;wreg free
  4764   001FE8  6E2C               	movwf	lcd_4bit_initialize@ret^0,c
  4765                           
  4766                           ;ECUAL/LCD/lcd.c: 32:         ret = gpio_pin_initialize(&(_lcd->lcd_en_pin));
  4767   001FEA  2829               	incf	lcd_4bit_initialize@_lcd^0,w,c
  4768   001FEC  6E1F               	movwf	gpio_pin_initialize@_pin_config^0,c
  4769   001FEE  ECE5  F015         	call	_gpio_pin_initialize	;wreg free
  4770   001FF2  6E2C               	movwf	lcd_4bit_initialize@ret^0,c
  4771   001FF4                     l5775:
  4772   001FF4  5029               	movf	lcd_4bit_initialize@_lcd^0,w,c
  4773   001FF6  242B               	addwf	lcd_4bit_initialize@l_data_pins_counter^0,w,c
  4774   001FF8  0F02               	addlw	2
  4775   001FFA  6E1F               	movwf	gpio_pin_initialize@_pin_config^0,c
  4776   001FFC  ECE5  F015         	call	_gpio_pin_initialize	;wreg free
  4777   002000                     
  4778                           ;ECUAL/LCD/lcd.c: 35:         }
  4779   002000  2A2B               	incf	lcd_4bit_initialize@l_data_pins_counter^0,f,c
  4780   002002  0E03               	movlw	3
  4781   002004  642B               	cpfsgt	lcd_4bit_initialize@l_data_pins_counter^0,c
  4782   002006  EF07  F010         	goto	u5001
  4783   00200A  EF09  F010         	goto	u5000
  4784   00200E                     u5001:
  4785   00200E  EFFA  F00F         	goto	l5775
  4786   002012                     u5000:
  4787   002012                     
  4788                           ;ECUAL/LCD/lcd.c: 36:         _delay((unsigned long)((20)*(8000000/4000.0)));
  4789   002012  0E34               	movlw	52
  4790   002014  6E2A               	movwf	??_lcd_4bit_initialize^0,c
  4791   002016  0EF2               	movlw	242
  4792   002018                     u6167:
  4793   002018  2EE8               	decfsz	wreg,f,c
  4794   00201A  D7FE               	bra	u6167
  4795   00201C  2E2A               	decfsz	??_lcd_4bit_initialize^0,f,c
  4796   00201E  D7FC               	bra	u6167
  4797   002020  C029  F026         	movff	lcd_4bit_initialize@_lcd,lcd_4bit_send_command@_lcd
  4798   002024  0E38               	movlw	56
  4799   002026  6E27               	movwf	lcd_4bit_send_command@command^0,c
  4800   002028  EC70  F016         	call	_lcd_4bit_send_command	;wreg free
  4801   00202C                     
  4802                           ;ECUAL/LCD/lcd.c: 38:         _delay((unsigned long)((5)*(8000000/4000.0)));
  4803   00202C  0E0D               	movlw	13
  4804   00202E  6E2A               	movwf	??_lcd_4bit_initialize^0,c
  4805   002030  0EFC               	movlw	252
  4806   002032                     u6177:
  4807   002032  2EE8               	decfsz	wreg,f,c
  4808   002034  D7FE               	bra	u6177
  4809   002036  2E2A               	decfsz	??_lcd_4bit_initialize^0,f,c
  4810   002038  D7FC               	bra	u6177
  4811   00203A  C029  F026         	movff	lcd_4bit_initialize@_lcd,lcd_4bit_send_command@_lcd
  4812   00203E  0E38               	movlw	56
  4813   002040  6E27               	movwf	lcd_4bit_send_command@command^0,c
  4814   002042  EC70  F016         	call	_lcd_4bit_send_command	;wreg free
  4815   002046                     
  4816                           ;ECUAL/LCD/lcd.c: 40:         _delay((unsigned long)((150)*(8000000/4000000.0)));
  4817   002046  0E64               	movlw	100
  4818   002048                     u6187:
  4819   002048  2EE8               	decfsz	wreg,f,c
  4820   00204A  D7FE               	bra	u6187
  4821   00204C  C029  F026         	movff	lcd_4bit_initialize@_lcd,lcd_4bit_send_command@_lcd
  4822   002050  0E38               	movlw	56
  4823   002052  6E27               	movwf	lcd_4bit_send_command@command^0,c
  4824   002054  EC70  F016         	call	_lcd_4bit_send_command	;wreg free
  4825   002058  C029  F026         	movff	lcd_4bit_initialize@_lcd,lcd_4bit_send_command@_lcd
  4826   00205C  0E01               	movlw	1
  4827   00205E  6E27               	movwf	lcd_4bit_send_command@command^0,c
  4828   002060  EC70  F016         	call	_lcd_4bit_send_command	;wreg free
  4829   002064  C029  F026         	movff	lcd_4bit_initialize@_lcd,lcd_4bit_send_command@_lcd
  4830   002068  0E02               	movlw	2
  4831   00206A  6E27               	movwf	lcd_4bit_send_command@command^0,c
  4832   00206C  EC70  F016         	call	_lcd_4bit_send_command	;wreg free
  4833   002070  C029  F026         	movff	lcd_4bit_initialize@_lcd,lcd_4bit_send_command@_lcd
  4834   002074  0E06               	movlw	6
  4835   002076  6E27               	movwf	lcd_4bit_send_command@command^0,c
  4836   002078  EC70  F016         	call	_lcd_4bit_send_command	;wreg free
  4837   00207C  C029  F026         	movff	lcd_4bit_initialize@_lcd,lcd_4bit_send_command@_lcd
  4838   002080  0E0C               	movlw	12
  4839   002082  6E27               	movwf	lcd_4bit_send_command@command^0,c
  4840   002084  EC70  F016         	call	_lcd_4bit_send_command	;wreg free
  4841   002088  C029  F026         	movff	lcd_4bit_initialize@_lcd,lcd_4bit_send_command@_lcd
  4842   00208C  0E28               	movlw	40
  4843   00208E  6E27               	movwf	lcd_4bit_send_command@command^0,c
  4844   002090  EC70  F016         	call	_lcd_4bit_send_command	;wreg free
  4845   002094                     
  4846                           ;ECUAL/LCD/lcd.c: 47:         ret = lcd_4bit_send_command(_lcd, 0x80);
  4847   002094  C029  F026         	movff	lcd_4bit_initialize@_lcd,lcd_4bit_send_command@_lcd
  4848   002098  0E80               	movlw	128
  4849   00209A  6E27               	movwf	lcd_4bit_send_command@command^0,c
  4850   00209C  EC70  F016         	call	_lcd_4bit_send_command	;wreg free
  4851   0020A0  6E2C               	movwf	lcd_4bit_initialize@ret^0,c
  4852   0020A2                     l5803:
  4853                           
  4854                           ;ECUAL/LCD/lcd.c: 49:    return ret;
  4855   0020A2  502C               	movf	lcd_4bit_initialize@ret^0,w,c
  4856   0020A4  0012               	return		;funcret
  4857   0020A6                     __end_of_lcd_4bit_initialize:
  4858                           	callstack 0
  4859                           
  4860 ;; *************** function _lcd_4bit_send_command *****************
  4861 ;; Defined at:
  4862 ;;		line 63 in file "ECUAL/LCD/lcd.c"
  4863 ;; Parameters:    Size  Location     Type
  4864 ;;  _lcd            1   37[COMRAM] PTR const struct .
  4865 ;;		 -> lcd_4bits(6), 
  4866 ;;  command         1   38[COMRAM] unsigned char 
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;  ret             1   39[COMRAM] unsigned char 
  4869 ;; Return value:  Size  Location     Type
  4870 ;;                  1    wreg      unsigned char 
  4871 ;; Registers used:
  4872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/0
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4878 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4879 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4881 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4882 ;;Total ram usage:        3 bytes
  4883 ;; Hardware stack levels used: 1
  4884 ;; Hardware stack levels required when called: 10
  4885 ;; This function calls:
  4886 ;;		_gpio_pin_write_logic
  4887 ;;		_lcd_4bit_send_enable_signal
  4888 ;;		_lcd_send_4bits
  4889 ;; This function is called by:
  4890 ;;		_intro_msg
  4891 ;;		_lcd_4bit_initialize
  4892 ;;		_lcd_4bit_set_cursor
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           	psect	text34
  4897   002CE0                     __ptext34:
  4898                           	callstack 0
  4899   002CE0                     _lcd_4bit_send_command:
  4900                           	callstack 18
  4901   002CE0                     
  4902                           ;ECUAL/LCD/lcd.c: 65:     if(((void*)0) == _lcd){
  4903   002CE0  5026               	movf	lcd_4bit_send_command@_lcd^0,w,c
  4904   002CE2  A4D8               	btfss	status,2,c
  4905   002CE4  EF76  F016         	goto	u4731
  4906   002CE8  EF78  F016         	goto	u4730
  4907   002CEC                     u4731:
  4908   002CEC  EF7C  F016         	goto	l5577
  4909   002CF0                     u4730:
  4910   002CF0                     
  4911                           ;ECUAL/LCD/lcd.c: 66:         ret = (Std_ReturnType)0x01U;
  4912   002CF0  0E01               	movlw	1
  4913   002CF2  6E28               	movwf	lcd_4bit_send_command@ret^0,c
  4914                           
  4915                           ;ECUAL/LCD/lcd.c: 67:     }
  4916   002CF4  EF9C  F016         	goto	l5579
  4917   002CF8                     l5577:
  4918                           
  4919                           ;ECUAL/LCD/lcd.c: 69:         ret = gpio_pin_write_logic(&(_lcd->lcd_rs_pin), GPIO_LOW);
  4920   002CF8  C026  F017         	movff	lcd_4bit_send_command@_lcd,gpio_pin_write_logic@_pin_config
  4921   002CFC  0E00               	movlw	0
  4922   002CFE  6E18               	movwf	gpio_pin_write_logic@logic^0,c
  4923   002D00  ECF3  F00D         	call	_gpio_pin_write_logic	;wreg free
  4924   002D04  6E28               	movwf	lcd_4bit_send_command@ret^0,c
  4925                           
  4926                           ;ECUAL/LCD/lcd.c: 70:         ret = lcd_send_4bits(_lcd, command >> 4);
  4927   002D06  C026  F01F         	movff	lcd_4bit_send_command@_lcd,lcd_send_4bits@_lcd
  4928   002D0A  3827               	swapf	lcd_4bit_send_command@command^0,w,c
  4929   002D0C  0B0F               	andlw	15
  4930   002D0E  6E20               	movwf	lcd_send_4bits@data_command^0,c
  4931   002D10  ECB5  F015         	call	_lcd_send_4bits	;wreg free
  4932   002D14  6E28               	movwf	lcd_4bit_send_command@ret^0,c
  4933                           
  4934                           ;ECUAL/LCD/lcd.c: 71:         ret = lcd_4bit_send_enable_signal(_lcd);
  4935   002D16  C026  F01F         	movff	lcd_4bit_send_command@_lcd,lcd_4bit_send_enable_signal@_lcd
  4936   002D1A  EC70  F018         	call	_lcd_4bit_send_enable_signal	;wreg free
  4937   002D1E  6E28               	movwf	lcd_4bit_send_command@ret^0,c
  4938                           
  4939                           ;ECUAL/LCD/lcd.c: 72:         ret = lcd_send_4bits(_lcd, command);
  4940   002D20  C026  F01F         	movff	lcd_4bit_send_command@_lcd,lcd_send_4bits@_lcd
  4941   002D24  C027  F020         	movff	lcd_4bit_send_command@command,lcd_send_4bits@data_command
  4942   002D28  ECB5  F015         	call	_lcd_send_4bits	;wreg free
  4943   002D2C  6E28               	movwf	lcd_4bit_send_command@ret^0,c
  4944                           
  4945                           ;ECUAL/LCD/lcd.c: 73:         ret = lcd_4bit_send_enable_signal(_lcd);
  4946   002D2E  C026  F01F         	movff	lcd_4bit_send_command@_lcd,lcd_4bit_send_enable_signal@_lcd
  4947   002D32  EC70  F018         	call	_lcd_4bit_send_enable_signal	;wreg free
  4948   002D36  6E28               	movwf	lcd_4bit_send_command@ret^0,c
  4949   002D38                     l5579:
  4950                           
  4951                           ;ECUAL/LCD/lcd.c: 75:    return ret;
  4952   002D38  5028               	movf	lcd_4bit_send_command@ret^0,w,c
  4953   002D3A  0012               	return		;funcret
  4954   002D3C                     __end_of_lcd_4bit_send_command:
  4955                           	callstack 0
  4956                           
  4957 ;; *************** function _lcd_send_4bits *****************
  4958 ;; Defined at:
  4959 ;;		line 554 in file "ECUAL/LCD/lcd.c"
  4960 ;; Parameters:    Size  Location     Type
  4961 ;;  _lcd            1   30[COMRAM] PTR const struct .
  4962 ;;		 -> lcd_4bits(6), 
  4963 ;;  data_command    1   31[COMRAM] unsigned char 
  4964 ;; Auto vars:     Size  Location     Type
  4965 ;;  ret             1   36[COMRAM] unsigned char 
  4966 ;;  ret_3           1   35[COMRAM] unsigned char 
  4967 ;;  ret_2           1   34[COMRAM] unsigned char 
  4968 ;;  ret_1           1   33[COMRAM] unsigned char 
  4969 ;;  ret_0           1   32[COMRAM] unsigned char 
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  1    wreg      unsigned char 
  4972 ;; Registers used:
  4973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4979 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4980 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4982 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4983 ;;Total ram usage:        7 bytes
  4984 ;; Hardware stack levels used: 1
  4985 ;; Hardware stack levels required when called: 9
  4986 ;; This function calls:
  4987 ;;		_gpio_pin_write_logic
  4988 ;; This function is called by:
  4989 ;;		_lcd_4bit_send_command
  4990 ;;		_lcd_4bit_send_char_data
  4991 ;; This function uses a non-reentrant model
  4992 ;;
  4993                           
  4994                           	psect	text35
  4995   002B6A                     __ptext35:
  4996                           	callstack 0
  4997   002B6A                     _lcd_send_4bits:
  4998                           	callstack 18
  4999   002B6A                     
  5000                           ;ECUAL/LCD/lcd.c: 556:     Std_ReturnType ret_0 = gpio_pin_write_logic(&(_lcd->lcd_data_
      +                          pins[0]),
  5001   002B6A  501F               	movf	lcd_send_4bits@_lcd^0,w,c
  5002   002B6C  0F02               	addlw	2
  5003   002B6E  6E17               	movwf	gpio_pin_write_logic@_pin_config^0,c
  5004   002B70  5020               	movf	lcd_send_4bits@data_command^0,w,c
  5005   002B72  0B01               	andlw	1
  5006   002B74  6E18               	movwf	gpio_pin_write_logic@logic^0,c
  5007   002B76  ECF3  F00D         	call	_gpio_pin_write_logic	;wreg free
  5008   002B7A  6E21               	movwf	lcd_send_4bits@ret_0^0,c
  5009   002B7C                     
  5010                           ;ECUAL/LCD/lcd.c: 558:     Std_ReturnType ret_1 = gpio_pin_write_logic(&(_lcd->lcd_data_
      +                          pins[1]),
  5011   002B7C  501F               	movf	lcd_send_4bits@_lcd^0,w,c
  5012   002B7E  0F03               	addlw	3
  5013   002B80  6E17               	movwf	gpio_pin_write_logic@_pin_config^0,c
  5014   002B82  90D8               	bcf	status,0,c
  5015   002B84  3020               	rrcf	lcd_send_4bits@data_command^0,w,c
  5016   002B86  0B01               	andlw	1
  5017   002B88  6E18               	movwf	gpio_pin_write_logic@logic^0,c
  5018   002B8A  ECF3  F00D         	call	_gpio_pin_write_logic	;wreg free
  5019   002B8E  6E22               	movwf	lcd_send_4bits@ret_1^0,c
  5020   002B90                     
  5021                           ;ECUAL/LCD/lcd.c: 561:     Std_ReturnType ret_2 = gpio_pin_write_logic(&(_lcd->lcd_data_
      +                          pins[2]),
  5022   002B90  501F               	movf	lcd_send_4bits@_lcd^0,w,c
  5023   002B92  0F04               	addlw	4
  5024   002B94  6E17               	movwf	gpio_pin_write_logic@_pin_config^0,c
  5025   002B96  4020               	rrncf	lcd_send_4bits@data_command^0,w,c
  5026   002B98  42E8               	rrncf	wreg,f,c
  5027   002B9A  0B3F               	andlw	63
  5028   002B9C  0B01               	andlw	1
  5029   002B9E  6E18               	movwf	gpio_pin_write_logic@logic^0,c
  5030   002BA0  ECF3  F00D         	call	_gpio_pin_write_logic	;wreg free
  5031   002BA4  6E23               	movwf	lcd_send_4bits@ret_2^0,c
  5032   002BA6                     
  5033                           ;ECUAL/LCD/lcd.c: 564:     Std_ReturnType ret_3 = gpio_pin_write_logic(&(_lcd->lcd_data_
      +                          pins[3]),
  5034   002BA6  501F               	movf	lcd_send_4bits@_lcd^0,w,c
  5035   002BA8  0F05               	addlw	5
  5036   002BAA  6E17               	movwf	gpio_pin_write_logic@_pin_config^0,c
  5037   002BAC  3820               	swapf	lcd_send_4bits@data_command^0,w,c
  5038   002BAE  46E8               	rlncf	wreg,f,c
  5039   002BB0  0B1F               	andlw	31
  5040   002BB2  0B01               	andlw	1
  5041   002BB4  6E18               	movwf	gpio_pin_write_logic@logic^0,c
  5042   002BB6  ECF3  F00D         	call	_gpio_pin_write_logic	;wreg free
  5043   002BBA  6E24               	movwf	lcd_send_4bits@ret_3^0,c
  5044   002BBC                     
  5045                           ;ECUAL/LCD/lcd.c: 566:     ret = ((ret_0) & (ret_1) & (ret_2) & (ret_3));
  5046   002BBC  5021               	movf	lcd_send_4bits@ret_0^0,w,c
  5047   002BBE  1422               	andwf	lcd_send_4bits@ret_1^0,w,c
  5048   002BC0  1423               	andwf	lcd_send_4bits@ret_2^0,w,c
  5049   002BC2  1424               	andwf	lcd_send_4bits@ret_3^0,w,c
  5050   002BC4  6E25               	movwf	lcd_send_4bits@ret^0,c
  5051   002BC6                     
  5052                           ;ECUAL/LCD/lcd.c: 567:     return ret;
  5053   002BC6  5025               	movf	lcd_send_4bits@ret^0,w,c
  5054   002BC8  0012               	return		;funcret
  5055   002BCA                     __end_of_lcd_send_4bits:
  5056                           	callstack 0
  5057                           
  5058 ;; *************** function _lcd_4bit_send_enable_signal *****************
  5059 ;; Defined at:
  5060 ;;		line 577 in file "ECUAL/LCD/lcd.c"
  5061 ;; Parameters:    Size  Location     Type
  5062 ;;  _lcd            1   30[COMRAM] PTR const struct .
  5063 ;;		 -> lcd_4bits(6), 
  5064 ;; Auto vars:     Size  Location     Type
  5065 ;;  ret             1   31[COMRAM] unsigned char 
  5066 ;; Return value:  Size  Location     Type
  5067 ;;                  1    wreg      unsigned char 
  5068 ;; Registers used:
  5069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5070 ;; Tracked objects:
  5071 ;;		On entry : 0/0
  5072 ;;		On exit  : 0/0
  5073 ;;		Unchanged: 0/0
  5074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5075 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5076 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5078 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5079 ;;Total ram usage:        2 bytes
  5080 ;; Hardware stack levels used: 1
  5081 ;; Hardware stack levels required when called: 9
  5082 ;; This function calls:
  5083 ;;		_gpio_pin_write_logic
  5084 ;; This function is called by:
  5085 ;;		_lcd_4bit_send_command
  5086 ;;		_lcd_4bit_send_char_data
  5087 ;; This function uses a non-reentrant model
  5088 ;;
  5089                           
  5090                           	psect	text36
  5091   0030E0                     __ptext36:
  5092                           	callstack 0
  5093   0030E0                     _lcd_4bit_send_enable_signal:
  5094                           	callstack 18
  5095   0030E0  281F               	incf	lcd_4bit_send_enable_signal@_lcd^0,w,c
  5096   0030E2  6E17               	movwf	gpio_pin_write_logic@_pin_config^0,c
  5097   0030E4  0E01               	movlw	1
  5098   0030E6  6E18               	movwf	gpio_pin_write_logic@logic^0,c
  5099   0030E8  ECF3  F00D         	call	_gpio_pin_write_logic	;wreg free
  5100   0030EC                     
  5101                           ;ECUAL/LCD/lcd.c: 580:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  5102   0030EC  0E03               	movlw	3
  5103   0030EE                     u6197:
  5104   0030EE  2EE8               	decfsz	wreg,f,c
  5105   0030F0  D7FE               	bra	u6197
  5106   0030F2  0000               	nop	
  5107   0030F4                     
  5108                           ;ECUAL/LCD/lcd.c: 581:     ret = gpio_pin_write_logic(&(_lcd->lcd_en_pin), GPIO_LOW);
  5109   0030F4  281F               	incf	lcd_4bit_send_enable_signal@_lcd^0,w,c
  5110   0030F6  6E17               	movwf	gpio_pin_write_logic@_pin_config^0,c
  5111   0030F8  0E00               	movlw	0
  5112   0030FA  6E18               	movwf	gpio_pin_write_logic@logic^0,c
  5113   0030FC  ECF3  F00D         	call	_gpio_pin_write_logic	;wreg free
  5114   003100  6E20               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  5115   003102                     
  5116                           ;ECUAL/LCD/lcd.c: 583:     return ret;
  5117   003102  5020               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  5118   003104  0012               	return		;funcret
  5119   003106                     __end_of_lcd_4bit_send_enable_signal:
  5120                           	callstack 0
  5121                           
  5122 ;; *************** function _dc_motor_init *****************
  5123 ;; Defined at:
  5124 ;;		line 10 in file "ECUAL/DC_Motor/dc_motor.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;  _dc_motor       1   33[COMRAM] PTR const struct .
  5127 ;;		 -> motor_2(2), motor_1(2), 
  5128 ;; Auto vars:     Size  Location     Type
  5129 ;;  ret             1   35[COMRAM] unsigned char 
  5130 ;; Return value:  Size  Location     Type
  5131 ;;                  1    wreg      unsigned char 
  5132 ;; Registers used:
  5133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5134 ;; Tracked objects:
  5135 ;;		On entry : 0/0
  5136 ;;		On exit  : 0/0
  5137 ;;		Unchanged: 0/0
  5138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5139 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5140 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5141 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5142 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5143 ;;Total ram usage:        3 bytes
  5144 ;; Hardware stack levels used: 1
  5145 ;; Hardware stack levels required when called: 10
  5146 ;; This function calls:
  5147 ;;		_gpio_pin_initialize
  5148 ;; This function is called by:
  5149 ;;		_ecu_layer_intialize
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           
  5153                           	psect	text37
  5154   002A3A                     __ptext37:
  5155                           	callstack 0
  5156   002A3A                     _dc_motor_init:
  5157                           	callstack 18
  5158   002A3A                     
  5159                           ;ECUAL/DC_Motor/dc_motor.c: 12:     if((((void*)0) == _dc_motor) || ((_dc_motor->motor_p
      +                          in)->pin) > 8 - 1
  5160   002A3A  5022               	movf	dc_motor_init@_dc_motor^0,w,c
  5161   002A3C  B4D8               	btfsc	status,2,c
  5162   002A3E  EF23  F015         	goto	u4961
  5163   002A42  EF25  F015         	goto	u4960
  5164   002A46                     u4961:
  5165   002A46  EF43  F015         	goto	l5757
  5166   002A4A                     u4960:
  5167   002A4A  5022               	movf	dc_motor_init@_dc_motor^0,w,c
  5168   002A4C  6ED9               	movwf	fsr2l,c
  5169   002A4E  6ADA               	clrf	fsr2h,c
  5170   002A50  30DF               	rrcf	223,w,c
  5171   002A52  32E8               	rrcf	wreg,f,c
  5172   002A54  32E8               	rrcf	wreg,f,c
  5173   002A56  0B07               	andlw	7
  5174   002A58  6E23               	movwf	??_dc_motor_init^0,c
  5175   002A5A  0E08               	movlw	8
  5176   002A5C  6023               	cpfslt	??_dc_motor_init^0,c
  5177   002A5E  EF33  F015         	goto	u4971
  5178   002A62  EF35  F015         	goto	u4970
  5179   002A66                     u4971:
  5180   002A66  EF43  F015         	goto	l5757
  5181   002A6A                     u4970:
  5182   002A6A  5022               	movf	dc_motor_init@_dc_motor^0,w,c
  5183   002A6C  6ED9               	movwf	fsr2l,c
  5184   002A6E  6ADA               	clrf	fsr2h,c
  5185   002A70  50DF               	movf	223,w,c
  5186   002A72  0B07               	andlw	7
  5187   002A74  6E23               	movwf	??_dc_motor_init^0,c
  5188   002A76  0E04               	movlw	4
  5189   002A78  6423               	cpfsgt	??_dc_motor_init^0,c
  5190   002A7A  EF41  F015         	goto	u4981
  5191   002A7E  EF43  F015         	goto	u4980
  5192   002A82                     u4981:
  5193   002A82  EF47  F015         	goto	l5759
  5194   002A86                     u4980:
  5195   002A86                     l5757:
  5196                           
  5197                           ;ECUAL/DC_Motor/dc_motor.c: 13:                            || ((_dc_motor->motor_pin)->p
      +                          ort) > 5 - 1){;ECUAL/DC_Motor/dc_motor.c: 14:         ret = (Std_ReturnType)0x01U;
  5198   002A86  0E01               	movlw	1
  5199   002A88  6E24               	movwf	dc_motor_init@ret^0,c
  5200                           
  5201                           ;ECUAL/DC_Motor/dc_motor.c: 15:     }else{
  5202   002A8A  EF51  F015         	goto	l5761
  5203   002A8E                     l5759:
  5204                           
  5205                           ;ECUAL/DC_Motor/dc_motor.c: 16:         ret = gpio_pin_initialize(&(_dc_motor->motor_pin
      +                          [0x00U]));
  5206   002A8E  C022  F01F         	movff	dc_motor_init@_dc_motor,gpio_pin_initialize@_pin_config
  5207   002A92  ECE5  F015         	call	_gpio_pin_initialize	;wreg free
  5208   002A96  6E24               	movwf	dc_motor_init@ret^0,c
  5209                           
  5210                           ;ECUAL/DC_Motor/dc_motor.c: 17:         ret = gpio_pin_initialize(&(_dc_motor->motor_pin
      +                          [0x01U]));
  5211   002A98  2822               	incf	dc_motor_init@_dc_motor^0,w,c
  5212   002A9A  6E1F               	movwf	gpio_pin_initialize@_pin_config^0,c
  5213   002A9C  ECE5  F015         	call	_gpio_pin_initialize	;wreg free
  5214   002AA0  6E24               	movwf	dc_motor_init@ret^0,c
  5215   002AA2                     l5761:
  5216                           
  5217                           ;ECUAL/DC_Motor/dc_motor.c: 19:     return ret;
  5218   002AA2  5024               	movf	dc_motor_init@ret^0,w,c
  5219   002AA4  0012               	return		;funcret
  5220   002AA6                     __end_of_dc_motor_init:
  5221                           	callstack 0
  5222                           
  5223 ;; *************** function _buzzer_init *****************
  5224 ;; Defined at:
  5225 ;;		line 21 in file "ECUAL/BUZZER/buzzer.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;  _buzzer         1   33[COMRAM] PTR const struct .
  5228 ;;		 -> buzzer(1), 
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;  ret             1   34[COMRAM] unsigned char 
  5231 ;; Return value:  Size  Location     Type
  5232 ;;                  1    wreg      unsigned char 
  5233 ;; Registers used:
  5234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5235 ;; Tracked objects:
  5236 ;;		On entry : 0/0
  5237 ;;		On exit  : 0/0
  5238 ;;		Unchanged: 0/0
  5239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5240 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5241 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5243 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5244 ;;Total ram usage:        2 bytes
  5245 ;; Hardware stack levels used: 1
  5246 ;; Hardware stack levels required when called: 10
  5247 ;; This function calls:
  5248 ;;		_gpio_pin_initialize
  5249 ;; This function is called by:
  5250 ;;		_ecu_layer_intialize
  5251 ;; This function uses a non-reentrant model
  5252 ;;
  5253                           
  5254                           	psect	text38
  5255   003106                     __ptext38:
  5256                           	callstack 0
  5257   003106                     _buzzer_init:
  5258                           	callstack 18
  5259   003106                     
  5260                           ;ECUAL/BUZZER/buzzer.c: 24:     if (((void*)0) == _buzzer)
  5261   003106  5022               	movf	buzzer_init@_buzzer^0,w,c
  5262   003108  A4D8               	btfss	status,2,c
  5263   00310A  EF89  F018         	goto	u5081
  5264   00310E  EF8B  F018         	goto	u5080
  5265   003112                     u5081:
  5266   003112  EF8F  F018         	goto	l5843
  5267   003116                     u5080:
  5268   003116                     
  5269                           ;ECUAL/BUZZER/buzzer.c: 25:     {;ECUAL/BUZZER/buzzer.c: 26:         ret = (Std_ReturnTy
      +                          pe)0x01U;
  5270   003116  0E01               	movlw	1
  5271   003118  6E23               	movwf	buzzer_init@ret^0,c
  5272                           
  5273                           ;ECUAL/BUZZER/buzzer.c: 27:     }
  5274   00311A  EF94  F018         	goto	l5845
  5275   00311E                     l5843:
  5276                           
  5277                           ;ECUAL/BUZZER/buzzer.c: 29:     {;ECUAL/BUZZER/buzzer.c: 30:         ret = gpio_pin_init
      +                          ialize(&(_buzzer->buzzer_pin));
  5278   00311E  C022  F01F         	movff	buzzer_init@_buzzer,gpio_pin_initialize@_pin_config
  5279   003122  ECE5  F015         	call	_gpio_pin_initialize	;wreg free
  5280   003126  6E23               	movwf	buzzer_init@ret^0,c
  5281   003128                     l5845:
  5282                           
  5283                           ;ECUAL/BUZZER/buzzer.c: 32:     return ret;
  5284   003128  5023               	movf	buzzer_init@ret^0,w,c
  5285   00312A  0012               	return		;funcret
  5286   00312C                     __end_of_buzzer_init:
  5287                           	callstack 0
  5288                           
  5289 ;; *************** function _gpio_pin_initialize *****************
  5290 ;; Defined at:
  5291 ;;		line 155 in file "MCAL/GPIO/gpio.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;  _pin_config     1   30[COMRAM] PTR const struct .
  5294 ;;		 -> motor_2$motor_pin(2), motor_1$motor_pin(2), lcd_4bits$lcd_data_pins(4), led_turn_OFF@led_pin_config(1), 
  5295 ;;		 -> led_turn_ON@led_pin_config(1), led_init@led_pin_config(1), buzzer(1), motor_2(2), 
  5296 ;;		 -> motor_1(2), lcd_4bits(6), 
  5297 ;; Auto vars:     Size  Location     Type
  5298 ;;  ret             1   32[COMRAM] unsigned char 
  5299 ;; Return value:  Size  Location     Type
  5300 ;;                  1    wreg      unsigned char 
  5301 ;; Registers used:
  5302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5303 ;; Tracked objects:
  5304 ;;		On entry : 0/0
  5305 ;;		On exit  : 0/0
  5306 ;;		Unchanged: 0/0
  5307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5308 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5309 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5310 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5311 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5312 ;;Total ram usage:        3 bytes
  5313 ;; Hardware stack levels used: 1
  5314 ;; Hardware stack levels required when called: 9
  5315 ;; This function calls:
  5316 ;;		_gpio_pin_direction_init
  5317 ;;		_gpio_pin_write_logic
  5318 ;; This function is called by:
  5319 ;;		_dc_motor_init
  5320 ;;		_lcd_4bit_initialize
  5321 ;;		_led_init
  5322 ;;		_led_turn_ON
  5323 ;;		_led_turn_OFF
  5324 ;;		_buzzer_init
  5325 ;;		_lcd_8bit_initialize
  5326 ;; This function uses a non-reentrant model
  5327 ;;
  5328                           
  5329                           	psect	text39
  5330   002BCA                     __ptext39:
  5331                           	callstack 0
  5332   002BCA                     _gpio_pin_initialize:
  5333                           	callstack 20
  5334   002BCA                     
  5335                           ;MCAL/GPIO/gpio.c: 157:     if(((void*)0) == _pin_config || (_pin_config -> pin) > 8 - 1
      +                          ){
  5336   002BCA  501F               	movf	gpio_pin_initialize@_pin_config^0,w,c
  5337   002BCC  B4D8               	btfsc	status,2,c
  5338   002BCE  EFEB  F015         	goto	u4741
  5339   002BD2  EFED  F015         	goto	u4740
  5340   002BD6                     u4741:
  5341   002BD6  EFFD  F015         	goto	l5587
  5342   002BDA                     u4740:
  5343   002BDA  501F               	movf	gpio_pin_initialize@_pin_config^0,w,c
  5344   002BDC  6ED9               	movwf	fsr2l,c
  5345   002BDE  6ADA               	clrf	fsr2h,c
  5346   002BE0  30DF               	rrcf	223,w,c
  5347   002BE2  32E8               	rrcf	wreg,f,c
  5348   002BE4  32E8               	rrcf	wreg,f,c
  5349   002BE6  0B07               	andlw	7
  5350   002BE8  6E20               	movwf	??_gpio_pin_initialize^0,c
  5351   002BEA  0E07               	movlw	7
  5352   002BEC  6420               	cpfsgt	??_gpio_pin_initialize^0,c
  5353   002BEE  EFFB  F015         	goto	u4751
  5354   002BF2  EFFD  F015         	goto	u4750
  5355   002BF6                     u4751:
  5356   002BF6  EF01  F016         	goto	l5589
  5357   002BFA                     u4750:
  5358   002BFA                     l5587:
  5359                           
  5360                           ;MCAL/GPIO/gpio.c: 158:         ret = (Std_ReturnType)0x01U;
  5361   002BFA  0E01               	movlw	1
  5362   002BFC  6E21               	movwf	gpio_pin_initialize@ret^0,c
  5363                           
  5364                           ;MCAL/GPIO/gpio.c: 159:     }
  5365   002BFE  EF12  F016         	goto	l5591
  5366   002C02                     l5589:
  5367                           
  5368                           ;MCAL/GPIO/gpio.c: 161:         ret = gpio_pin_direction_init(_pin_config);
  5369   002C02  C01F  F017         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_init@_pin_config
  5370   002C06  ECD3  F00C         	call	_gpio_pin_direction_init	;wreg free
  5371   002C0A  6E21               	movwf	gpio_pin_initialize@ret^0,c
  5372                           
  5373                           ;MCAL/GPIO/gpio.c: 162:         ret = gpio_pin_write_logic(_pin_config, _pin_config -> l
      +                          ogic);
  5374   002C0C  C01F  F017         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
  5375   002C10  501F               	movf	gpio_pin_initialize@_pin_config^0,w,c
  5376   002C12  6ED9               	movwf	fsr2l,c
  5377   002C14  6ADA               	clrf	fsr2h,c
  5378   002C16  0E00               	movlw	0
  5379   002C18  BEDF               	btfsc	indf2,7,c
  5380   002C1A  0E01               	movlw	1
  5381   002C1C  6E18               	movwf	gpio_pin_write_logic@logic^0,c
  5382   002C1E  ECF3  F00D         	call	_gpio_pin_write_logic	;wreg free
  5383   002C22  6E21               	movwf	gpio_pin_initialize@ret^0,c
  5384   002C24                     l5591:
  5385                           
  5386                           ;MCAL/GPIO/gpio.c: 164:     return ret;
  5387   002C24  5021               	movf	gpio_pin_initialize@ret^0,w,c
  5388   002C26  0012               	return		;funcret
  5389   002C28                     __end_of_gpio_pin_initialize:
  5390                           	callstack 0
  5391                           
  5392 ;; *************** function _gpio_pin_write_logic *****************
  5393 ;; Defined at:
  5394 ;;		line 84 in file "MCAL/GPIO/gpio.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;  _pin_config     1   22[COMRAM] PTR const struct .
  5397 ;;		 -> motor_2$motor_pin(2), motor_1$motor_pin(2), lcd_4bits$lcd_data_pins(4), led_turn_OFF@led_pin_config(1), 
  5398 ;;		 -> led_turn_ON@led_pin_config(1), led_init@led_pin_config(1), buzzer(1), motor_2(2), 
  5399 ;;		 -> motor_1(2), lcd_4bits(6), 
  5400 ;;  logic           1   23[COMRAM] enum E2978
  5401 ;; Auto vars:     Size  Location     Type
  5402 ;;  ret             1   29[COMRAM] unsigned char 
  5403 ;; Return value:  Size  Location     Type
  5404 ;;                  1    wreg      unsigned char 
  5405 ;; Registers used:
  5406 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5407 ;; Tracked objects:
  5408 ;;		On entry : 0/0
  5409 ;;		On exit  : 0/0
  5410 ;;		Unchanged: 0/0
  5411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5412 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5413 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5414 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5415 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5416 ;;Total ram usage:        8 bytes
  5417 ;; Hardware stack levels used: 1
  5418 ;; Hardware stack levels required when called: 8
  5419 ;; This function calls:
  5420 ;;		Nothing
  5421 ;; This function is called by:
  5422 ;;		_dc_motor_move_CW
  5423 ;;		_dc_motor_stop
  5424 ;;		_lcd_4bit_send_command
  5425 ;;		_lcd_4bit_send_char_data
  5426 ;;		_lcd_send_4bits
  5427 ;;		_lcd_4bit_send_enable_signal
  5428 ;;		_led_turn_ON
  5429 ;;		_led_turn_OFF
  5430 ;;		_gpio_pin_initialize
  5431 ;;		_buzzer_turn_on
  5432 ;;		_buzzer_turn_off
  5433 ;;		_dc_motor_move_CCW
  5434 ;;		_lcd_8bit_send_command
  5435 ;;		_lcd_8bit_send_char_data
  5436 ;;		_lcd_8bit_send_enable_signal
  5437 ;; This function uses a non-reentrant model
  5438 ;;
  5439                           
  5440                           	psect	text40
  5441   001BE6                     __ptext40:
  5442                           	callstack 0
  5443   001BE6                     _gpio_pin_write_logic:
  5444                           	callstack 21
  5445   001BE6                     
  5446                           ;MCAL/GPIO/gpio.c: 85:     Std_ReturnType ret = (Std_ReturnType)0x00U;
  5447   001BE6  0E00               	movlw	0
  5448   001BE8  6E1E               	movwf	gpio_pin_write_logic@ret^0,c
  5449                           
  5450                           ;MCAL/GPIO/gpio.c: 86:     if(((void*)0) == _pin_config || (_pin_config -> pin) > 8 - 1)
      +                          {
  5451   001BEA  5017               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  5452   001BEC  B4D8               	btfsc	status,2,c
  5453   001BEE  EFFB  F00D         	goto	u4451
  5454   001BF2  EFFD  F00D         	goto	u4450
  5455   001BF6                     u4451:
  5456   001BF6  EF0D  F00E         	goto	l5395
  5457   001BFA                     u4450:
  5458   001BFA  5017               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  5459   001BFC  6ED9               	movwf	fsr2l,c
  5460   001BFE  6ADA               	clrf	fsr2h,c
  5461   001C00  30DF               	rrcf	223,w,c
  5462   001C02  32E8               	rrcf	wreg,f,c
  5463   001C04  32E8               	rrcf	wreg,f,c
  5464   001C06  0B07               	andlw	7
  5465   001C08  6E19               	movwf	??_gpio_pin_write_logic^0,c
  5466   001C0A  0E07               	movlw	7
  5467   001C0C  6419               	cpfsgt	??_gpio_pin_write_logic^0,c
  5468   001C0E  EF0B  F00E         	goto	u4461
  5469   001C12  EF0D  F00E         	goto	u4460
  5470   001C16                     u4461:
  5471   001C16  EF64  F00E         	goto	l5403
  5472   001C1A                     u4460:
  5473   001C1A                     l5395:
  5474                           
  5475                           ;MCAL/GPIO/gpio.c: 87:         ret = (Std_ReturnType)0x01U;
  5476   001C1A  0E01               	movlw	1
  5477   001C1C  6E1E               	movwf	gpio_pin_write_logic@ret^0,c
  5478                           
  5479                           ;MCAL/GPIO/gpio.c: 88:     }
  5480   001C1E  EF79  F00E         	goto	l5405
  5481   001C22                     l5397:
  5482                           
  5483                           ;MCAL/GPIO/gpio.c: 92:                 *lat_registers[_pin_config -> port] |= ((uint8_t)
      +                          0x01 << _pin_config -> pin);
  5484   001C22  5017               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  5485   001C24  6ED9               	movwf	fsr2l,c
  5486   001C26  6ADA               	clrf	fsr2h,c
  5487   001C28  30DF               	rrcf	223,w,c
  5488   001C2A  32E8               	rrcf	wreg,f,c
  5489   001C2C  32E8               	rrcf	wreg,f,c
  5490   001C2E  0B07               	andlw	7
  5491   001C30  6E19               	movwf	??_gpio_pin_write_logic^0,c
  5492   001C32  0E01               	movlw	1
  5493   001C34  6E1A               	movwf	(??_gpio_pin_write_logic+1)^0,c
  5494   001C36  2A19               	incf	??_gpio_pin_write_logic^0,f,c
  5495   001C38  EF20  F00E         	goto	u4474
  5496   001C3C                     u4475:
  5497   001C3C  90D8               	bcf	status,0,c
  5498   001C3E  361A               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  5499   001C40                     u4474:
  5500   001C40  2E19               	decfsz	??_gpio_pin_write_logic^0,f,c
  5501   001C42  EF1E  F00E         	goto	u4475
  5502   001C46  5017               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  5503   001C48  6ED9               	movwf	fsr2l,c
  5504   001C4A  6ADA               	clrf	fsr2h,c
  5505   001C4C  50DF               	movf	223,w,c
  5506   001C4E  0B07               	andlw	7
  5507   001C50  0D02               	mullw	2
  5508   001C52  50F3               	movf	243,w,c
  5509   001C54  0F96               	addlw	low _lat_registers
  5510   001C56  6ED9               	movwf	fsr2l,c
  5511   001C58  6ADA               	clrf	fsr2h,c
  5512   001C5A  CFDE F01B          	movff	postinc2,??_gpio_pin_write_logic+2
  5513   001C5E  CFDD F01C          	movff	postdec2,??_gpio_pin_write_logic+3
  5514   001C62  C01B  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  5515   001C66  C01C  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  5516   001C6A  501A               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5517   001C6C  12DF               	iorwf	indf2,f,c
  5518                           
  5519                           ;MCAL/GPIO/gpio.c: 93:                 break;
  5520   001C6E  EF79  F00E         	goto	l5405
  5521   001C72                     l5399:
  5522                           
  5523                           ;MCAL/GPIO/gpio.c: 95:                 *lat_registers[_pin_config -> port] &= ~((uint8_t
      +                          )0x01 << _pin_config -> pin);
  5524   001C72  5017               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  5525   001C74  6ED9               	movwf	fsr2l,c
  5526   001C76  6ADA               	clrf	fsr2h,c
  5527   001C78  30DF               	rrcf	223,w,c
  5528   001C7A  32E8               	rrcf	wreg,f,c
  5529   001C7C  32E8               	rrcf	wreg,f,c
  5530   001C7E  0B07               	andlw	7
  5531   001C80  6E19               	movwf	??_gpio_pin_write_logic^0,c
  5532   001C82  0E01               	movlw	1
  5533   001C84  6E1A               	movwf	(??_gpio_pin_write_logic+1)^0,c
  5534   001C86  2A19               	incf	??_gpio_pin_write_logic^0,f,c
  5535   001C88  EF48  F00E         	goto	u4484
  5536   001C8C                     u4485:
  5537   001C8C  90D8               	bcf	status,0,c
  5538   001C8E  361A               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  5539   001C90                     u4484:
  5540   001C90  2E19               	decfsz	??_gpio_pin_write_logic^0,f,c
  5541   001C92  EF46  F00E         	goto	u4485
  5542   001C96  501A               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5543   001C98  0AFF               	xorlw	255
  5544   001C9A  6E1B               	movwf	(??_gpio_pin_write_logic+2)^0,c
  5545   001C9C  5017               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  5546   001C9E  6ED9               	movwf	fsr2l,c
  5547   001CA0  6ADA               	clrf	fsr2h,c
  5548   001CA2  50DF               	movf	223,w,c
  5549   001CA4  0B07               	andlw	7
  5550   001CA6  0D02               	mullw	2
  5551   001CA8  50F3               	movf	243,w,c
  5552   001CAA  0F96               	addlw	low _lat_registers
  5553   001CAC  6ED9               	movwf	fsr2l,c
  5554   001CAE  6ADA               	clrf	fsr2h,c
  5555   001CB0  CFDE F01C          	movff	postinc2,??_gpio_pin_write_logic+3
  5556   001CB4  CFDD F01D          	movff	postdec2,??_gpio_pin_write_logic+4
  5557   001CB8  C01C  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  5558   001CBC  C01D  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  5559   001CC0  501B               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  5560   001CC2  16DF               	andwf	indf2,f,c
  5561                           
  5562                           ;MCAL/GPIO/gpio.c: 96:                 break;
  5563   001CC4  EF79  F00E         	goto	l5405
  5564   001CC8                     l5403:
  5565   001CC8  5018               	movf	gpio_pin_write_logic@logic^0,w,c
  5566   001CCA  6E19               	movwf	??_gpio_pin_write_logic^0,c
  5567   001CCC  6A1A               	clrf	(??_gpio_pin_write_logic+1)^0,c
  5568                           
  5569                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5570                           ; Switch size 1, requested type "simple"
  5571                           ; Number of cases is 1, Range of values is 0 to 0
  5572                           ; switch strategies available:
  5573                           ; Name         Instructions Cycles
  5574                           ; simple_byte            4     3 (average)
  5575                           ;	Chosen strategy is simple_byte
  5576   001CCE  501A               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5577   001CD0  0A00               	xorlw	0	; case 0
  5578   001CD2  B4D8               	btfsc	status,2,c
  5579   001CD4  EF6E  F00E         	goto	l6883
  5580   001CD8  EF0D  F00E         	goto	l5395
  5581   001CDC                     l6883:
  5582                           
  5583                           ; Switch size 1, requested type "simple"
  5584                           ; Number of cases is 2, Range of values is 0 to 1
  5585                           ; switch strategies available:
  5586                           ; Name         Instructions Cycles
  5587                           ; simple_byte            7     4 (average)
  5588                           ;	Chosen strategy is simple_byte
  5589   001CDC  5019               	movf	??_gpio_pin_write_logic^0,w,c
  5590   001CDE  0A00               	xorlw	0	; case 0
  5591   001CE0  B4D8               	btfsc	status,2,c
  5592   001CE2  EF39  F00E         	goto	l5399
  5593   001CE6  0A01               	xorlw	1	; case 1
  5594   001CE8  B4D8               	btfsc	status,2,c
  5595   001CEA  EF11  F00E         	goto	l5397
  5596   001CEE  EF0D  F00E         	goto	l5395
  5597   001CF2                     l5405:
  5598                           
  5599                           ;MCAL/GPIO/gpio.c: 100:     return ret;
  5600   001CF2  501E               	movf	gpio_pin_write_logic@ret^0,w,c
  5601   001CF4  0012               	return		;funcret
  5602   001CF6                     __end_of_gpio_pin_write_logic:
  5603                           	callstack 0
  5604                           
  5605 ;; *************** function _gpio_pin_direction_init *****************
  5606 ;; Defined at:
  5607 ;;		line 29 in file "MCAL/GPIO/gpio.c"
  5608 ;; Parameters:    Size  Location     Type
  5609 ;;  _pin_config     1   22[COMRAM] PTR const struct .
  5610 ;;		 -> motor_2$motor_pin(2), motor_1$motor_pin(2), lcd_4bits$lcd_data_pins(4), led_turn_OFF@led_pin_config(1), 
  5611 ;;		 -> led_turn_ON@led_pin_config(1), led_init@led_pin_config(1), buzzer(1), motor_2(2), 
  5612 ;;		 -> motor_1(2), lcd_4bits(6), 
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;  ret             1   28[COMRAM] unsigned char 
  5615 ;; Return value:  Size  Location     Type
  5616 ;;                  1    wreg      unsigned char 
  5617 ;; Registers used:
  5618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5624 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5625 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5626 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5627 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5628 ;;Total ram usage:        7 bytes
  5629 ;; Hardware stack levels used: 1
  5630 ;; Hardware stack levels required when called: 8
  5631 ;; This function calls:
  5632 ;;		Nothing
  5633 ;; This function is called by:
  5634 ;;		_gpio_pin_initialize
  5635 ;;		_button_init
  5636 ;;		_EXTI_INTx_pin_init
  5637 ;;		_EXTI_RBx_pin_init
  5638 ;; This function uses a non-reentrant model
  5639 ;;
  5640                           
  5641                           	psect	text41
  5642   0019A6                     __ptext41:
  5643                           	callstack 0
  5644   0019A6                     _gpio_pin_direction_init:
  5645                           	callstack 20
  5646   0019A6                     
  5647                           ;MCAL/GPIO/gpio.c: 30:     Std_ReturnType ret = (Std_ReturnType)0x00U;
  5648   0019A6  0E00               	movlw	0
  5649   0019A8  6E1D               	movwf	gpio_pin_direction_init@ret^0,c
  5650                           
  5651                           ;MCAL/GPIO/gpio.c: 31:     if(((void*)0) == _pin_config || _pin_config -> pin > 8 - 1){
  5652   0019AA  5017               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  5653   0019AC  B4D8               	btfsc	status,2,c
  5654   0019AE  EFDB  F00C         	goto	u4491
  5655   0019B2  EFDD  F00C         	goto	u4490
  5656   0019B6                     u4491:
  5657   0019B6  EFED  F00C         	goto	l5417
  5658   0019BA                     u4490:
  5659   0019BA  5017               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  5660   0019BC  6ED9               	movwf	fsr2l,c
  5661   0019BE  6ADA               	clrf	fsr2h,c
  5662   0019C0  30DF               	rrcf	223,w,c
  5663   0019C2  32E8               	rrcf	wreg,f,c
  5664   0019C4  32E8               	rrcf	wreg,f,c
  5665   0019C6  0B07               	andlw	7
  5666   0019C8  6E18               	movwf	??_gpio_pin_direction_init^0,c
  5667   0019CA  0E07               	movlw	7
  5668   0019CC  6418               	cpfsgt	??_gpio_pin_direction_init^0,c
  5669   0019CE  EFEB  F00C         	goto	u4501
  5670   0019D2  EFED  F00C         	goto	u4500
  5671   0019D6                     u4501:
  5672   0019D6  EF44  F00D         	goto	l5427
  5673   0019DA                     u4500:
  5674   0019DA                     l5417:
  5675                           
  5676                           ;MCAL/GPIO/gpio.c: 32:         ret = (Std_ReturnType)0x01U;
  5677   0019DA  0E01               	movlw	1
  5678   0019DC  6E1D               	movwf	gpio_pin_direction_init@ret^0,c
  5679                           
  5680                           ;MCAL/GPIO/gpio.c: 33:     }
  5681   0019DE  EF64  F00D         	goto	l5429
  5682   0019E2                     l5419:
  5683                           
  5684                           ;MCAL/GPIO/gpio.c: 37:                 *tris_registers[_pin_config -> port] &= ~((uint8_
      +                          t)0x01 << _pin_config -> pin);
  5685   0019E2  5017               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  5686   0019E4  6ED9               	movwf	fsr2l,c
  5687   0019E6  6ADA               	clrf	fsr2h,c
  5688   0019E8  30DF               	rrcf	223,w,c
  5689   0019EA  32E8               	rrcf	wreg,f,c
  5690   0019EC  32E8               	rrcf	wreg,f,c
  5691   0019EE  0B07               	andlw	7
  5692   0019F0  6E18               	movwf	??_gpio_pin_direction_init^0,c
  5693   0019F2  0E01               	movlw	1
  5694   0019F4  6E19               	movwf	(??_gpio_pin_direction_init+1)^0,c
  5695   0019F6  2A18               	incf	??_gpio_pin_direction_init^0,f,c
  5696   0019F8  EF00  F00D         	goto	u4514
  5697   0019FC                     u4515:
  5698   0019FC  90D8               	bcf	status,0,c
  5699   0019FE  3619               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  5700   001A00                     u4514:
  5701   001A00  2E18               	decfsz	??_gpio_pin_direction_init^0,f,c
  5702   001A02  EFFE  F00C         	goto	u4515
  5703   001A06  5019               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  5704   001A08  0AFF               	xorlw	255
  5705   001A0A  6E1A               	movwf	(??_gpio_pin_direction_init+2)^0,c
  5706   001A0C  5017               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  5707   001A0E  6ED9               	movwf	fsr2l,c
  5708   001A10  6ADA               	clrf	fsr2h,c
  5709   001A12  50DF               	movf	223,w,c
  5710   001A14  0B07               	andlw	7
  5711   001A16  0D02               	mullw	2
  5712   001A18  50F3               	movf	243,w,c
  5713   001A1A  0FA0               	addlw	low _tris_registers
  5714   001A1C  6ED9               	movwf	fsr2l,c
  5715   001A1E  6ADA               	clrf	fsr2h,c
  5716   001A20  CFDE F01B          	movff	postinc2,??_gpio_pin_direction_init+3
  5717   001A24  CFDD F01C          	movff	postdec2,??_gpio_pin_direction_init+4
  5718   001A28  C01B  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
  5719   001A2C  C01C  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
  5720   001A30  501A               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  5721   001A32  16DF               	andwf	indf2,f,c
  5722                           
  5723                           ;MCAL/GPIO/gpio.c: 38:                 break;
  5724   001A34  EF64  F00D         	goto	l5429
  5725   001A38                     l5421:
  5726                           
  5727                           ;MCAL/GPIO/gpio.c: 40:                 *tris_registers[_pin_config -> port] |= ((uint8_t
      +                          )0x01 << _pin_config -> pin);
  5728   001A38  5017               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  5729   001A3A  6ED9               	movwf	fsr2l,c
  5730   001A3C  6ADA               	clrf	fsr2h,c
  5731   001A3E  30DF               	rrcf	223,w,c
  5732   001A40  32E8               	rrcf	wreg,f,c
  5733   001A42  32E8               	rrcf	wreg,f,c
  5734   001A44  0B07               	andlw	7
  5735   001A46  6E18               	movwf	??_gpio_pin_direction_init^0,c
  5736   001A48  0E01               	movlw	1
  5737   001A4A  6E19               	movwf	(??_gpio_pin_direction_init+1)^0,c
  5738   001A4C  2A18               	incf	??_gpio_pin_direction_init^0,f,c
  5739   001A4E  EF2B  F00D         	goto	u4524
  5740   001A52                     u4525:
  5741   001A52  90D8               	bcf	status,0,c
  5742   001A54  3619               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  5743   001A56                     u4524:
  5744   001A56  2E18               	decfsz	??_gpio_pin_direction_init^0,f,c
  5745   001A58  EF29  F00D         	goto	u4525
  5746   001A5C  5017               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  5747   001A5E  6ED9               	movwf	fsr2l,c
  5748   001A60  6ADA               	clrf	fsr2h,c
  5749   001A62  50DF               	movf	223,w,c
  5750   001A64  0B07               	andlw	7
  5751   001A66  0D02               	mullw	2
  5752   001A68  50F3               	movf	243,w,c
  5753   001A6A  0FA0               	addlw	low _tris_registers
  5754   001A6C  6ED9               	movwf	fsr2l,c
  5755   001A6E  6ADA               	clrf	fsr2h,c
  5756   001A70  CFDE F01A          	movff	postinc2,??_gpio_pin_direction_init+2
  5757   001A74  CFDD F01B          	movff	postdec2,??_gpio_pin_direction_init+3
  5758   001A78  C01A  FFD9         	movff	??_gpio_pin_direction_init+2,fsr2l
  5759   001A7C  C01B  FFDA         	movff	??_gpio_pin_direction_init+3,fsr2h
  5760   001A80  5019               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  5761   001A82  12DF               	iorwf	indf2,f,c
  5762                           
  5763                           ;MCAL/GPIO/gpio.c: 41:                 break;
  5764   001A84  EF64  F00D         	goto	l5429
  5765   001A88                     l5427:
  5766   001A88  5017               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  5767   001A8A  6ED9               	movwf	fsr2l,c
  5768   001A8C  6ADA               	clrf	fsr2h,c
  5769   001A8E  BCDF               	btfsc	indf2,6,c
  5770   001A90  EF4C  F00D         	goto	u4531
  5771   001A94  EF4F  F00D         	goto	u4530
  5772   001A98                     u4531:
  5773   001A98  0E01               	movlw	1
  5774   001A9A  EF50  F00D         	goto	u4540
  5775   001A9E                     u4530:
  5776   001A9E  0E00               	movlw	0
  5777   001AA0                     u4540:
  5778   001AA0  6E18               	movwf	??_gpio_pin_direction_init^0,c
  5779   001AA2  6A19               	clrf	(??_gpio_pin_direction_init+1)^0,c
  5780                           
  5781                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5782                           ; Switch size 1, requested type "simple"
  5783                           ; Number of cases is 1, Range of values is 0 to 0
  5784                           ; switch strategies available:
  5785                           ; Name         Instructions Cycles
  5786                           ; simple_byte            4     3 (average)
  5787                           ;	Chosen strategy is simple_byte
  5788   001AA4  5019               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  5789   001AA6  0A00               	xorlw	0	; case 0
  5790   001AA8  B4D8               	btfsc	status,2,c
  5791   001AAA  EF59  F00D         	goto	l6885
  5792   001AAE  EFED  F00C         	goto	l5417
  5793   001AB2                     l6885:
  5794                           
  5795                           ; Switch size 1, requested type "simple"
  5796                           ; Number of cases is 2, Range of values is 0 to 1
  5797                           ; switch strategies available:
  5798                           ; Name         Instructions Cycles
  5799                           ; simple_byte            7     4 (average)
  5800                           ;	Chosen strategy is simple_byte
  5801   001AB2  5018               	movf	??_gpio_pin_direction_init^0,w,c
  5802   001AB4  0A00               	xorlw	0	; case 0
  5803   001AB6  B4D8               	btfsc	status,2,c
  5804   001AB8  EFF1  F00C         	goto	l5419
  5805   001ABC  0A01               	xorlw	1	; case 1
  5806   001ABE  B4D8               	btfsc	status,2,c
  5807   001AC0  EF1C  F00D         	goto	l5421
  5808   001AC4  EFED  F00C         	goto	l5417
  5809   001AC8                     l5429:
  5810                           
  5811                           ;MCAL/GPIO/gpio.c: 47:     return ret;
  5812   001AC8  501D               	movf	gpio_pin_direction_init@ret^0,w,c
  5813   001ACA  0012               	return		;funcret
  5814   001ACC                     __end_of_gpio_pin_direction_init:
  5815                           	callstack 0
  5816                           
  5817 ;; *************** function ___xxtofl *****************
  5818 ;; Defined at:
  5819 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  5820 ;; Parameters:    Size  Location     Type
  5821 ;;  sign            1    wreg     unsigned char 
  5822 ;;  val             4   22[COMRAM] long 
  5823 ;; Auto vars:     Size  Location     Type
  5824 ;;  sign            1   30[COMRAM] unsigned char 
  5825 ;;  arg             4   32[COMRAM] unsigned long 
  5826 ;;  exp             1   31[COMRAM] unsigned char 
  5827 ;; Return value:  Size  Location     Type
  5828 ;;                  4   22[COMRAM] unsigned char 
  5829 ;; Registers used:
  5830 ;;		wreg, status,2, status,0
  5831 ;; Tracked objects:
  5832 ;;		On entry : 0/0
  5833 ;;		On exit  : 0/0
  5834 ;;		Unchanged: 0/0
  5835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5836 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5837 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5838 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5839 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5840 ;;Total ram usage:       14 bytes
  5841 ;; Hardware stack levels used: 1
  5842 ;; Hardware stack levels required when called: 8
  5843 ;; This function calls:
  5844 ;;		Nothing
  5845 ;; This function is called by:
  5846 ;;		_main
  5847 ;; This function uses a non-reentrant model
  5848 ;;
  5849                           
  5850                           	psect	text42
  5851   0017F2                     __ptext42:
  5852                           	callstack 0
  5853   0017F2                     ___xxtofl:
  5854                           	callstack 22
  5855                           
  5856                           ;incstack = 0
  5857                           ;___xxtofl@sign stored from wreg
  5858   0017F2  6E1F               	movwf	___xxtofl@sign^0,c
  5859   0017F4  501F               	movf	___xxtofl@sign^0,w,c
  5860   0017F6  B4D8               	btfsc	status,2,c
  5861   0017F8  EF00  F00C         	goto	u3741
  5862   0017FC  EF02  F00C         	goto	u3740
  5863   001800                     u3741:
  5864   001800  EF24  F00C         	goto	l1626
  5865   001804                     u3740:
  5866   001804  BE1A               	btfsc	(___xxtofl@val+3)^0,7,c
  5867   001806  EF09  F00C         	goto	u3750
  5868   00180A  EF07  F00C         	goto	u3751
  5869   00180E                     u3751:
  5870   00180E  EF24  F00C         	goto	l1626
  5871   001812                     u3750:
  5872   001812  C017  F01B         	movff	___xxtofl@val,??___xxtofl
  5873   001816  C018  F01C         	movff	___xxtofl@val+1,??___xxtofl+1
  5874   00181A  C019  F01D         	movff	___xxtofl@val+2,??___xxtofl+2
  5875   00181E  C01A  F01E         	movff	___xxtofl@val+3,??___xxtofl+3
  5876   001822  1E1B               	comf	??___xxtofl^0,f,c
  5877   001824  1E1C               	comf	(??___xxtofl+1)^0,f,c
  5878   001826  1E1D               	comf	(??___xxtofl+2)^0,f,c
  5879   001828  1E1E               	comf	(??___xxtofl+3)^0,f,c
  5880   00182A  2A1B               	incf	??___xxtofl^0,f,c
  5881   00182C  0E00               	movlw	0
  5882   00182E  221C               	addwfc	(??___xxtofl+1)^0,f,c
  5883   001830  221D               	addwfc	(??___xxtofl+2)^0,f,c
  5884   001832  221E               	addwfc	(??___xxtofl+3)^0,f,c
  5885   001834  C01B  F021         	movff	??___xxtofl,___xxtofl@arg
  5886   001838  C01C  F022         	movff	??___xxtofl+1,___xxtofl@arg+1
  5887   00183C  C01D  F023         	movff	??___xxtofl+2,___xxtofl@arg+2
  5888   001840  C01E  F024         	movff	??___xxtofl+3,___xxtofl@arg+3
  5889   001844  EF2C  F00C         	goto	l4857
  5890   001848                     l1626:
  5891   001848  C017  F021         	movff	___xxtofl@val,___xxtofl@arg
  5892   00184C  C018  F022         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5893   001850  C019  F023         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5894   001854  C01A  F024         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5895   001858                     l4857:
  5896   001858  5017               	movf	___xxtofl@val^0,w,c
  5897   00185A  1018               	iorwf	(___xxtofl@val+1)^0,w,c
  5898   00185C  1019               	iorwf	(___xxtofl@val+2)^0,w,c
  5899   00185E  101A               	iorwf	(___xxtofl@val+3)^0,w,c
  5900   001860  A4D8               	btfss	status,2,c
  5901   001862  EF35  F00C         	goto	u3761
  5902   001866  EF37  F00C         	goto	u3760
  5903   00186A                     u3761:
  5904   00186A  EF41  F00C         	goto	l4863
  5905   00186E                     u3760:
  5906   00186E  0E00               	movlw	0
  5907   001870  6E17               	movwf	?___xxtofl^0,c
  5908   001872  0E00               	movlw	0
  5909   001874  6E18               	movwf	(?___xxtofl+1)^0,c
  5910   001876  0E00               	movlw	0
  5911   001878  6E19               	movwf	(?___xxtofl+2)^0,c
  5912   00187A  0E00               	movlw	0
  5913   00187C  6E1A               	movwf	(?___xxtofl+3)^0,c
  5914   00187E  EFD2  F00C         	goto	l1629
  5915   001882                     l4863:
  5916   001882  0E96               	movlw	150
  5917   001884  6E20               	movwf	___xxtofl@exp^0,c
  5918   001886  EF4B  F00C         	goto	l4867
  5919   00188A                     l4865:
  5920   00188A  2A20               	incf	___xxtofl@exp^0,f,c
  5921   00188C  90D8               	bcf	status,0,c
  5922   00188E  3224               	rrcf	(___xxtofl@arg+3)^0,f,c
  5923   001890  3223               	rrcf	(___xxtofl@arg+2)^0,f,c
  5924   001892  3222               	rrcf	(___xxtofl@arg+1)^0,f,c
  5925   001894  3221               	rrcf	___xxtofl@arg^0,f,c
  5926   001896                     l4867:
  5927   001896  0E00               	movlw	0
  5928   001898  1421               	andwf	___xxtofl@arg^0,w,c
  5929   00189A  6E1B               	movwf	??___xxtofl^0,c
  5930   00189C  0E00               	movlw	0
  5931   00189E  1422               	andwf	(___xxtofl@arg+1)^0,w,c
  5932   0018A0  6E1C               	movwf	(??___xxtofl+1)^0,c
  5933   0018A2  0E00               	movlw	0
  5934   0018A4  1423               	andwf	(___xxtofl@arg+2)^0,w,c
  5935   0018A6  6E1D               	movwf	(??___xxtofl+2)^0,c
  5936   0018A8  0EFE               	movlw	254
  5937   0018AA  1424               	andwf	(___xxtofl@arg+3)^0,w,c
  5938   0018AC  6E1E               	movwf	(??___xxtofl+3)^0,c
  5939   0018AE  501B               	movf	??___xxtofl^0,w,c
  5940   0018B0  101C               	iorwf	(??___xxtofl+1)^0,w,c
  5941   0018B2  101D               	iorwf	(??___xxtofl+2)^0,w,c
  5942   0018B4  101E               	iorwf	(??___xxtofl+3)^0,w,c
  5943   0018B6  A4D8               	btfss	status,2,c
  5944   0018B8  EF60  F00C         	goto	u3771
  5945   0018BC  EF62  F00C         	goto	u3770
  5946   0018C0                     u3771:
  5947   0018C0  EF45  F00C         	goto	l4865
  5948   0018C4                     u3770:
  5949   0018C4  EF70  F00C         	goto	l1633
  5950   0018C8                     l4869:
  5951   0018C8  2A20               	incf	___xxtofl@exp^0,f,c
  5952   0018CA  0E01               	movlw	1
  5953   0018CC  2621               	addwf	___xxtofl@arg^0,f,c
  5954   0018CE  0E00               	movlw	0
  5955   0018D0  2222               	addwfc	(___xxtofl@arg+1)^0,f,c
  5956   0018D2  2223               	addwfc	(___xxtofl@arg+2)^0,f,c
  5957   0018D4  2224               	addwfc	(___xxtofl@arg+3)^0,f,c
  5958   0018D6  90D8               	bcf	status,0,c
  5959   0018D8  3224               	rrcf	(___xxtofl@arg+3)^0,f,c
  5960   0018DA  3223               	rrcf	(___xxtofl@arg+2)^0,f,c
  5961   0018DC  3222               	rrcf	(___xxtofl@arg+1)^0,f,c
  5962   0018DE  3221               	rrcf	___xxtofl@arg^0,f,c
  5963   0018E0                     l1633:
  5964   0018E0  0E00               	movlw	0
  5965   0018E2  1421               	andwf	___xxtofl@arg^0,w,c
  5966   0018E4  6E1B               	movwf	??___xxtofl^0,c
  5967   0018E6  0E00               	movlw	0
  5968   0018E8  1422               	andwf	(___xxtofl@arg+1)^0,w,c
  5969   0018EA  6E1C               	movwf	(??___xxtofl+1)^0,c
  5970   0018EC  0E00               	movlw	0
  5971   0018EE  1423               	andwf	(___xxtofl@arg+2)^0,w,c
  5972   0018F0  6E1D               	movwf	(??___xxtofl+2)^0,c
  5973   0018F2  0EFF               	movlw	255
  5974   0018F4  1424               	andwf	(___xxtofl@arg+3)^0,w,c
  5975   0018F6  6E1E               	movwf	(??___xxtofl+3)^0,c
  5976   0018F8  501B               	movf	??___xxtofl^0,w,c
  5977   0018FA  101C               	iorwf	(??___xxtofl+1)^0,w,c
  5978   0018FC  101D               	iorwf	(??___xxtofl+2)^0,w,c
  5979   0018FE  101E               	iorwf	(??___xxtofl+3)^0,w,c
  5980   001900  A4D8               	btfss	status,2,c
  5981   001902  EF85  F00C         	goto	u3781
  5982   001906  EF87  F00C         	goto	u3780
  5983   00190A                     u3781:
  5984   00190A  EF64  F00C         	goto	l4869
  5985   00190E                     u3780:
  5986   00190E  EF8F  F00C         	goto	l4877
  5987   001912                     l4875:
  5988   001912  0620               	decf	___xxtofl@exp^0,f,c
  5989   001914  90D8               	bcf	status,0,c
  5990   001916  3621               	rlcf	___xxtofl@arg^0,f,c
  5991   001918  3622               	rlcf	(___xxtofl@arg+1)^0,f,c
  5992   00191A  3623               	rlcf	(___xxtofl@arg+2)^0,f,c
  5993   00191C  3624               	rlcf	(___xxtofl@arg+3)^0,f,c
  5994   00191E                     l4877:
  5995   00191E  BE23               	btfsc	(___xxtofl@arg+2)^0,7,c
  5996   001920  EF94  F00C         	goto	u3791
  5997   001924  EF96  F00C         	goto	u3790
  5998   001928                     u3791:
  5999   001928  EF9E  F00C         	goto	l1640
  6000   00192C                     u3790:
  6001   00192C  0E02               	movlw	2
  6002   00192E  6020               	cpfslt	___xxtofl@exp^0,c
  6003   001930  EF9C  F00C         	goto	u3801
  6004   001934  EF9E  F00C         	goto	u3800
  6005   001938                     u3801:
  6006   001938  EF89  F00C         	goto	l4875
  6007   00193C                     u3800:
  6008   00193C                     l1640:
  6009   00193C  B020               	btfsc	___xxtofl@exp^0,0,c
  6010   00193E  EFA3  F00C         	goto	u3811
  6011   001942  EFA5  F00C         	goto	u3810
  6012   001946                     u3811:
  6013   001946  EFA6  F00C         	goto	l4883
  6014   00194A                     u3810:
  6015   00194A  9E23               	bcf	(___xxtofl@arg+2)^0,7,c
  6016   00194C                     l4883:
  6017   00194C  90D8               	bcf	status,0,c
  6018   00194E  3220               	rrcf	___xxtofl@exp^0,f,c
  6019   001950  C020  F01B         	movff	___xxtofl@exp,??___xxtofl
  6020   001954  6A1C               	clrf	(??___xxtofl+1)^0,c
  6021   001956  6A1D               	clrf	(??___xxtofl+2)^0,c
  6022   001958  6A1E               	clrf	(??___xxtofl+3)^0,c
  6023   00195A  C01B  F01E         	movff	??___xxtofl,??___xxtofl+3
  6024   00195E  6A1D               	clrf	(??___xxtofl+2)^0,c
  6025   001960  6A1C               	clrf	(??___xxtofl+1)^0,c
  6026   001962  6A1B               	clrf	??___xxtofl^0,c
  6027   001964  501B               	movf	??___xxtofl^0,w,c
  6028   001966  1221               	iorwf	___xxtofl@arg^0,f,c
  6029   001968  501C               	movf	(??___xxtofl+1)^0,w,c
  6030   00196A  1222               	iorwf	(___xxtofl@arg+1)^0,f,c
  6031   00196C  501D               	movf	(??___xxtofl+2)^0,w,c
  6032   00196E  1223               	iorwf	(___xxtofl@arg+2)^0,f,c
  6033   001970  501E               	movf	(??___xxtofl+3)^0,w,c
  6034   001972  1224               	iorwf	(___xxtofl@arg+3)^0,f,c
  6035   001974  501F               	movf	___xxtofl@sign^0,w,c
  6036   001976  B4D8               	btfsc	status,2,c
  6037   001978  EFC0  F00C         	goto	u3821
  6038   00197C  EFC2  F00C         	goto	u3820
  6039   001980                     u3821:
  6040   001980  EFCA  F00C         	goto	l4893
  6041   001984                     u3820:
  6042   001984  BE1A               	btfsc	(___xxtofl@val+3)^0,7,c
  6043   001986  EFC9  F00C         	goto	u3830
  6044   00198A  EFC7  F00C         	goto	u3831
  6045   00198E                     u3831:
  6046   00198E  EFCA  F00C         	goto	l4893
  6047   001992                     u3830:
  6048   001992  8E24               	bsf	(___xxtofl@arg+3)^0,7,c
  6049   001994                     l4893:
  6050   001994  C021  F017         	movff	___xxtofl@arg,?___xxtofl
  6051   001998  C022  F018         	movff	___xxtofl@arg+1,?___xxtofl+1
  6052   00199C  C023  F019         	movff	___xxtofl@arg+2,?___xxtofl+2
  6053   0019A0  C024  F01A         	movff	___xxtofl@arg+3,?___xxtofl+3
  6054   0019A4                     l1629:
  6055   0019A4  0012               	return		;funcret
  6056   0019A6                     __end_of___xxtofl:
  6057                           	callstack 0
  6058                           
  6059 ;; *************** function ___lwdiv *****************
  6060 ;; Defined at:
  6061 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  6062 ;; Parameters:    Size  Location     Type
  6063 ;;  dividend        2   22[COMRAM] unsigned int 
  6064 ;;  divisor         2   24[COMRAM] unsigned int 
  6065 ;; Auto vars:     Size  Location     Type
  6066 ;;  quotient        2   26[COMRAM] unsigned int 
  6067 ;;  counter         1   28[COMRAM] unsigned char 
  6068 ;; Return value:  Size  Location     Type
  6069 ;;                  2   22[COMRAM] unsigned int 
  6070 ;; Registers used:
  6071 ;;		wreg, status,2, status,0
  6072 ;; Tracked objects:
  6073 ;;		On entry : 0/0
  6074 ;;		On exit  : 0/0
  6075 ;;		Unchanged: 0/0
  6076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6077 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6078 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6080 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6081 ;;Total ram usage:        7 bytes
  6082 ;; Hardware stack levels used: 1
  6083 ;; Hardware stack levels required when called: 8
  6084 ;; This function calls:
  6085 ;;		Nothing
  6086 ;; This function is called by:
  6087 ;;		_main
  6088 ;; This function uses a non-reentrant model
  6089 ;;
  6090                           
  6091                           	psect	text43
  6092   0029C6                     __ptext43:
  6093                           	callstack 0
  6094   0029C6                     ___lwdiv:
  6095                           	callstack 22
  6096   0029C6  0E00               	movlw	0
  6097   0029C8  6E1C               	movwf	(___lwdiv@quotient+1)^0,c
  6098   0029CA  0E00               	movlw	0
  6099   0029CC  6E1B               	movwf	___lwdiv@quotient^0,c
  6100   0029CE  5019               	movf	___lwdiv@divisor^0,w,c
  6101   0029D0  101A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6102   0029D2  B4D8               	btfsc	status,2,c
  6103   0029D4  EFEE  F014         	goto	u3711
  6104   0029D8  EFF0  F014         	goto	u3710
  6105   0029DC                     u3711:
  6106   0029DC  EF18  F015         	goto	l1462
  6107   0029E0                     u3710:
  6108   0029E0  0E01               	movlw	1
  6109   0029E2  6E1D               	movwf	___lwdiv@counter^0,c
  6110   0029E4  EFF8  F014         	goto	l4837
  6111   0029E8                     l4835:
  6112   0029E8  90D8               	bcf	status,0,c
  6113   0029EA  3619               	rlcf	___lwdiv@divisor^0,f,c
  6114   0029EC  361A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6115   0029EE  2A1D               	incf	___lwdiv@counter^0,f,c
  6116   0029F0                     l4837:
  6117   0029F0  AE1A               	btfss	(___lwdiv@divisor+1)^0,7,c
  6118   0029F2  EFFD  F014         	goto	u3721
  6119   0029F6  EFFF  F014         	goto	u3720
  6120   0029FA                     u3721:
  6121   0029FA  EFF4  F014         	goto	l4835
  6122   0029FE                     u3720:
  6123   0029FE                     l4839:
  6124   0029FE  90D8               	bcf	status,0,c
  6125   002A00  361B               	rlcf	___lwdiv@quotient^0,f,c
  6126   002A02  361C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6127   002A04  5019               	movf	___lwdiv@divisor^0,w,c
  6128   002A06  5C17               	subwf	___lwdiv@dividend^0,w,c
  6129   002A08  501A               	movf	(___lwdiv@divisor+1)^0,w,c
  6130   002A0A  5818               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6131   002A0C  A0D8               	btfss	status,0,c
  6132   002A0E  EF0B  F015         	goto	u3731
  6133   002A12  EF0D  F015         	goto	u3730
  6134   002A16                     u3731:
  6135   002A16  EF12  F015         	goto	l4847
  6136   002A1A                     u3730:
  6137   002A1A  5019               	movf	___lwdiv@divisor^0,w,c
  6138   002A1C  5E17               	subwf	___lwdiv@dividend^0,f,c
  6139   002A1E  501A               	movf	(___lwdiv@divisor+1)^0,w,c
  6140   002A20  5A18               	subwfb	(___lwdiv@dividend+1)^0,f,c
  6141   002A22  801B               	bsf	___lwdiv@quotient^0,0,c
  6142   002A24                     l4847:
  6143   002A24  90D8               	bcf	status,0,c
  6144   002A26  321A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  6145   002A28  3219               	rrcf	___lwdiv@divisor^0,f,c
  6146   002A2A  2E1D               	decfsz	___lwdiv@counter^0,f,c
  6147   002A2C  EFFF  F014         	goto	l4839
  6148   002A30                     l1462:
  6149   002A30  C01B  F017         	movff	___lwdiv@quotient,?___lwdiv
  6150   002A34  C01C  F018         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6151   002A38  0012               	return		;funcret
  6152   002A3A                     __end_of___lwdiv:
  6153                           	callstack 0
  6154                           
  6155 ;; *************** function ___fltol *****************
  6156 ;; Defined at:
  6157 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  6158 ;; Parameters:    Size  Location     Type
  6159 ;;  f1              4   48[COMRAM] unsigned int 
  6160 ;; Auto vars:     Size  Location     Type
  6161 ;;  exp1            1   57[COMRAM] unsigned char 
  6162 ;;  sign1           1   56[COMRAM] unsigned char 
  6163 ;; Return value:  Size  Location     Type
  6164 ;;                  4   48[COMRAM] long 
  6165 ;; Registers used:
  6166 ;;		wreg, status,2, status,0
  6167 ;; Tracked objects:
  6168 ;;		On entry : 0/0
  6169 ;;		On exit  : 0/0
  6170 ;;		Unchanged: 0/0
  6171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6172 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6173 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6174 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6175 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6176 ;;Total ram usage:       10 bytes
  6177 ;; Hardware stack levels used: 1
  6178 ;; Hardware stack levels required when called: 8
  6179 ;; This function calls:
  6180 ;;		Nothing
  6181 ;; This function is called by:
  6182 ;;		_main
  6183 ;; This function uses a non-reentrant model
  6184 ;;
  6185                           
  6186                           	psect	text44
  6187   001CF6                     __ptext44:
  6188                           	callstack 0
  6189   001CF6                     ___fltol:
  6190                           	callstack 22
  6191   001CF6  3433               	rlcf	(___fltol@f1+2)^0,w,c
  6192   001CF8  3434               	rlcf	(___fltol@f1+3)^0,w,c
  6193   001CFA  6E3A               	movwf	___fltol@exp1^0,c
  6194   001CFC  503A               	movf	___fltol@exp1^0,w,c
  6195   001CFE  A4D8               	btfss	status,2,c
  6196   001D00  EF84  F00E         	goto	u3641
  6197   001D04  EF86  F00E         	goto	u3640
  6198   001D08                     u3641:
  6199   001D08  EF90  F00E         	goto	l4791
  6200   001D0C                     u3640:
  6201   001D0C                     l4787:
  6202   001D0C  0E00               	movlw	0
  6203   001D0E  6E31               	movwf	?___fltol^0,c
  6204   001D10  0E00               	movlw	0
  6205   001D12  6E32               	movwf	(?___fltol+1)^0,c
  6206   001D14  0E00               	movlw	0
  6207   001D16  6E33               	movwf	(?___fltol+2)^0,c
  6208   001D18  0E00               	movlw	0
  6209   001D1A  6E34               	movwf	(?___fltol+3)^0,c
  6210   001D1C  EFFD  F00E         	goto	l1268
  6211   001D20                     l4791:
  6212   001D20  C031  F035         	movff	___fltol@f1,??___fltol
  6213   001D24  C032  F036         	movff	___fltol@f1+1,??___fltol+1
  6214   001D28  C033  F037         	movff	___fltol@f1+2,??___fltol+2
  6215   001D2C  C034  F038         	movff	___fltol@f1+3,??___fltol+3
  6216   001D30  0E20               	movlw	32
  6217   001D32  EFA0  F00E         	goto	u3650
  6218   001D36                     u3655:
  6219   001D36  90D8               	bcf	status,0,c
  6220   001D38  3238               	rrcf	(??___fltol+3)^0,f,c
  6221   001D3A  3237               	rrcf	(??___fltol+2)^0,f,c
  6222   001D3C  3236               	rrcf	(??___fltol+1)^0,f,c
  6223   001D3E  3235               	rrcf	??___fltol^0,f,c
  6224   001D40                     u3650:
  6225   001D40  2EE8               	decfsz	wreg,f,c
  6226   001D42  EF9B  F00E         	goto	u3655
  6227   001D46  5035               	movf	??___fltol^0,w,c
  6228   001D48  6E39               	movwf	___fltol@sign1^0,c
  6229   001D4A  8E33               	bsf	(___fltol@f1+2)^0,7,c
  6230   001D4C  0EFF               	movlw	255
  6231   001D4E  1631               	andwf	___fltol@f1^0,f,c
  6232   001D50  0EFF               	movlw	255
  6233   001D52  1632               	andwf	(___fltol@f1+1)^0,f,c
  6234   001D54  0EFF               	movlw	255
  6235   001D56  1633               	andwf	(___fltol@f1+2)^0,f,c
  6236   001D58  0E00               	movlw	0
  6237   001D5A  1634               	andwf	(___fltol@f1+3)^0,f,c
  6238   001D5C  0E96               	movlw	150
  6239   001D5E  5E3A               	subwf	___fltol@exp1^0,f,c
  6240   001D60  BE3A               	btfsc	___fltol@exp1^0,7,c
  6241   001D62  EFB7  F00E         	goto	u3660
  6242   001D66  EFB5  F00E         	goto	u3661
  6243   001D6A                     u3661:
  6244   001D6A  EFCD  F00E         	goto	l4811
  6245   001D6E                     u3660:
  6246   001D6E  503A               	movf	___fltol@exp1^0,w,c
  6247   001D70  0A80               	xorlw	128
  6248   001D72  0F97               	addlw	151
  6249   001D74  B0D8               	btfsc	status,0,c
  6250   001D76  EFBF  F00E         	goto	u3671
  6251   001D7A  EFC1  F00E         	goto	u3670
  6252   001D7E                     u3671:
  6253   001D7E  EFC3  F00E         	goto	l4807
  6254   001D82                     u3670:
  6255   001D82  EF86  F00E         	goto	l4787
  6256   001D86                     l4807:
  6257   001D86  90D8               	bcf	status,0,c
  6258   001D88  3234               	rrcf	(___fltol@f1+3)^0,f,c
  6259   001D8A  3233               	rrcf	(___fltol@f1+2)^0,f,c
  6260   001D8C  3232               	rrcf	(___fltol@f1+1)^0,f,c
  6261   001D8E  3231               	rrcf	___fltol@f1^0,f,c
  6262   001D90  3E3A               	incfsz	___fltol@exp1^0,f,c
  6263   001D92  EFC3  F00E         	goto	l4807
  6264   001D96  EFE5  F00E         	goto	l4821
  6265   001D9A                     l4811:
  6266   001D9A  0E1F               	movlw	31
  6267   001D9C  643A               	cpfsgt	___fltol@exp1^0,c
  6268   001D9E  EFD3  F00E         	goto	u3681
  6269   001DA2  EFD5  F00E         	goto	u3680
  6270   001DA6                     u3681:
  6271   001DA6  EFDD  F00E         	goto	l4819
  6272   001DAA                     u3680:
  6273   001DAA  EF86  F00E         	goto	l4787
  6274   001DAE                     l4817:
  6275   001DAE  90D8               	bcf	status,0,c
  6276   001DB0  3631               	rlcf	___fltol@f1^0,f,c
  6277   001DB2  3632               	rlcf	(___fltol@f1+1)^0,f,c
  6278   001DB4  3633               	rlcf	(___fltol@f1+2)^0,f,c
  6279   001DB6  3634               	rlcf	(___fltol@f1+3)^0,f,c
  6280   001DB8  063A               	decf	___fltol@exp1^0,f,c
  6281   001DBA                     l4819:
  6282   001DBA  503A               	movf	___fltol@exp1^0,w,c
  6283   001DBC  A4D8               	btfss	status,2,c
  6284   001DBE  EFE3  F00E         	goto	u3691
  6285   001DC2  EFE5  F00E         	goto	u3690
  6286   001DC6                     u3691:
  6287   001DC6  EFD7  F00E         	goto	l4817
  6288   001DCA                     u3690:
  6289   001DCA                     l4821:
  6290   001DCA  5039               	movf	___fltol@sign1^0,w,c
  6291   001DCC  B4D8               	btfsc	status,2,c
  6292   001DCE  EFEB  F00E         	goto	u3701
  6293   001DD2  EFED  F00E         	goto	u3700
  6294   001DD6                     u3701:
  6295   001DD6  EFF5  F00E         	goto	l4825
  6296   001DDA                     u3700:
  6297   001DDA  1E34               	comf	(___fltol@f1+3)^0,f,c
  6298   001DDC  1E33               	comf	(___fltol@f1+2)^0,f,c
  6299   001DDE  1E32               	comf	(___fltol@f1+1)^0,f,c
  6300   001DE0  6C31               	negf	___fltol@f1^0,c
  6301   001DE2  0E00               	movlw	0
  6302   001DE4  2232               	addwfc	(___fltol@f1+1)^0,f,c
  6303   001DE6  2233               	addwfc	(___fltol@f1+2)^0,f,c
  6304   001DE8  2234               	addwfc	(___fltol@f1+3)^0,f,c
  6305   001DEA                     l4825:
  6306   001DEA  C031  F031         	movff	___fltol@f1,?___fltol
  6307   001DEE  C032  F032         	movff	___fltol@f1+1,?___fltol+1
  6308   001DF2  C033  F033         	movff	___fltol@f1+2,?___fltol+2
  6309   001DF6  C034  F034         	movff	___fltol@f1+3,?___fltol+3
  6310   001DFA                     l1268:
  6311   001DFA  0012               	return		;funcret
  6312   001DFC                     __end_of___fltol:
  6313                           	callstack 0
  6314                           
  6315 ;; *************** function ___flmul *****************
  6316 ;; Defined at:
  6317 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;  b               4   36[COMRAM] long 
  6320 ;;  a               4   40[COMRAM] long 
  6321 ;; Auto vars:     Size  Location     Type
  6322 ;;  prod            4    7[BANK0 ] struct .
  6323 ;;  grs             4    2[BANK0 ] unsigned long 
  6324 ;;  temp            2   11[BANK0 ] struct .
  6325 ;;  bexp            1    6[BANK0 ] unsigned char 
  6326 ;;  aexp            1    1[BANK0 ] unsigned char 
  6327 ;;  sign            1    0[BANK0 ] unsigned char 
  6328 ;; Return value:  Size  Location     Type
  6329 ;;                  4   36[COMRAM] unsigned char 
  6330 ;; Registers used:
  6331 ;;		wreg, status,2, status,0, prodl, prodh
  6332 ;; Tracked objects:
  6333 ;;		On entry : 0/0
  6334 ;;		On exit  : 0/0
  6335 ;;		Unchanged: 0/0
  6336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6337 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6338 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6339 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6340 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6341 ;;Total ram usage:       25 bytes
  6342 ;; Hardware stack levels used: 1
  6343 ;; Hardware stack levels required when called: 8
  6344 ;; This function calls:
  6345 ;;		Nothing
  6346 ;; This function is called by:
  6347 ;;		_main
  6348 ;; This function uses a non-reentrant model
  6349 ;;
  6350                           
  6351                           	psect	text45
  6352   001042                     __ptext45:
  6353                           	callstack 0
  6354   001042                     ___flmul:
  6355                           	callstack 22
  6356   001042  5028               	movf	(___flmul@b+3)^0,w,c
  6357   001044  0B80               	andlw	128
  6358   001046  0100               	movlb	0	; () banked
  6359   001048  6FE6               	movwf	___flmul@sign& (0+255),b
  6360   00104A  5028               	movf	(___flmul@b+3)^0,w,c
  6361   00104C  2428               	addwf	(___flmul@b+3)^0,w,c
  6362   00104E  6FEC               	movwf	___flmul@bexp& (0+255),b
  6363   001050                     
  6364                           ; BSR set to: 0
  6365   001050  AE27               	btfss	(___flmul@b+2)^0,7,c
  6366   001052  EF2D  F008         	goto	u5511
  6367   001056  EF2F  F008         	goto	u5510
  6368   00105A                     u5511:
  6369   00105A  EF30  F008         	goto	l6267
  6370   00105E                     u5510:
  6371   00105E                     
  6372                           ; BSR set to: 0
  6373   00105E  81EC               	bsf	___flmul@bexp& (0+255),0,b
  6374   001060                     l6267:
  6375                           
  6376                           ; BSR set to: 0
  6377   001060  51EC               	movf	___flmul@bexp& (0+255),w,b
  6378   001062  B4D8               	btfsc	status,2,c
  6379   001064  EF36  F008         	goto	u5521
  6380   001068  EF38  F008         	goto	u5520
  6381   00106C                     u5521:
  6382   00106C  EF4B  F008         	goto	l6275
  6383   001070                     u5520:
  6384   001070                     
  6385                           ; BSR set to: 0
  6386   001070  29EC               	incf	___flmul@bexp& (0+255),w,b
  6387   001072  A4D8               	btfss	status,2,c
  6388   001074  EF3E  F008         	goto	u5531
  6389   001078  EF40  F008         	goto	u5530
  6390   00107C                     u5531:
  6391   00107C  EF48  F008         	goto	l6273
  6392   001080                     u5530:
  6393   001080                     
  6394                           ; BSR set to: 0
  6395   001080  0E00               	movlw	0
  6396   001082  6E25               	movwf	___flmul@b^0,c
  6397   001084  0E00               	movlw	0
  6398   001086  6E26               	movwf	(___flmul@b+1)^0,c
  6399   001088  0E00               	movlw	0
  6400   00108A  6E27               	movwf	(___flmul@b+2)^0,c
  6401   00108C  0E00               	movlw	0
  6402   00108E  6E28               	movwf	(___flmul@b+3)^0,c
  6403   001090                     l6273:
  6404                           
  6405                           ; BSR set to: 0
  6406   001090  8E27               	bsf	(___flmul@b+2)^0,7,c
  6407   001092  EF53  F008         	goto	l6277
  6408   001096                     l6275:
  6409                           
  6410                           ; BSR set to: 0
  6411   001096  0E00               	movlw	0
  6412   001098  6E25               	movwf	___flmul@b^0,c
  6413   00109A  0E00               	movlw	0
  6414   00109C  6E26               	movwf	(___flmul@b+1)^0,c
  6415   00109E  0E00               	movlw	0
  6416   0010A0  6E27               	movwf	(___flmul@b+2)^0,c
  6417   0010A2  0E00               	movlw	0
  6418   0010A4  6E28               	movwf	(___flmul@b+3)^0,c
  6419   0010A6                     l6277:
  6420                           
  6421                           ; BSR set to: 0
  6422   0010A6  502C               	movf	(___flmul@a+3)^0,w,c
  6423   0010A8  0B80               	andlw	128
  6424   0010AA  1BE6               	xorwf	___flmul@sign& (0+255),f,b
  6425   0010AC                     
  6426                           ; BSR set to: 0
  6427   0010AC  502C               	movf	(___flmul@a+3)^0,w,c
  6428   0010AE  242C               	addwf	(___flmul@a+3)^0,w,c
  6429   0010B0  6FE7               	movwf	___flmul@aexp& (0+255),b
  6430   0010B2                     
  6431                           ; BSR set to: 0
  6432   0010B2  AE2B               	btfss	(___flmul@a+2)^0,7,c
  6433   0010B4  EF5E  F008         	goto	u5541
  6434   0010B8  EF60  F008         	goto	u5540
  6435   0010BC                     u5541:
  6436   0010BC  EF61  F008         	goto	l6285
  6437   0010C0                     u5540:
  6438   0010C0                     
  6439                           ; BSR set to: 0
  6440   0010C0  81E7               	bsf	___flmul@aexp& (0+255),0,b
  6441   0010C2                     l6285:
  6442                           
  6443                           ; BSR set to: 0
  6444   0010C2  51E7               	movf	___flmul@aexp& (0+255),w,b
  6445   0010C4  B4D8               	btfsc	status,2,c
  6446   0010C6  EF67  F008         	goto	u5551
  6447   0010CA  EF69  F008         	goto	u5550
  6448   0010CE                     u5551:
  6449   0010CE  EF7C  F008         	goto	l6293
  6450   0010D2                     u5550:
  6451   0010D2                     
  6452                           ; BSR set to: 0
  6453   0010D2  29E7               	incf	___flmul@aexp& (0+255),w,b
  6454   0010D4  A4D8               	btfss	status,2,c
  6455   0010D6  EF6F  F008         	goto	u5561
  6456   0010DA  EF71  F008         	goto	u5560
  6457   0010DE                     u5561:
  6458   0010DE  EF79  F008         	goto	l6291
  6459   0010E2                     u5560:
  6460   0010E2                     
  6461                           ; BSR set to: 0
  6462   0010E2  0E00               	movlw	0
  6463   0010E4  6E29               	movwf	___flmul@a^0,c
  6464   0010E6  0E00               	movlw	0
  6465   0010E8  6E2A               	movwf	(___flmul@a+1)^0,c
  6466   0010EA  0E00               	movlw	0
  6467   0010EC  6E2B               	movwf	(___flmul@a+2)^0,c
  6468   0010EE  0E00               	movlw	0
  6469   0010F0  6E2C               	movwf	(___flmul@a+3)^0,c
  6470   0010F2                     l6291:
  6471                           
  6472                           ; BSR set to: 0
  6473   0010F2  8E2B               	bsf	(___flmul@a+2)^0,7,c
  6474   0010F4  EF84  F008         	goto	l1585
  6475   0010F8                     l6293:
  6476                           
  6477                           ; BSR set to: 0
  6478   0010F8  0E00               	movlw	0
  6479   0010FA  6E29               	movwf	___flmul@a^0,c
  6480   0010FC  0E00               	movlw	0
  6481   0010FE  6E2A               	movwf	(___flmul@a+1)^0,c
  6482   001100  0E00               	movlw	0
  6483   001102  6E2B               	movwf	(___flmul@a+2)^0,c
  6484   001104  0E00               	movlw	0
  6485   001106  6E2C               	movwf	(___flmul@a+3)^0,c
  6486   001108                     l1585:
  6487                           
  6488                           ; BSR set to: 0
  6489   001108  51E7               	movf	___flmul@aexp& (0+255),w,b
  6490   00110A  B4D8               	btfsc	status,2,c
  6491   00110C  EF8A  F008         	goto	u5571
  6492   001110  EF8C  F008         	goto	u5570
  6493   001114                     u5571:
  6494   001114  EF94  F008         	goto	l6297
  6495   001118                     u5570:
  6496   001118                     
  6497                           ; BSR set to: 0
  6498   001118  51EC               	movf	___flmul@bexp& (0+255),w,b
  6499   00111A  A4D8               	btfss	status,2,c
  6500   00111C  EF92  F008         	goto	u5581
  6501   001120  EF94  F008         	goto	u5580
  6502   001124                     u5581:
  6503   001124  EF9E  F008         	goto	l6301
  6504   001128                     u5580:
  6505   001128                     l6297:
  6506                           
  6507                           ; BSR set to: 0
  6508   001128  0E00               	movlw	0
  6509   00112A  6E25               	movwf	?___flmul^0,c
  6510   00112C  0E00               	movlw	0
  6511   00112E  6E26               	movwf	(?___flmul+1)^0,c
  6512   001130  0E00               	movlw	0
  6513   001132  6E27               	movwf	(?___flmul+2)^0,c
  6514   001134  0E00               	movlw	0
  6515   001136  6E28               	movwf	(?___flmul+3)^0,c
  6516   001138  EF36  F00A         	goto	l1589
  6517   00113C                     l6301:
  6518                           
  6519                           ; BSR set to: 0
  6520   00113C  502B               	movf	(___flmul@a+2)^0,w,c
  6521   00113E  0225               	mulwf	___flmul@b^0,c
  6522   001140  CFF3 F0F1          	movff	prodl,___flmul@temp
  6523   001144  CFF4 F0F2          	movff	prodh,___flmul@temp+1
  6524   001148                     
  6525                           ; BSR set to: 0
  6526   001148  51F1               	movf	___flmul@temp& (0+255),w,b
  6527   00114A  6FE8               	movwf	___flmul@grs& (0+255),b
  6528   00114C  6BE9               	clrf	(___flmul@grs+1)& (0+255),b
  6529   00114E  6BEA               	clrf	(___flmul@grs+2)& (0+255),b
  6530   001150  6BEB               	clrf	(___flmul@grs+3)& (0+255),b
  6531   001152                     
  6532                           ; BSR set to: 0
  6533   001152  51F2               	movf	(___flmul@temp+1)& (0+255),w,b
  6534   001154  6FED               	movwf	___flmul@prod& (0+255),b
  6535   001156  6BEE               	clrf	(___flmul@prod+1)& (0+255),b
  6536   001158  6BEF               	clrf	(___flmul@prod+2)& (0+255),b
  6537   00115A  6BF0               	clrf	(___flmul@prod+3)& (0+255),b
  6538   00115C  502A               	movf	(___flmul@a+1)^0,w,c
  6539   00115E  0226               	mulwf	(___flmul@b+1)^0,c
  6540   001160  CFF3 F0F1          	movff	prodl,___flmul@temp
  6541   001164  CFF4 F0F2          	movff	prodh,___flmul@temp+1
  6542   001168                     
  6543                           ; BSR set to: 0
  6544   001168  51F1               	movf	___flmul@temp& (0+255),w,b
  6545   00116A  27E8               	addwf	___flmul@grs& (0+255),f,b
  6546   00116C  0E00               	movlw	0
  6547   00116E  23E9               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6548   001170  23EA               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6549   001172  23EB               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6550   001174                     
  6551                           ; BSR set to: 0
  6552   001174  51F2               	movf	(___flmul@temp+1)& (0+255),w,b
  6553   001176  27ED               	addwf	___flmul@prod& (0+255),f,b
  6554   001178  0E00               	movlw	0
  6555   00117A  23EE               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6556   00117C  23EF               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6557   00117E  23F0               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6558   001180  5029               	movf	___flmul@a^0,w,c
  6559   001182  0227               	mulwf	(___flmul@b+2)^0,c
  6560   001184  CFF3 F0F1          	movff	prodl,___flmul@temp
  6561   001188  CFF4 F0F2          	movff	prodh,___flmul@temp+1
  6562   00118C                     
  6563                           ; BSR set to: 0
  6564   00118C  51F1               	movf	___flmul@temp& (0+255),w,b
  6565   00118E  27E8               	addwf	___flmul@grs& (0+255),f,b
  6566   001190  0E00               	movlw	0
  6567   001192  23E9               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6568   001194  23EA               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6569   001196  23EB               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6570   001198                     
  6571                           ; BSR set to: 0
  6572   001198  51F2               	movf	(___flmul@temp+1)& (0+255),w,b
  6573   00119A  27ED               	addwf	___flmul@prod& (0+255),f,b
  6574   00119C  0E00               	movlw	0
  6575   00119E  23EE               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6576   0011A0  23EF               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6577   0011A2  23F0               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6578   0011A4                     
  6579                           ; BSR set to: 0
  6580   0011A4  C0EA  F0EB         	movff	___flmul@grs+2,___flmul@grs+3
  6581   0011A8  C0E9  F0EA         	movff	___flmul@grs+1,___flmul@grs+2
  6582   0011AC  C0E8  F0E9         	movff	___flmul@grs,___flmul@grs+1
  6583   0011B0  6BE8               	clrf	___flmul@grs& (0+255),b
  6584   0011B2                     
  6585                           ; BSR set to: 0
  6586   0011B2  5029               	movf	___flmul@a^0,w,c
  6587   0011B4  0226               	mulwf	(___flmul@b+1)^0,c
  6588   0011B6  CFF3 F0F1          	movff	prodl,___flmul@temp
  6589   0011BA  CFF4 F0F2          	movff	prodh,___flmul@temp+1
  6590   0011BE                     
  6591                           ; BSR set to: 0
  6592   0011BE  51F1               	movf	___flmul@temp& (0+255),w,b
  6593   0011C0  27E8               	addwf	___flmul@grs& (0+255),f,b
  6594   0011C2  51F2               	movf	(___flmul@temp+1)& (0+255),w,b
  6595   0011C4  23E9               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6596   0011C6  0E00               	movlw	0
  6597   0011C8  23EA               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6598   0011CA  0E00               	movlw	0
  6599   0011CC  23EB               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6600   0011CE                     
  6601                           ; BSR set to: 0
  6602   0011CE  502A               	movf	(___flmul@a+1)^0,w,c
  6603   0011D0  0225               	mulwf	___flmul@b^0,c
  6604   0011D2  CFF3 F0F1          	movff	prodl,___flmul@temp
  6605   0011D6  CFF4 F0F2          	movff	prodh,___flmul@temp+1
  6606   0011DA                     
  6607                           ; BSR set to: 0
  6608   0011DA  51F1               	movf	___flmul@temp& (0+255),w,b
  6609   0011DC  27E8               	addwf	___flmul@grs& (0+255),f,b
  6610   0011DE  51F2               	movf	(___flmul@temp+1)& (0+255),w,b
  6611   0011E0  23E9               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6612   0011E2  0E00               	movlw	0
  6613   0011E4  23EA               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6614   0011E6  0E00               	movlw	0
  6615   0011E8  23EB               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6616   0011EA                     
  6617                           ; BSR set to: 0
  6618   0011EA  C0EA  F0EB         	movff	___flmul@grs+2,___flmul@grs+3
  6619   0011EE  C0E9  F0EA         	movff	___flmul@grs+1,___flmul@grs+2
  6620   0011F2  C0E8  F0E9         	movff	___flmul@grs,___flmul@grs+1
  6621   0011F6  6BE8               	clrf	___flmul@grs& (0+255),b
  6622   0011F8  5029               	movf	___flmul@a^0,w,c
  6623   0011FA  0225               	mulwf	___flmul@b^0,c
  6624   0011FC  CFF3 F0F1          	movff	prodl,___flmul@temp
  6625   001200  CFF4 F0F2          	movff	prodh,___flmul@temp+1
  6626   001204                     
  6627                           ; BSR set to: 0
  6628   001204  51F1               	movf	___flmul@temp& (0+255),w,b
  6629   001206  27E8               	addwf	___flmul@grs& (0+255),f,b
  6630   001208  51F2               	movf	(___flmul@temp+1)& (0+255),w,b
  6631   00120A  23E9               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6632   00120C  0E00               	movlw	0
  6633   00120E  23EA               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6634   001210  0E00               	movlw	0
  6635   001212  23EB               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6636   001214                     
  6637                           ; BSR set to: 0
  6638   001214  502B               	movf	(___flmul@a+2)^0,w,c
  6639   001216  0226               	mulwf	(___flmul@b+1)^0,c
  6640   001218  CFF3 F0F1          	movff	prodl,___flmul@temp
  6641   00121C  CFF4 F0F2          	movff	prodh,___flmul@temp+1
  6642   001220  51F1               	movf	___flmul@temp& (0+255),w,b
  6643   001222  27ED               	addwf	___flmul@prod& (0+255),f,b
  6644   001224  51F2               	movf	(___flmul@temp+1)& (0+255),w,b
  6645   001226  23EE               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6646   001228  0E00               	movlw	0
  6647   00122A  23EF               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6648   00122C  0E00               	movlw	0
  6649   00122E  23F0               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6650   001230                     
  6651                           ; BSR set to: 0
  6652   001230  502A               	movf	(___flmul@a+1)^0,w,c
  6653   001232  0227               	mulwf	(___flmul@b+2)^0,c
  6654   001234  CFF3 F0F1          	movff	prodl,___flmul@temp
  6655   001238  CFF4 F0F2          	movff	prodh,___flmul@temp+1
  6656   00123C                     
  6657                           ; BSR set to: 0
  6658   00123C  51F1               	movf	___flmul@temp& (0+255),w,b
  6659   00123E  27ED               	addwf	___flmul@prod& (0+255),f,b
  6660   001240  51F2               	movf	(___flmul@temp+1)& (0+255),w,b
  6661   001242  23EE               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6662   001244  0E00               	movlw	0
  6663   001246  23EF               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6664   001248  0E00               	movlw	0
  6665   00124A  23F0               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6666   00124C  502B               	movf	(___flmul@a+2)^0,w,c
  6667   00124E  0227               	mulwf	(___flmul@b+2)^0,c
  6668   001250  CFF3 F0F1          	movff	prodl,___flmul@temp
  6669   001254  CFF4 F0F2          	movff	prodh,___flmul@temp+1
  6670   001258                     
  6671                           ; BSR set to: 0
  6672   001258  51F1               	movf	___flmul@temp& (0+255),w,b
  6673   00125A  6E2D               	movwf	??___flmul^0,c
  6674   00125C  51F2               	movf	(___flmul@temp+1)& (0+255),w,b
  6675   00125E  6E2E               	movwf	(??___flmul+1)^0,c
  6676   001260  6A2F               	clrf	(??___flmul+2)^0,c
  6677   001262  6A30               	clrf	(??___flmul+3)^0,c
  6678   001264  C02F  F030         	movff	??___flmul+2,??___flmul+3
  6679   001268  C02E  F02F         	movff	??___flmul+1,??___flmul+2
  6680   00126C  C02D  F02E         	movff	??___flmul,??___flmul+1
  6681   001270  6A2D               	clrf	??___flmul^0,c
  6682   001272  502D               	movf	??___flmul^0,w,c
  6683   001274  27ED               	addwf	___flmul@prod& (0+255),f,b
  6684   001276  502E               	movf	(??___flmul+1)^0,w,c
  6685   001278  23EE               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6686   00127A  502F               	movf	(??___flmul+2)^0,w,c
  6687   00127C  23EF               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6688   00127E  5030               	movf	(??___flmul+3)^0,w,c
  6689   001280  23F0               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6690   001282                     
  6691                           ; BSR set to: 0
  6692   001282  C0E8  F02D         	movff	___flmul@grs,??___flmul
  6693   001286  C0E9  F02E         	movff	___flmul@grs+1,??___flmul+1
  6694   00128A  C0EA  F02F         	movff	___flmul@grs+2,??___flmul+2
  6695   00128E  C0EB  F030         	movff	___flmul@grs+3,??___flmul+3
  6696   001292  0E19               	movlw	25
  6697   001294  EF51  F009         	goto	u5590
  6698   001298                     u5595:
  6699   001298  90D8               	bcf	status,0,c
  6700   00129A  3230               	rrcf	(??___flmul+3)^0,f,c
  6701   00129C  322F               	rrcf	(??___flmul+2)^0,f,c
  6702   00129E  322E               	rrcf	(??___flmul+1)^0,f,c
  6703   0012A0  322D               	rrcf	??___flmul^0,f,c
  6704   0012A2                     u5590:
  6705   0012A2  2EE8               	decfsz	wreg,f,c
  6706   0012A4  EF4C  F009         	goto	u5595
  6707   0012A8  502D               	movf	??___flmul^0,w,c
  6708   0012AA  27ED               	addwf	___flmul@prod& (0+255),f,b
  6709   0012AC  502E               	movf	(??___flmul+1)^0,w,c
  6710   0012AE  23EE               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6711   0012B0  502F               	movf	(??___flmul+2)^0,w,c
  6712   0012B2  23EF               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6713   0012B4  5030               	movf	(??___flmul+3)^0,w,c
  6714   0012B6  23F0               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6715   0012B8                     
  6716                           ; BSR set to: 0
  6717   0012B8  C0EA  F0EB         	movff	___flmul@grs+2,___flmul@grs+3
  6718   0012BC  C0E9  F0EA         	movff	___flmul@grs+1,___flmul@grs+2
  6719   0012C0  C0E8  F0E9         	movff	___flmul@grs,___flmul@grs+1
  6720   0012C4  6BE8               	clrf	___flmul@grs& (0+255),b
  6721   0012C6                     
  6722                           ; BSR set to: 0
  6723   0012C6  51E7               	movf	___flmul@aexp& (0+255),w,b
  6724   0012C8  C0EC  F02D         	movff	___flmul@bexp,??___flmul
  6725   0012CC  6A2E               	clrf	(??___flmul+1)^0,c
  6726   0012CE  262D               	addwf	??___flmul^0,f,c
  6727   0012D0  0E00               	movlw	0
  6728   0012D2  222E               	addwfc	(??___flmul+1)^0,f,c
  6729   0012D4  0E82               	movlw	130
  6730   0012D6  242D               	addwf	??___flmul^0,w,c
  6731   0012D8  6FF1               	movwf	___flmul@temp& (0+255),b
  6732   0012DA  0EFF               	movlw	255
  6733   0012DC  202E               	addwfc	(??___flmul+1)^0,w,c
  6734   0012DE  6FF2               	movwf	(___flmul@temp+1)& (0+255),b
  6735   0012E0  EF87  F009         	goto	l6349
  6736   0012E4                     l6343:
  6737                           
  6738                           ; BSR set to: 0
  6739   0012E4  90D8               	bcf	status,0,c
  6740   0012E6  37ED               	rlcf	___flmul@prod& (0+255),f,b
  6741   0012E8  37EE               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6742   0012EA  37EF               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6743   0012EC  37F0               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6744   0012EE                     
  6745                           ; BSR set to: 0
  6746   0012EE  AFEB               	btfss	(___flmul@grs+3)& (0+255),7,b
  6747   0012F0  EF7C  F009         	goto	u5601
  6748   0012F4  EF7E  F009         	goto	u5600
  6749   0012F8                     u5601:
  6750   0012F8  EF7F  F009         	goto	l1592
  6751   0012FC                     u5600:
  6752   0012FC                     
  6753                           ; BSR set to: 0
  6754   0012FC  81ED               	bsf	___flmul@prod& (0+255),0,b
  6755   0012FE                     l1592:
  6756                           
  6757                           ; BSR set to: 0
  6758   0012FE  90D8               	bcf	status,0,c
  6759   001300  37E8               	rlcf	___flmul@grs& (0+255),f,b
  6760   001302  37E9               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6761   001304  37EA               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6762   001306  37EB               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6763   001308  07F1               	decf	___flmul@temp& (0+255),f,b
  6764   00130A  A0D8               	btfss	status,0,c
  6765   00130C  07F2               	decf	(___flmul@temp+1)& (0+255),f,b
  6766   00130E                     l6349:
  6767                           
  6768                           ; BSR set to: 0
  6769   00130E  AFEF               	btfss	(___flmul@prod+2)& (0+255),7,b
  6770   001310  EF8C  F009         	goto	u5611
  6771   001314  EF8E  F009         	goto	u5610
  6772   001318                     u5611:
  6773   001318  EF72  F009         	goto	l6343
  6774   00131C                     u5610:
  6775   00131C                     
  6776                           ; BSR set to: 0
  6777   00131C  0E00               	movlw	0
  6778   00131E  6FE7               	movwf	___flmul@aexp& (0+255),b
  6779   001320                     
  6780                           ; BSR set to: 0
  6781   001320  AFEB               	btfss	(___flmul@grs+3)& (0+255),7,b
  6782   001322  EF95  F009         	goto	u5621
  6783   001326  EF97  F009         	goto	u5620
  6784   00132A                     u5621:
  6785   00132A  EFBB  F009         	goto	l1594
  6786   00132E                     u5620:
  6787   00132E                     
  6788                           ; BSR set to: 0
  6789   00132E  0EFF               	movlw	255
  6790   001330  15E8               	andwf	___flmul@grs& (0+255),w,b
  6791   001332  6E2D               	movwf	??___flmul^0,c
  6792   001334  0EFF               	movlw	255
  6793   001336  15E9               	andwf	(___flmul@grs+1)& (0+255),w,b
  6794   001338  6E2E               	movwf	(??___flmul+1)^0,c
  6795   00133A  0EFF               	movlw	255
  6796   00133C  15EA               	andwf	(___flmul@grs+2)& (0+255),w,b
  6797   00133E  6E2F               	movwf	(??___flmul+2)^0,c
  6798   001340  0E7F               	movlw	127
  6799   001342  15EB               	andwf	(___flmul@grs+3)& (0+255),w,b
  6800   001344  6E30               	movwf	(??___flmul+3)^0,c
  6801   001346  502D               	movf	??___flmul^0,w,c
  6802   001348  102E               	iorwf	(??___flmul+1)^0,w,c
  6803   00134A  102F               	iorwf	(??___flmul+2)^0,w,c
  6804   00134C  1030               	iorwf	(??___flmul+3)^0,w,c
  6805   00134E  B4D8               	btfsc	status,2,c
  6806   001350  EFAC  F009         	goto	u5631
  6807   001354  EFAE  F009         	goto	u5630
  6808   001358                     u5631:
  6809   001358  EFB2  F009         	goto	l1595
  6810   00135C                     u5630:
  6811   00135C                     l6357:
  6812                           
  6813                           ; BSR set to: 0
  6814   00135C  0E01               	movlw	1
  6815   00135E  6FE7               	movwf	___flmul@aexp& (0+255),b
  6816   001360  EFBB  F009         	goto	l1594
  6817   001364                     l1595:
  6818                           
  6819                           ; BSR set to: 0
  6820   001364  A1ED               	btfss	___flmul@prod& (0+255),0,b
  6821   001366  EFB7  F009         	goto	u5641
  6822   00136A  EFB9  F009         	goto	u5640
  6823   00136E                     u5641:
  6824   00136E  EFBB  F009         	goto	l1594
  6825   001372                     u5640:
  6826   001372  EFAE  F009         	goto	l6357
  6827   001376                     l1594:
  6828                           
  6829                           ; BSR set to: 0
  6830   001376  51E7               	movf	___flmul@aexp& (0+255),w,b
  6831   001378  B4D8               	btfsc	status,2,c
  6832   00137A  EFC1  F009         	goto	u5651
  6833   00137E  EFC3  F009         	goto	u5650
  6834   001382                     u5651:
  6835   001382  EFE7  F009         	goto	l6369
  6836   001386                     u5650:
  6837   001386                     
  6838                           ; BSR set to: 0
  6839   001386  0E01               	movlw	1
  6840   001388  27ED               	addwf	___flmul@prod& (0+255),f,b
  6841   00138A  0E00               	movlw	0
  6842   00138C  23EE               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6843   00138E  23EF               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6844   001390  23F0               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6845   001392                     
  6846                           ; BSR set to: 0
  6847   001392  A1F0               	btfss	(___flmul@prod+3)& (0+255),0,b
  6848   001394  EFCE  F009         	goto	u5661
  6849   001398  EFD0  F009         	goto	u5660
  6850   00139C                     u5661:
  6851   00139C  EFE7  F009         	goto	l6369
  6852   0013A0                     u5660:
  6853   0013A0                     
  6854                           ; BSR set to: 0
  6855   0013A0  C0ED  F02D         	movff	___flmul@prod,??___flmul
  6856   0013A4  C0EE  F02E         	movff	___flmul@prod+1,??___flmul+1
  6857   0013A8  C0EF  F02F         	movff	___flmul@prod+2,??___flmul+2
  6858   0013AC  C0F0  F030         	movff	___flmul@prod+3,??___flmul+3
  6859   0013B0  3430               	rlcf	(??___flmul+3)^0,w,c
  6860   0013B2  3230               	rrcf	(??___flmul+3)^0,f,c
  6861   0013B4  322F               	rrcf	(??___flmul+2)^0,f,c
  6862   0013B6  322E               	rrcf	(??___flmul+1)^0,f,c
  6863   0013B8  322D               	rrcf	??___flmul^0,f,c
  6864   0013BA  C02D  F0ED         	movff	??___flmul,___flmul@prod
  6865   0013BE  C02E  F0EE         	movff	??___flmul+1,___flmul@prod+1
  6866   0013C2  C02F  F0EF         	movff	??___flmul+2,___flmul@prod+2
  6867   0013C6  C030  F0F0         	movff	??___flmul+3,___flmul@prod+3
  6868   0013CA                     
  6869                           ; BSR set to: 0
  6870   0013CA  4BF1               	infsnz	___flmul@temp& (0+255),f,b
  6871   0013CC  2BF2               	incf	(___flmul@temp+1)& (0+255),f,b
  6872   0013CE                     l6369:
  6873                           
  6874                           ; BSR set to: 0
  6875   0013CE  BFF2               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6876   0013D0  EFF2  F009         	goto	u5671
  6877   0013D4  51F2               	movf	(___flmul@temp+1)& (0+255),w,b
  6878   0013D6  E108               	bnz	u5670
  6879   0013D8  29F1               	incf	___flmul@temp& (0+255),w,b
  6880   0013DA  A0D8               	btfss	status,0,c
  6881   0013DC  EFF2  F009         	goto	u5671
  6882   0013E0  EFF4  F009         	goto	u5670
  6883   0013E4                     u5671:
  6884   0013E4  EFFE  F009         	goto	l6373
  6885   0013E8                     u5670:
  6886   0013E8                     
  6887                           ; BSR set to: 0
  6888   0013E8  0E00               	movlw	0
  6889   0013EA  6FED               	movwf	___flmul@prod& (0+255),b
  6890   0013EC  0E00               	movlw	0
  6891   0013EE  6FEE               	movwf	(___flmul@prod+1)& (0+255),b
  6892   0013F0  0E80               	movlw	128
  6893   0013F2  6FEF               	movwf	(___flmul@prod+2)& (0+255),b
  6894   0013F4  0E7F               	movlw	127
  6895   0013F6  6FF0               	movwf	(___flmul@prod+3)& (0+255),b
  6896   0013F8  EF2C  F00A         	goto	l6385
  6897   0013FC                     l6373:
  6898                           
  6899                           ; BSR set to: 0
  6900   0013FC  BFF2               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6901   0013FE  EF0B  F00A         	goto	u5680
  6902   001402  51F2               	movf	(___flmul@temp+1)& (0+255),w,b
  6903   001404  E106               	bnz	u5681
  6904   001406  05F1               	decf	___flmul@temp& (0+255),w,b
  6905   001408  B0D8               	btfsc	status,0,c
  6906   00140A  EF09  F00A         	goto	u5681
  6907   00140E  EF0B  F00A         	goto	u5680
  6908   001412                     u5681:
  6909   001412  EF17  F00A         	goto	l1602
  6910   001416                     u5680:
  6911   001416                     
  6912                           ; BSR set to: 0
  6913   001416  0E00               	movlw	0
  6914   001418  6FED               	movwf	___flmul@prod& (0+255),b
  6915   00141A  0E00               	movlw	0
  6916   00141C  6FEE               	movwf	(___flmul@prod+1)& (0+255),b
  6917   00141E  0E00               	movlw	0
  6918   001420  6FEF               	movwf	(___flmul@prod+2)& (0+255),b
  6919   001422  0E00               	movlw	0
  6920   001424  6FF0               	movwf	(___flmul@prod+3)& (0+255),b
  6921   001426  0E00               	movlw	0
  6922   001428  6FE6               	movwf	___flmul@sign& (0+255),b
  6923   00142A  EF2C  F00A         	goto	l6385
  6924   00142E                     l1602:
  6925                           
  6926                           ; BSR set to: 0
  6927   00142E  C0F1  F0EC         	movff	___flmul@temp,___flmul@bexp
  6928   001432                     
  6929                           ; BSR set to: 0
  6930   001432  0EFF               	movlw	255
  6931   001434  17ED               	andwf	___flmul@prod& (0+255),f,b
  6932   001436  0EFF               	movlw	255
  6933   001438  17EE               	andwf	(___flmul@prod+1)& (0+255),f,b
  6934   00143A  0E7F               	movlw	127
  6935   00143C  17EF               	andwf	(___flmul@prod+2)& (0+255),f,b
  6936   00143E  0E00               	movlw	0
  6937   001440  17F0               	andwf	(___flmul@prod+3)& (0+255),f,b
  6938   001442                     
  6939                           ; BSR set to: 0
  6940   001442  A1EC               	btfss	___flmul@bexp& (0+255),0,b
  6941   001444  EF26  F00A         	goto	u5691
  6942   001448  EF28  F00A         	goto	u5690
  6943   00144C                     u5691:
  6944   00144C  EF29  F00A         	goto	l6383
  6945   001450                     u5690:
  6946   001450                     
  6947                           ; BSR set to: 0
  6948   001450  8FEF               	bsf	(___flmul@prod+2)& (0+255),7,b
  6949   001452                     l6383:
  6950                           
  6951                           ; BSR set to: 0
  6952   001452  90D8               	bcf	status,0,c
  6953   001454  31EC               	rrcf	___flmul@bexp& (0+255),w,b
  6954   001456  6FF0               	movwf	(___flmul@prod+3)& (0+255),b
  6955   001458                     l6385:
  6956                           
  6957                           ; BSR set to: 0
  6958   001458  51E6               	movf	___flmul@sign& (0+255),w,b
  6959   00145A  13F0               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6960   00145C                     
  6961                           ; BSR set to: 0
  6962   00145C  C0ED  F025         	movff	___flmul@prod,?___flmul
  6963   001460  C0EE  F026         	movff	___flmul@prod+1,?___flmul+1
  6964   001464  C0EF  F027         	movff	___flmul@prod+2,?___flmul+2
  6965   001468  C0F0  F028         	movff	___flmul@prod+3,?___flmul+3
  6966   00146C                     l1589:
  6967                           
  6968                           ; BSR set to: 0
  6969   00146C  0012               	return		;funcret
  6970   00146E                     __end_of___flmul:
  6971                           	callstack 0
  6972                           
  6973 ;; *************** function _ADC_start_conversion_interrupt *****************
  6974 ;; Defined at:
  6975 ;;		line 261 in file "MCAL/ADC/hal_adc.c"
  6976 ;; Parameters:    Size  Location     Type
  6977 ;;  _adc            1   29[COMRAM] PTR const struct .
  6978 ;;		 -> adc(7), 
  6979 ;;  channel         1   30[COMRAM] enum E3044
  6980 ;; Auto vars:     Size  Location     Type
  6981 ;;  ret             1   31[COMRAM] unsigned char 
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  1    wreg      unsigned char 
  6984 ;; Registers used:
  6985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/0
  6988 ;;		On exit  : 0/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6991 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6992 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6994 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6995 ;;Total ram usage:        3 bytes
  6996 ;; Hardware stack levels used: 1
  6997 ;; Hardware stack levels required when called: 10
  6998 ;; This function calls:
  6999 ;;		_ADC_select_channel
  7000 ;;		_ADC_start_conversion
  7001 ;; This function is called by:
  7002 ;;		_main
  7003 ;; This function uses a non-reentrant model
  7004 ;;
  7005                           
  7006                           	psect	text46
  7007   002FA0                     __ptext46:
  7008                           	callstack 0
  7009   002FA0                     _ADC_start_conversion_interrupt:
  7010                           	callstack 20
  7011   002FA0                     
  7012                           ;MCAL/ADC/hal_adc.c: 264:     if (((void*)0) == _adc)
  7013   002FA0  501E               	movf	ADC_start_conversion_interrupt@_adc^0,w,c
  7014   002FA2  A4D8               	btfss	status,2,c
  7015   002FA4  EFD6  F017         	goto	u5341
  7016   002FA8  EFD8  F017         	goto	u5340
  7017   002FAC                     u5341:
  7018   002FAC  EFDC  F017         	goto	l6115
  7019   002FB0                     u5340:
  7020   002FB0                     
  7021                           ;MCAL/ADC/hal_adc.c: 265:     {;MCAL/ADC/hal_adc.c: 266:         ret = (Std_ReturnType)0
      +                          x01U;
  7022   002FB0  0E01               	movlw	1
  7023   002FB2  6E20               	movwf	ADC_start_conversion_interrupt@ret^0,c
  7024                           
  7025                           ;MCAL/ADC/hal_adc.c: 267:     }
  7026   002FB4  EFE7  F017         	goto	l6119
  7027   002FB8                     l6115:
  7028   002FB8  C01E  F01A         	movff	ADC_start_conversion_interrupt@_adc,ADC_select_channel@_adc
  7029   002FBC  C01F  F01B         	movff	ADC_start_conversion_interrupt@channel,ADC_select_channel@channel
  7030   002FC0  ECC4  F016         	call	_ADC_select_channel	;wreg free
  7031   002FC4                     
  7032                           ;MCAL/ADC/hal_adc.c: 271:         ret = ADC_start_conversion(_adc);
  7033   002FC4  C01E  F017         	movff	ADC_start_conversion_interrupt@_adc,ADC_start_conversion@_adc
  7034   002FC8  EC96  F018         	call	_ADC_start_conversion	;wreg free
  7035   002FCC  6E20               	movwf	ADC_start_conversion_interrupt@ret^0,c
  7036   002FCE                     l6119:
  7037                           
  7038                           ;MCAL/ADC/hal_adc.c: 273:     return ret;
  7039   002FCE  5020               	movf	ADC_start_conversion_interrupt@ret^0,w,c
  7040   002FD0  0012               	return		;funcret
  7041   002FD2                     __end_of_ADC_start_conversion_interrupt:
  7042                           	callstack 0
  7043                           
  7044 ;; *************** function _ADC_start_conversion *****************
  7045 ;; Defined at:
  7046 ;;		line 138 in file "MCAL/ADC/hal_adc.c"
  7047 ;; Parameters:    Size  Location     Type
  7048 ;;  _adc            1   22[COMRAM] PTR const struct .
  7049 ;;		 -> adc(7), 
  7050 ;; Auto vars:     Size  Location     Type
  7051 ;;  ret             1   23[COMRAM] unsigned char 
  7052 ;; Return value:  Size  Location     Type
  7053 ;;                  1    wreg      unsigned char 
  7054 ;; Registers used:
  7055 ;;		wreg, status,2
  7056 ;; Tracked objects:
  7057 ;;		On entry : 0/0
  7058 ;;		On exit  : 0/0
  7059 ;;		Unchanged: 0/0
  7060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7061 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7062 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7064 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7065 ;;Total ram usage:        2 bytes
  7066 ;; Hardware stack levels used: 1
  7067 ;; Hardware stack levels required when called: 8
  7068 ;; This function calls:
  7069 ;;		Nothing
  7070 ;; This function is called by:
  7071 ;;		_ADC_start_conversion_interrupt
  7072 ;;		_ADC_get_conversion_blocking
  7073 ;; This function uses a non-reentrant model
  7074 ;;
  7075                           
  7076                           	psect	text47
  7077   00312C                     __ptext47:
  7078                           	callstack 0
  7079   00312C                     _ADC_start_conversion:
  7080                           	callstack 21
  7081   00312C                     
  7082                           ;MCAL/ADC/hal_adc.c: 138: Std_ReturnType ADC_start_conversion(const adc_cfg_t *_adc);MCA
      +                          L/ADC/hal_adc.c: 139: {;MCAL/ADC/hal_adc.c: 140:     Std_ReturnType ret = (Std_ReturnTyp
      +                          e)0x00U;
  7083   00312C  0E00               	movlw	0
  7084   00312E  6E18               	movwf	ADC_start_conversion@ret^0,c
  7085                           
  7086                           ;MCAL/ADC/hal_adc.c: 141:     if (((void*)0) == _adc)
  7087   003130  5017               	movf	ADC_start_conversion@_adc^0,w,c
  7088   003132  A4D8               	btfss	status,2,c
  7089   003134  EF9E  F018         	goto	u5291
  7090   003138  EFA0  F018         	goto	u5290
  7091   00313C                     u5291:
  7092   00313C  EFA4  F018         	goto	l441
  7093   003140                     u5290:
  7094   003140                     
  7095                           ;MCAL/ADC/hal_adc.c: 142:     {;MCAL/ADC/hal_adc.c: 143:         ret = (Std_ReturnType)0
      +                          x01U;
  7096   003140  0E01               	movlw	1
  7097   003142  6E18               	movwf	ADC_start_conversion@ret^0,c
  7098                           
  7099                           ;MCAL/ADC/hal_adc.c: 144:     }
  7100   003144  EFA5  F018         	goto	l6057
  7101   003148                     l441:
  7102                           
  7103                           ;MCAL/ADC/hal_adc.c: 146:     {;MCAL/ADC/hal_adc.c: 147:         (ADCON0bits.GODONE = 0x
      +                          01U);
  7104   003148  82C2               	bsf	194,1,c	;volatile
  7105   00314A                     l6057:
  7106                           
  7107                           ;MCAL/ADC/hal_adc.c: 149:     return ret;
  7108   00314A  5018               	movf	ADC_start_conversion@ret^0,w,c
  7109   00314C  0012               	return		;funcret
  7110   00314E                     __end_of_ADC_start_conversion:
  7111                           	callstack 0
  7112                           
  7113 ;; *************** function _ADC_select_channel *****************
  7114 ;; Defined at:
  7115 ;;		line 114 in file "MCAL/ADC/hal_adc.c"
  7116 ;; Parameters:    Size  Location     Type
  7117 ;;  _adc            1   25[COMRAM] PTR struct .
  7118 ;;		 -> adc(7), 
  7119 ;;  channel         1   26[COMRAM] enum E3044
  7120 ;; Auto vars:     Size  Location     Type
  7121 ;;  ret             1   28[COMRAM] unsigned char 
  7122 ;; Return value:  Size  Location     Type
  7123 ;;                  1    wreg      unsigned char 
  7124 ;; Registers used:
  7125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7126 ;; Tracked objects:
  7127 ;;		On entry : 0/0
  7128 ;;		On exit  : 0/0
  7129 ;;		Unchanged: 0/0
  7130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7131 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7132 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7133 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7134 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7135 ;;Total ram usage:        4 bytes
  7136 ;; Hardware stack levels used: 1
  7137 ;; Hardware stack levels required when called: 9
  7138 ;; This function calls:
  7139 ;;		_adc_input_channel_port_cfg
  7140 ;; This function is called by:
  7141 ;;		_ADC_start_conversion_interrupt
  7142 ;;		_ADC_get_conversion_blocking
  7143 ;; This function uses a non-reentrant model
  7144 ;;
  7145                           
  7146                           	psect	text48
  7147   002D88                     __ptext48:
  7148                           	callstack 0
  7149   002D88                     _ADC_select_channel:
  7150                           	callstack 20
  7151   002D88                     
  7152                           ;MCAL/ADC/hal_adc.c: 114: Std_ReturnType ADC_select_channel(adc_cfg_t *_adc, ADC_channel
      +                          _select_t channel);MCAL/ADC/hal_adc.c: 115: {;MCAL/ADC/hal_adc.c: 116:     Std_ReturnTyp
      +                          e ret = (Std_ReturnType)0x00U;
  7153   002D88  0E00               	movlw	0
  7154   002D8A  6E1D               	movwf	ADC_select_channel@ret^0,c
  7155                           
  7156                           ;MCAL/ADC/hal_adc.c: 117:     if (((void*)0) == _adc)
  7157   002D8C  501A               	movf	ADC_select_channel@_adc^0,w,c
  7158   002D8E  A4D8               	btfss	status,2,c
  7159   002D90  EFCC  F016         	goto	u5281
  7160   002D94  EFCE  F016         	goto	u5280
  7161   002D98                     u5281:
  7162   002D98  EFD2  F016         	goto	l6043
  7163   002D9C                     u5280:
  7164   002D9C                     
  7165                           ;MCAL/ADC/hal_adc.c: 118:     {;MCAL/ADC/hal_adc.c: 119:         ret = (Std_ReturnType)0
      +                          x01U;
  7166   002D9C  0E01               	movlw	1
  7167   002D9E  6E1D               	movwf	ADC_select_channel@ret^0,c
  7168                           
  7169                           ;MCAL/ADC/hal_adc.c: 120:     }
  7170   002DA0  EFE6  F016         	goto	l6049
  7171   002DA4                     l6043:
  7172                           
  7173                           ;MCAL/ADC/hal_adc.c: 122:     {;MCAL/ADC/hal_adc.c: 123:         _adc->adc_channel = cha
      +                          nnel;
  7174   002DA4  501A               	movf	ADC_select_channel@_adc^0,w,c
  7175   002DA6  6ED9               	movwf	fsr2l,c
  7176   002DA8  6ADA               	clrf	fsr2h,c
  7177   002DAA  0E05               	movlw	5
  7178   002DAC  26D9               	addwf	fsr2l,f,c
  7179   002DAE  C01B  FFDF         	movff	ADC_select_channel@channel,indf2
  7180   002DB2                     
  7181                           ;MCAL/ADC/hal_adc.c: 124:         (ADCON0bits.CHS = channel);
  7182   002DB2  C01B  F01C         	movff	ADC_select_channel@channel,??_ADC_select_channel
  7183   002DB6  461C               	rlncf	??_ADC_select_channel^0,f,c
  7184   002DB8  461C               	rlncf	??_ADC_select_channel^0,f,c
  7185   002DBA  50C2               	movf	194,w,c	;volatile
  7186   002DBC  181C               	xorwf	??_ADC_select_channel^0,w,c
  7187   002DBE  0BC3               	andlw	-61
  7188   002DC0  181C               	xorwf	??_ADC_select_channel^0,w,c
  7189   002DC2  6EC2               	movwf	194,c	;volatile
  7190   002DC4                     
  7191                           ;MCAL/ADC/hal_adc.c: 125:         adc_input_channel_port_cfg(_adc);
  7192   002DC4  C01A  F017         	movff	ADC_select_channel@_adc,adc_input_channel_port_cfg@_adc
  7193   002DC8  EC53  F010         	call	_adc_input_channel_port_cfg	;wreg free
  7194   002DCC                     l6049:
  7195                           
  7196                           ;MCAL/ADC/hal_adc.c: 127:     return ret;
  7197   002DCC  501D               	movf	ADC_select_channel@ret^0,w,c
  7198   002DCE  0012               	return		;funcret
  7199   002DD0                     __end_of_ADC_select_channel:
  7200                           	callstack 0
  7201                           
  7202 ;; *************** function _adc_input_channel_port_cfg *****************
  7203 ;; Defined at:
  7204 ;;		line 283 in file "MCAL/ADC/hal_adc.c"
  7205 ;; Parameters:    Size  Location     Type
  7206 ;;  _adc            1   22[COMRAM] PTR const struct .
  7207 ;;		 -> adc(7), 
  7208 ;; Auto vars:     Size  Location     Type
  7209 ;;		None
  7210 ;; Return value:  Size  Location     Type
  7211 ;;                  1    wreg      void 
  7212 ;; Registers used:
  7213 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7214 ;; Tracked objects:
  7215 ;;		On entry : 0/0
  7216 ;;		On exit  : 0/0
  7217 ;;		Unchanged: 0/0
  7218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7219 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7221 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7222 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7223 ;;Total ram usage:        3 bytes
  7224 ;; Hardware stack levels used: 1
  7225 ;; Hardware stack levels required when called: 8
  7226 ;; This function calls:
  7227 ;;		Nothing
  7228 ;; This function is called by:
  7229 ;;		_ADC_init
  7230 ;;		_ADC_select_channel
  7231 ;; This function uses a non-reentrant model
  7232 ;;
  7233                           
  7234                           	psect	text49
  7235   0020A6                     __ptext49:
  7236                           	callstack 0
  7237   0020A6                     _adc_input_channel_port_cfg:
  7238                           	callstack 19
  7239   0020A6                     
  7240                           ;MCAL/ADC/hal_adc.c: 283: static void adc_input_channel_port_cfg(const adc_cfg_t *_adc);
      +                          MCAL/ADC/hal_adc.c: 284: {;MCAL/ADC/hal_adc.c: 285:     switch (_adc->adc_channel)
  7241   0020A6  EF7C  F010         	goto	l5625
  7242   0020AA                     l5597:
  7243   0020AA  8092               	bsf	146,0,c	;volatile
  7244                           
  7245                           ;MCAL/ADC/hal_adc.c: 288:                             break;
  7246   0020AC  EFC2  F010         	goto	l499
  7247   0020B0                     l5599:
  7248   0020B0  8292               	bsf	146,1,c	;volatile
  7249                           
  7250                           ;MCAL/ADC/hal_adc.c: 290:                             break;
  7251   0020B2  EFC2  F010         	goto	l499
  7252   0020B6                     l5601:
  7253   0020B6  8492               	bsf	146,2,c	;volatile
  7254                           
  7255                           ;MCAL/ADC/hal_adc.c: 292:                             break;
  7256   0020B8  EFC2  F010         	goto	l499
  7257   0020BC                     l5603:
  7258   0020BC  8692               	bsf	146,3,c	;volatile
  7259                           
  7260                           ;MCAL/ADC/hal_adc.c: 294:                             break;
  7261   0020BE  EFC2  F010         	goto	l499
  7262   0020C2                     l5605:
  7263   0020C2  8A92               	bsf	146,5,c	;volatile
  7264                           
  7265                           ;MCAL/ADC/hal_adc.c: 296:                             break;
  7266   0020C4  EFC2  F010         	goto	l499
  7267   0020C8                     l5607:
  7268   0020C8  8096               	bsf	150,0,c	;volatile
  7269                           
  7270                           ;MCAL/ADC/hal_adc.c: 298:                             break;
  7271   0020CA  EFC2  F010         	goto	l499
  7272   0020CE                     l5609:
  7273   0020CE  8296               	bsf	150,1,c	;volatile
  7274                           
  7275                           ;MCAL/ADC/hal_adc.c: 300:                             break;
  7276   0020D0  EFC2  F010         	goto	l499
  7277   0020D4                     l5611:
  7278   0020D4  8496               	bsf	150,2,c	;volatile
  7279                           
  7280                           ;MCAL/ADC/hal_adc.c: 302:                             break;
  7281   0020D6  EFC2  F010         	goto	l499
  7282   0020DA                     l5613:
  7283   0020DA  8493               	bsf	147,2,c	;volatile
  7284                           
  7285                           ;MCAL/ADC/hal_adc.c: 304:                             break;
  7286   0020DC  EFC2  F010         	goto	l499
  7287   0020E0                     l5615:
  7288   0020E0  8693               	bsf	147,3,c	;volatile
  7289                           
  7290                           ;MCAL/ADC/hal_adc.c: 306:                             break;
  7291   0020E2  EFC2  F010         	goto	l499
  7292   0020E6                     l5617:
  7293   0020E6  8293               	bsf	147,1,c	;volatile
  7294                           
  7295                           ;MCAL/ADC/hal_adc.c: 308:                             break;
  7296   0020E8  EFC2  F010         	goto	l499
  7297   0020EC                     l5619:
  7298   0020EC  8893               	bsf	147,4,c	;volatile
  7299                           
  7300                           ;MCAL/ADC/hal_adc.c: 310:                             break;
  7301   0020EE  EFC2  F010         	goto	l499
  7302   0020F2                     l5621:
  7303   0020F2  8093               	bsf	147,0,c	;volatile
  7304                           
  7305                           ;MCAL/ADC/hal_adc.c: 312:                             break;
  7306   0020F4  EFC2  F010         	goto	l499
  7307   0020F8                     l5625:
  7308   0020F8  5017               	movf	adc_input_channel_port_cfg@_adc^0,w,c
  7309   0020FA  6ED9               	movwf	fsr2l,c
  7310   0020FC  6ADA               	clrf	fsr2h,c
  7311   0020FE  0E05               	movlw	5
  7312   002100  26D9               	addwf	fsr2l,f,c
  7313   002102  50DF               	movf	indf2,w,c
  7314   002104  6E18               	movwf	??_adc_input_channel_port_cfg^0,c
  7315   002106  6A19               	clrf	(??_adc_input_channel_port_cfg+1)^0,c
  7316                           
  7317                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7318                           ; Switch size 1, requested type "simple"
  7319                           ; Number of cases is 1, Range of values is 0 to 0
  7320                           ; switch strategies available:
  7321                           ; Name         Instructions Cycles
  7322                           ; simple_byte            4     3 (average)
  7323                           ;	Chosen strategy is simple_byte
  7324   002108  5019               	movf	(??_adc_input_channel_port_cfg+1)^0,w,c
  7325   00210A  0A00               	xorlw	0	; case 0
  7326   00210C  B4D8               	btfsc	status,2,c
  7327   00210E  EF8B  F010         	goto	l6887
  7328   002112  EFC2  F010         	goto	l499
  7329   002116                     l6887:
  7330                           
  7331                           ; Switch size 1, requested type "simple"
  7332                           ; Number of cases is 13, Range of values is 0 to 12
  7333                           ; switch strategies available:
  7334                           ; Name         Instructions Cycles
  7335                           ; simple_byte           40    21 (average)
  7336                           ;	Chosen strategy is simple_byte
  7337   002116  5018               	movf	??_adc_input_channel_port_cfg^0,w,c
  7338   002118  0A00               	xorlw	0	; case 0
  7339   00211A  B4D8               	btfsc	status,2,c
  7340   00211C  EF55  F010         	goto	l5597
  7341   002120  0A01               	xorlw	1	; case 1
  7342   002122  B4D8               	btfsc	status,2,c
  7343   002124  EF58  F010         	goto	l5599
  7344   002128  0A03               	xorlw	3	; case 2
  7345   00212A  B4D8               	btfsc	status,2,c
  7346   00212C  EF5B  F010         	goto	l5601
  7347   002130  0A01               	xorlw	1	; case 3
  7348   002132  B4D8               	btfsc	status,2,c
  7349   002134  EF5E  F010         	goto	l5603
  7350   002138  0A07               	xorlw	7	; case 4
  7351   00213A  B4D8               	btfsc	status,2,c
  7352   00213C  EF61  F010         	goto	l5605
  7353   002140  0A01               	xorlw	1	; case 5
  7354   002142  B4D8               	btfsc	status,2,c
  7355   002144  EF64  F010         	goto	l5607
  7356   002148  0A03               	xorlw	3	; case 6
  7357   00214A  B4D8               	btfsc	status,2,c
  7358   00214C  EF67  F010         	goto	l5609
  7359   002150  0A01               	xorlw	1	; case 7
  7360   002152  B4D8               	btfsc	status,2,c
  7361   002154  EF6A  F010         	goto	l5611
  7362   002158  0A0F               	xorlw	15	; case 8
  7363   00215A  B4D8               	btfsc	status,2,c
  7364   00215C  EF6D  F010         	goto	l5613
  7365   002160  0A01               	xorlw	1	; case 9
  7366   002162  B4D8               	btfsc	status,2,c
  7367   002164  EF70  F010         	goto	l5615
  7368   002168  0A03               	xorlw	3	; case 10
  7369   00216A  B4D8               	btfsc	status,2,c
  7370   00216C  EF73  F010         	goto	l5617
  7371   002170  0A01               	xorlw	1	; case 11
  7372   002172  B4D8               	btfsc	status,2,c
  7373   002174  EF76  F010         	goto	l5619
  7374   002178  0A07               	xorlw	7	; case 12
  7375   00217A  B4D8               	btfsc	status,2,c
  7376   00217C  EF79  F010         	goto	l5621
  7377   002180  EFC2  F010         	goto	l499
  7378   002184                     l499:
  7379   002184  0012               	return		;funcret
  7380   002186                     __end_of_adc_input_channel_port_cfg:
  7381                           	callstack 0
  7382                           
  7383 ;; *************** function _InterruptManagerLow *****************
  7384 ;; Defined at:
  7385 ;;		line 51 in file "MCAL/Interrupt/MCAL_interrupt_manager.c"
  7386 ;; Parameters:    Size  Location     Type
  7387 ;;		None
  7388 ;; Auto vars:     Size  Location     Type
  7389 ;;		None
  7390 ;; Return value:  Size  Location     Type
  7391 ;;                  1    wreg      void 
  7392 ;; Registers used:
  7393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7394 ;; Tracked objects:
  7395 ;;		On entry : 0/0
  7396 ;;		On exit  : 0/0
  7397 ;;		Unchanged: 0/0
  7398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7401 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7402 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7403 ;;Total ram usage:        7 bytes
  7404 ;; Hardware stack levels used: 1
  7405 ;; Hardware stack levels required when called: 7
  7406 ;; This function calls:
  7407 ;;		_INT2_ISR
  7408 ;;		_INTI_ADC_ISR
  7409 ;; This function is called by:
  7410 ;;		Interrupt level 1
  7411 ;; This function uses a non-reentrant model
  7412 ;;
  7413                           
  7414                           	psect	intcodelo
  7415   000018                     __pintcodelo:
  7416                           	callstack 0
  7417   000018                     _InterruptManagerLow:
  7418                           	callstack 17
  7419                           
  7420                           ;incstack = 0
  7421   000018  8069               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  7422   00001A  CFD8 F010          	movff	status,??_InterruptManagerLow
  7423   00001E  CFE8 F011          	movff	wreg,??_InterruptManagerLow+1
  7424   000022  CFE0 F012          	movff	bsr,??_InterruptManagerLow+2
  7425   000026  CFFA F013          	movff	pclath,??_InterruptManagerLow+3
  7426   00002A  CFFB F014          	movff	pclatu,??_InterruptManagerLow+4
  7427   00002E  CFD9 F015          	movff	fsr2l,??_InterruptManagerLow+5
  7428   000032  CFDA F016          	movff	fsr2h,??_InterruptManagerLow+6
  7429   000036                     
  7430                           ;MCAL/Interrupt/MCAL_interrupt_manager.c: 53:     if((0x01U == INTCON3bits.INT2IE) && (0
      +                          x01U == INTCON3bits.INT2IF))
  7431   000036  A8F0               	btfss	240,4,c	;volatile
  7432   000038  EF20  F000         	goto	i1u606_21
  7433   00003C  EF22  F000         	goto	i1u606_20
  7434   000040                     i1u606_21:
  7435   000040  EF2B  F000         	goto	i1l937
  7436   000044                     i1u606_20:
  7437   000044  A2F0               	btfss	240,1,c	;volatile
  7438   000046  EF27  F000         	goto	i1u607_21
  7439   00004A  EF29  F000         	goto	i1u607_20
  7440   00004E                     i1u607_21:
  7441   00004E  EF2B  F000         	goto	i1l937
  7442   000052                     i1u607_20:
  7443   000052                     
  7444                           ;MCAL/Interrupt/MCAL_interrupt_manager.c: 54:     {;MCAL/Interrupt/MCAL_interrupt_manage
      +                          r.c: 55:         INT2_ISR();
  7445   000052  ECD9  F018         	call	_INT2_ISR	;wreg free
  7446   000056                     i1l937:
  7447                           
  7448                           ;MCAL/Interrupt/MCAL_interrupt_manager.c: 59:     if ( (0x01U == PIE1bits.ADIE) && (0x01
      +                          U == PIR1bits.ADIF) )
  7449   000056  AC9D               	btfss	157,6,c	;volatile
  7450   000058  EF30  F000         	goto	i1u608_21
  7451   00005C  EF32  F000         	goto	i1u608_20
  7452   000060                     i1u608_21:
  7453   000060  EF3B  F000         	goto	i1l940
  7454   000064                     i1u608_20:
  7455   000064  AC9E               	btfss	158,6,c	;volatile
  7456   000066  EF37  F000         	goto	i1u609_21
  7457   00006A  EF39  F000         	goto	i1u609_20
  7458   00006E                     i1u609_21:
  7459   00006E  EF3B  F000         	goto	i1l940
  7460   000072                     i1u609_20:
  7461   000072                     
  7462                           ;MCAL/Interrupt/MCAL_interrupt_manager.c: 60:     {;MCAL/Interrupt/MCAL_interrupt_manage
      +                          r.c: 61:         INTI_ADC_ISR();
  7463   000072  EC18  F018         	call	_INTI_ADC_ISR	;wreg free
  7464   000076                     i1l940:
  7465   000076  C016  FFDA         	movff	??_InterruptManagerLow+6,fsr2h
  7466   00007A  C015  FFD9         	movff	??_InterruptManagerLow+5,fsr2l
  7467   00007E  C014  FFFB         	movff	??_InterruptManagerLow+4,pclatu
  7468   000082  C013  FFFA         	movff	??_InterruptManagerLow+3,pclath
  7469   000086  C012  FFE0         	movff	??_InterruptManagerLow+2,bsr
  7470   00008A  C011  FFE8         	movff	??_InterruptManagerLow+1,wreg
  7471   00008E  C010  FFD8         	movff	??_InterruptManagerLow,status
  7472   000092  9069               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  7473   000094  0010               	retfie	
  7474   000096                     __end_of_InterruptManagerLow:
  7475                           	callstack 0
  7476                           
  7477 ;; *************** function _INTI_ADC_ISR *****************
  7478 ;; Defined at:
  7479 ;;		line 355 in file "MCAL/ADC/hal_adc.c"
  7480 ;; Parameters:    Size  Location     Type
  7481 ;;		None
  7482 ;; Auto vars:     Size  Location     Type
  7483 ;;		None
  7484 ;; Return value:  Size  Location     Type
  7485 ;;                  1    wreg      void 
  7486 ;; Registers used:
  7487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7488 ;; Tracked objects:
  7489 ;;		On entry : 0/0
  7490 ;;		On exit  : 0/0
  7491 ;;		Unchanged: 0/0
  7492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7497 ;;Total ram usage:        0 bytes
  7498 ;; Hardware stack levels used: 1
  7499 ;; Hardware stack levels required when called: 6
  7500 ;; This function calls:
  7501 ;;		NULL
  7502 ;;		_adc_interrupt_handler
  7503 ;; This function is called by:
  7504 ;;		_InterruptManagerLow
  7505 ;; This function uses a non-reentrant model
  7506 ;;
  7507                           
  7508                           	psect	text51
  7509   003030                     __ptext51:
  7510                           	callstack 0
  7511   003030                     _INTI_ADC_ISR:
  7512                           	callstack 17
  7513   003030                     
  7514                           ;MCAL/ADC/hal_adc.c: 358:     (PIR1bits.ADIF = 0x00U);
  7515   003030  9C9E               	bcf	158,6,c	;volatile
  7516   003032                     
  7517                           ;MCAL/ADC/hal_adc.c: 360:     if (ADC_interrupt_handler)
  7518   003032  5055               	movf	_ADC_interrupt_handler^0,w,c
  7519   003034  1056               	iorwf	(_ADC_interrupt_handler+1)^0,w,c
  7520   003036  B4D8               	btfsc	status,2,c
  7521   003038  EF20  F018         	goto	i1u549_21
  7522   00303C  EF22  F018         	goto	i1u549_20
  7523   003040                     i1u549_21:
  7524   003040  EF2E  F018         	goto	i1l526
  7525   003044                     i1u549_20:
  7526   003044                     
  7527                           ;MCAL/ADC/hal_adc.c: 361:     {;MCAL/ADC/hal_adc.c: 362:         ADC_interrupt_handler()
      +                          ;
  7528   003044  D802               	call	i1u550_28
  7529   003046  EF2E  F018         	goto	i1u550_29
  7530   00304A                     i1u550_28:
  7531   00304A  0005               	push	
  7532   00304C  6EFA               	movwf	pclath,c
  7533   00304E  5055               	movf	_ADC_interrupt_handler^0,w,c
  7534   003050  6EFD               	movwf	tosl,c
  7535   003052  5056               	movf	(_ADC_interrupt_handler+1)^0,w,c
  7536   003054  6EFE               	movwf	tosh,c
  7537   003056  6AFF               	clrf	tosu,c
  7538   003058  50FA               	movf	pclath,w,c
  7539   00305A  0012               	return		;indir
  7540   00305C                     i1u550_29:
  7541   00305C                     i1l526:
  7542   00305C  0012               	return		;funcret
  7543   00305E                     __end_of_INTI_ADC_ISR:
  7544                           	callstack 0
  7545                           
  7546 ;; *************** function _adc_interrupt_handler *****************
  7547 ;; Defined at:
  7548 ;;		line 70 in file "APP/application.c"
  7549 ;; Parameters:    Size  Location     Type
  7550 ;;		None
  7551 ;; Auto vars:     Size  Location     Type
  7552 ;;		None
  7553 ;; Return value:  Size  Location     Type
  7554 ;;                  1    wreg      void 
  7555 ;; Registers used:
  7556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7557 ;; Tracked objects:
  7558 ;;		On entry : 0/0
  7559 ;;		On exit  : 0/0
  7560 ;;		Unchanged: 0/0
  7561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7566 ;;Total ram usage:        0 bytes
  7567 ;; Hardware stack levels used: 1
  7568 ;; Hardware stack levels required when called: 5
  7569 ;; This function calls:
  7570 ;;		_ADC_get_conversion_result
  7571 ;; This function is called by:
  7572 ;;		_INTI_ADC_ISR
  7573 ;;		i2_INTI_ADC_ISR
  7574 ;; This function uses a non-reentrant model
  7575 ;;
  7576                           
  7577                           	psect	text52
  7578   003168                     __ptext52:
  7579                           	callstack 0
  7580   003168                     _adc_interrupt_handler:
  7581                           	callstack 0
  7582                           
  7583                           ;Skip over the trampoline to the duplicate function for level 2
  7584   003168  A269               	btfss	int$flags,1,c
  7585   00316A  EFB9  F018         	goto	_adc_interrupt_handler$intlevel1
  7586   00316E  EFCE  F018         	goto	i2_adc_interrupt_handler
  7587   003172                     _adc_interrupt_handler$intlevel1:
  7588                           	callstack 17
  7589   003172                     
  7590                           ;APP/application.c: 72:     ADC_get_conversion_result(&adc, &adc_res);
  7591   003172  0EB2               	movlw	low _adc
  7592   003174  6E0A               	movwf	ADC_get_conversion_result@_adc^0,c
  7593   003176  0E5E               	movlw	low _adc_res
  7594   003178  6E0B               	movwf	ADC_get_conversion_result@result^0,c
  7595   00317A  ECC3  F010         	call	_ADC_get_conversion_result	;wreg free
  7596   00317E  0012               	return		;funcret
  7597   003180                     __end_of_adc_interrupt_handler:
  7598                           	callstack 0
  7599                           
  7600 ;; *************** function _ADC_get_conversion_result *****************
  7601 ;; Defined at:
  7602 ;;		line 196 in file "MCAL/ADC/hal_adc.c"
  7603 ;; Parameters:    Size  Location     Type
  7604 ;;  _adc            1    9[COMRAM] PTR const struct .
  7605 ;;		 -> adc(7), 
  7606 ;;  result          1   10[COMRAM] PTR unsigned short 
  7607 ;;		 -> adc_res(2), 
  7608 ;; Auto vars:     Size  Location     Type
  7609 ;;  ret             1   14[COMRAM] unsigned char 
  7610 ;; Return value:  Size  Location     Type
  7611 ;;                  1    wreg      unsigned char 
  7612 ;; Registers used:
  7613 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7614 ;; Tracked objects:
  7615 ;;		On entry : 0/0
  7616 ;;		On exit  : 0/0
  7617 ;;		Unchanged: 0/0
  7618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7619 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7620 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7621 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7622 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7623 ;;Total ram usage:        6 bytes
  7624 ;; Hardware stack levels used: 1
  7625 ;; Hardware stack levels required when called: 4
  7626 ;; This function calls:
  7627 ;;		Nothing
  7628 ;; This function is called by:
  7629 ;;		_adc_interrupt_handler
  7630 ;;		_ADC_get_conversion_blocking
  7631 ;; This function uses a non-reentrant model
  7632 ;;
  7633                           
  7634                           	psect	text53
  7635   002186                     __ptext53:
  7636                           	callstack 0
  7637   002186                     _ADC_get_conversion_result:
  7638                           	callstack 17
  7639   002186                     
  7640                           ;MCAL/ADC/hal_adc.c: 196: Std_ReturnType ADC_get_conversion_result(const adc_cfg_t *_adc
      +                          , adc_result_t *result);MCAL/ADC/hal_adc.c: 197: {;MCAL/ADC/hal_adc.c: 198:     Std_Retu
      +                          rnType ret = (Std_ReturnType)0x00U;
  7641   002186  0E00               	movlw	0
  7642   002188  6E0F               	movwf	ADC_get_conversion_result@ret^0,c
  7643                           
  7644                           ;MCAL/ADC/hal_adc.c: 199:     if (((void*)0) == _adc || ((void*)0) == result)
  7645   00218A  500A               	movf	ADC_get_conversion_result@_adc^0,w,c
  7646   00218C  B4D8               	btfsc	status,2,c
  7647   00218E  EFCB  F010         	goto	i1u490_21
  7648   002192  EFCD  F010         	goto	i1u490_20
  7649   002196                     i1u490_21:
  7650   002196  EFD5  F010         	goto	i1l5705
  7651   00219A                     i1u490_20:
  7652   00219A  500B               	movf	ADC_get_conversion_result@result^0,w,c
  7653   00219C  A4D8               	btfss	status,2,c
  7654   00219E  EFD3  F010         	goto	i1u491_21
  7655   0021A2  EFD5  F010         	goto	i1u491_20
  7656   0021A6                     i1u491_21:
  7657   0021A6  EF07  F011         	goto	i1l5715
  7658   0021AA                     i1u491_20:
  7659   0021AA                     i1l5705:
  7660                           
  7661                           ;MCAL/ADC/hal_adc.c: 200:     {;MCAL/ADC/hal_adc.c: 201:         ret = (Std_ReturnType)0
      +                          x01U;
  7662   0021AA  0E01               	movlw	1
  7663   0021AC  6E0F               	movwf	ADC_get_conversion_result@ret^0,c
  7664                           
  7665                           ;MCAL/ADC/hal_adc.c: 202:     }
  7666   0021AE  EF29  F011         	goto	i1l5717
  7667   0021B2                     i1l5707:
  7668                           
  7669                           ;MCAL/ADC/hal_adc.c: 209:                 *result = (adc_result_t)((ADRESH << 8) + ADRES
      +                          L);
  7670   0021B2  50C3               	movf	195,w,c	;volatile
  7671   0021B4  CFC4 F00C          	movff	4036,??_ADC_get_conversion_result	;volatile
  7672   0021B8  6A0D               	clrf	(??_ADC_get_conversion_result+1)^0,c
  7673   0021BA  C00C  F00D         	movff	??_ADC_get_conversion_result,??_ADC_get_conversion_result+1
  7674   0021BE  6A0C               	clrf	??_ADC_get_conversion_result^0,c
  7675   0021C0  260C               	addwf	??_ADC_get_conversion_result^0,f,c
  7676   0021C2  0E00               	movlw	0
  7677   0021C4  220D               	addwfc	(??_ADC_get_conversion_result+1)^0,f,c
  7678   0021C6  500B               	movf	ADC_get_conversion_result@result^0,w,c
  7679   0021C8  6ED9               	movwf	fsr2l,c
  7680   0021CA  6ADA               	clrf	fsr2h,c
  7681   0021CC  C00C  FFDE         	movff	??_ADC_get_conversion_result,postinc2
  7682   0021D0  C00D  FFDD         	movff	??_ADC_get_conversion_result+1,postdec2
  7683                           
  7684                           ;MCAL/ADC/hal_adc.c: 210:                 break;
  7685   0021D4  EF29  F011         	goto	i1l5717
  7686   0021D8                     i1l5709:
  7687                           
  7688                           ;MCAL/ADC/hal_adc.c: 212:                 *result = (adc_result_t)(((ADRESH << 8) + ADRE
      +                          SL) >> 6);
  7689   0021D8  50C3               	movf	195,w,c	;volatile
  7690   0021DA  CFC4 F00C          	movff	4036,??_ADC_get_conversion_result	;volatile
  7691   0021DE  6A0D               	clrf	(??_ADC_get_conversion_result+1)^0,c
  7692   0021E0  C00C  F00D         	movff	??_ADC_get_conversion_result,??_ADC_get_conversion_result+1
  7693   0021E4  6A0C               	clrf	??_ADC_get_conversion_result^0,c
  7694   0021E6  260C               	addwf	??_ADC_get_conversion_result^0,f,c
  7695   0021E8  0E00               	movlw	0
  7696   0021EA  220D               	addwfc	(??_ADC_get_conversion_result+1)^0,f,c
  7697   0021EC  0E06               	movlw	6
  7698   0021EE  6E0E               	movwf	(??_ADC_get_conversion_result+2)^0,c
  7699   0021F0                     i1u492_25:
  7700   0021F0  340D               	rlcf	(??_ADC_get_conversion_result+1)^0,w,c
  7701   0021F2  320D               	rrcf	(??_ADC_get_conversion_result+1)^0,f,c
  7702   0021F4  320C               	rrcf	??_ADC_get_conversion_result^0,f,c
  7703   0021F6  2E0E               	decfsz	(??_ADC_get_conversion_result+2)^0,f,c
  7704   0021F8  EFF8  F010         	goto	i1u492_25
  7705   0021FC  500B               	movf	ADC_get_conversion_result@result^0,w,c
  7706   0021FE  6ED9               	movwf	fsr2l,c
  7707   002200  6ADA               	clrf	fsr2h,c
  7708   002202  C00C  FFDE         	movff	??_ADC_get_conversion_result,postinc2
  7709   002206  C00D  FFDD         	movff	??_ADC_get_conversion_result+1,postdec2
  7710                           
  7711                           ;MCAL/ADC/hal_adc.c: 213:                 break;
  7712   00220A  EF29  F011         	goto	i1l5717
  7713   00220E                     i1l5715:
  7714   00220E  500A               	movf	ADC_get_conversion_result@_adc^0,w,c
  7715   002210  6ED9               	movwf	fsr2l,c
  7716   002212  6ADA               	clrf	fsr2h,c
  7717   002214  0E06               	movlw	6
  7718   002216  26D9               	addwf	fsr2l,f,c
  7719   002218  B2DF               	btfsc	indf2,1,c
  7720   00221A  EF11  F011         	goto	i1u493_21
  7721   00221E  EF14  F011         	goto	i1u493_20
  7722   002222                     i1u493_21:
  7723   002222  0E01               	movlw	1
  7724   002224  EF15  F011         	goto	i1u494_20
  7725   002228                     i1u493_20:
  7726   002228  0E00               	movlw	0
  7727   00222A                     i1u494_20:
  7728   00222A  6E0C               	movwf	??_ADC_get_conversion_result^0,c
  7729   00222C  6A0D               	clrf	(??_ADC_get_conversion_result+1)^0,c
  7730                           
  7731                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7732                           ; Switch size 1, requested type "simple"
  7733                           ; Number of cases is 1, Range of values is 0 to 0
  7734                           ; switch strategies available:
  7735                           ; Name         Instructions Cycles
  7736                           ; simple_byte            4     3 (average)
  7737                           ;	Chosen strategy is simple_byte
  7738   00222E  500D               	movf	(??_ADC_get_conversion_result+1)^0,w,c
  7739   002230  0A00               	xorlw	0	; case 0
  7740   002232  B4D8               	btfsc	status,2,c
  7741   002234  EF1E  F011         	goto	i1l6889
  7742   002238  EFD9  F010         	goto	i1l5707
  7743   00223C                     i1l6889:
  7744                           
  7745                           ; Switch size 1, requested type "simple"
  7746                           ; Number of cases is 2, Range of values is 0 to 1
  7747                           ; switch strategies available:
  7748                           ; Name         Instructions Cycles
  7749                           ; simple_byte            7     4 (average)
  7750                           ;	Chosen strategy is simple_byte
  7751   00223C  500C               	movf	??_ADC_get_conversion_result^0,w,c
  7752   00223E  0A00               	xorlw	0	; case 0
  7753   002240  B4D8               	btfsc	status,2,c
  7754   002242  EFEC  F010         	goto	i1l5709
  7755   002246  0A01               	xorlw	1	; case 1
  7756   002248  B4D8               	btfsc	status,2,c
  7757   00224A  EFD9  F010         	goto	i1l5707
  7758   00224E  EFD9  F010         	goto	i1l5707
  7759   002252                     i1l5717:
  7760                           
  7761                           ;MCAL/ADC/hal_adc.c: 219:     return ret;
  7762   002252  500F               	movf	ADC_get_conversion_result@ret^0,w,c
  7763   002254  0012               	return		;funcret
  7764   002256                     __end_of_ADC_get_conversion_result:
  7765                           	callstack 0
  7766                           
  7767 ;; *************** function _INT2_ISR *****************
  7768 ;; Defined at:
  7769 ;;		line 203 in file "MCAL/Interrupt/EXT_interrupts/MCAL_EXTI.c"
  7770 ;; Parameters:    Size  Location     Type
  7771 ;;		None
  7772 ;; Auto vars:     Size  Location     Type
  7773 ;;		None
  7774 ;; Return value:  Size  Location     Type
  7775 ;;                  1    wreg      void 
  7776 ;; Registers used:
  7777 ;;		None
  7778 ;; Tracked objects:
  7779 ;;		On entry : 0/0
  7780 ;;		On exit  : 0/0
  7781 ;;		Unchanged: 0/0
  7782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7787 ;;Total ram usage:        0 bytes
  7788 ;; Hardware stack levels used: 1
  7789 ;; Hardware stack levels required when called: 4
  7790 ;; This function calls:
  7791 ;;		Nothing
  7792 ;; This function is called by:
  7793 ;;		_InterruptManagerLow
  7794 ;; This function uses a non-reentrant model
  7795 ;;
  7796                           
  7797                           	psect	text54
  7798   0031B2                     __ptext54:
  7799                           	callstack 0
  7800   0031B2                     _INT2_ISR:
  7801                           	callstack 19
  7802   0031B2                     
  7803                           ;MCAL/Interrupt/EXT_interrupts/MCAL_EXTI.c: 206:     (INTCON3bits.INT2IF = 0x00U);
  7804   0031B2  92F0               	bcf	240,1,c	;volatile
  7805   0031B4  0012               	return		;funcret
  7806   0031B6                     __end_of_INT2_ISR:
  7807                           	callstack 0
  7808                           
  7809 ;; *************** function _InterruptManagerHigh *****************
  7810 ;; Defined at:
  7811 ;;		line 12 in file "MCAL/Interrupt/MCAL_interrupt_manager.c"
  7812 ;; Parameters:    Size  Location     Type
  7813 ;;		None
  7814 ;; Auto vars:     Size  Location     Type
  7815 ;;		None
  7816 ;; Return value:  Size  Location     Type
  7817 ;;                  1    wreg      void 
  7818 ;; Registers used:
  7819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7820 ;; Tracked objects:
  7821 ;;		On entry : 0/0
  7822 ;;		On exit  : 0/0
  7823 ;;		Unchanged: 0/0
  7824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7827 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7828 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7829 ;;Total ram usage:        4 bytes
  7830 ;; Hardware stack levels used: 1
  7831 ;; Hardware stack levels required when called: 3
  7832 ;; This function calls:
  7833 ;;		_INT0_ISR
  7834 ;;		_INT1_ISR
  7835 ;;		_RB4_ISR
  7836 ;;		i2_INTI_ADC_ISR
  7837 ;; This function is called by:
  7838 ;;		Interrupt level 2
  7839 ;; This function uses a non-reentrant model
  7840 ;;
  7841                           
  7842                           	psect	intcode
  7843   000008                     __pintcode:
  7844                           	callstack 0
  7845   000008                     _InterruptManagerHigh:
  7846                           	callstack 17
  7847                           
  7848                           ;incstack = 0
  7849   000008  8269               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7850   00000A  EDFE  F00E         	call	int_func,f	;refresh shadow registers
  7851                           
  7852                           	psect	intcode_body
  7853   001DFC                     __pintcode_body:
  7854                           	callstack 17
  7855   001DFC                     int_func:
  7856                           	callstack 17
  7857   001DFC  0006               	pop		; remove dummy address from shadow register refresh
  7858   001DFE  CFFA F006          	movff	pclath,??_InterruptManagerHigh
  7859   001E02  CFFB F007          	movff	pclatu,??_InterruptManagerHigh+1
  7860   001E06  CFD9 F008          	movff	fsr2l,??_InterruptManagerHigh+2
  7861   001E0A  CFDA F009          	movff	fsr2h,??_InterruptManagerHigh+3
  7862   001E0E                     
  7863                           ;MCAL/Interrupt/MCAL_interrupt_manager.c: 14:     if((0x01U == INTCONbits.INT0IE) && (0x
      +                          01U == INTCONbits.INT0IF))
  7864   001E0E  A8F2               	btfss	242,4,c	;volatile
  7865   001E10  EF0C  F00F         	goto	i2u594_41
  7866   001E14  EF0E  F00F         	goto	i2u594_40
  7867   001E18                     i2u594_41:
  7868   001E18  EF17  F00F         	goto	i2l922
  7869   001E1C                     i2u594_40:
  7870   001E1C  A2F2               	btfss	242,1,c	;volatile
  7871   001E1E  EF13  F00F         	goto	i2u595_41
  7872   001E22  EF15  F00F         	goto	i2u595_40
  7873   001E26                     i2u595_41:
  7874   001E26  EF17  F00F         	goto	i2l922
  7875   001E2A                     i2u595_40:
  7876   001E2A                     
  7877                           ;MCAL/Interrupt/MCAL_interrupt_manager.c: 15:     {;MCAL/Interrupt/MCAL_interrupt_manage
      +                          r.c: 16:         INT0_ISR();
  7878   001E2A  ECDD  F018         	call	_INT0_ISR	;wreg free
  7879   001E2E                     i2l922:
  7880                           
  7881                           ;MCAL/Interrupt/MCAL_interrupt_manager.c: 21:     if((0x01U == INTCON3bits.INT1IE) && (0
      +                          x01U == INTCON3bits.INT1IF))
  7882   001E2E  A6F0               	btfss	240,3,c	;volatile
  7883   001E30  EF1C  F00F         	goto	i2u596_41
  7884   001E34  EF1E  F00F         	goto	i2u596_40
  7885   001E38                     i2u596_41:
  7886   001E38  EF27  F00F         	goto	i2l924
  7887   001E3C                     i2u596_40:
  7888   001E3C  A0F0               	btfss	240,0,c	;volatile
  7889   001E3E  EF23  F00F         	goto	i2u597_41
  7890   001E42  EF25  F00F         	goto	i2u597_40
  7891   001E46                     i2u597_41:
  7892   001E46  EF27  F00F         	goto	i2l924
  7893   001E4A                     i2u597_40:
  7894   001E4A                     
  7895                           ;MCAL/Interrupt/MCAL_interrupt_manager.c: 22:     {;MCAL/Interrupt/MCAL_interrupt_manage
      +                          r.c: 23:         INT1_ISR();
  7896   001E4A  ECDB  F018         	call	_INT1_ISR	;wreg free
  7897   001E4E                     i2l924:
  7898                           
  7899                           ;MCAL/Interrupt/MCAL_interrupt_manager.c: 29:     if((0x01U == INTCONbits.RBIE) && (0x01
      +                          U == INTCONbits.RBIF)
  7900   001E4E  A6F2               	btfss	242,3,c	;volatile
  7901   001E50  EF2C  F00F         	goto	i2u598_41
  7902   001E54  EF2E  F00F         	goto	i2u598_40
  7903   001E58                     i2u598_41:
  7904   001E58  EF3F  F00F         	goto	i2l926
  7905   001E5C                     i2u598_40:
  7906   001E5C  A0F2               	btfss	242,0,c	;volatile
  7907   001E5E  EF33  F00F         	goto	i2u599_41
  7908   001E62  EF35  F00F         	goto	i2u599_40
  7909   001E66                     i2u599_41:
  7910   001E66  EF3F  F00F         	goto	i2l926
  7911   001E6A                     i2u599_40:
  7912   001E6A  A881               	btfss	129,4,c	;volatile
  7913   001E6C  EF3A  F00F         	goto	i2u600_41
  7914   001E70  EF3C  F00F         	goto	i2u600_40
  7915   001E74                     i2u600_41:
  7916   001E74  EF3F  F00F         	goto	i2l926
  7917   001E78                     i2u600_40:
  7918   001E78                     
  7919                           ;MCAL/Interrupt/MCAL_interrupt_manager.c: 31:     {;MCAL/Interrupt/MCAL_interrupt_manage
      +                          r.c: 32:         RB4_ISR(0x01U);
  7920   001E78  0E01               	movlw	1
  7921   001E7A  ECA7  F018         	call	_RB4_ISR
  7922   001E7E                     i2l926:
  7923                           
  7924                           ;MCAL/Interrupt/MCAL_interrupt_manager.c: 36:     if((0x01U == INTCONbits.RBIE) && (0x01
      +                          U == INTCONbits.RBIF)
  7925   001E7E  A6F2               	btfss	242,3,c	;volatile
  7926   001E80  EF44  F00F         	goto	i2u601_41
  7927   001E84  EF46  F00F         	goto	i2u601_40
  7928   001E88                     i2u601_41:
  7929   001E88  EF57  F00F         	goto	i2l928
  7930   001E8C                     i2u601_40:
  7931   001E8C  A0F2               	btfss	242,0,c	;volatile
  7932   001E8E  EF4B  F00F         	goto	i2u602_41
  7933   001E92  EF4D  F00F         	goto	i2u602_40
  7934   001E96                     i2u602_41:
  7935   001E96  EF57  F00F         	goto	i2l928
  7936   001E9A                     i2u602_40:
  7937   001E9A  B881               	btfsc	129,4,c	;volatile
  7938   001E9C  EF52  F00F         	goto	i2u603_41
  7939   001EA0  EF54  F00F         	goto	i2u603_40
  7940   001EA4                     i2u603_41:
  7941   001EA4  EF57  F00F         	goto	i2l928
  7942   001EA8                     i2u603_40:
  7943   001EA8                     
  7944                           ;MCAL/Interrupt/MCAL_interrupt_manager.c: 38:     {;MCAL/Interrupt/MCAL_interrupt_manage
      +                          r.c: 39:         RB4_ISR(0x00U);
  7945   001EA8  0E00               	movlw	0
  7946   001EAA  ECA7  F018         	call	_RB4_ISR
  7947   001EAE                     i2l928:
  7948                           
  7949                           ;MCAL/Interrupt/MCAL_interrupt_manager.c: 43:     if ( (0x01U == PIE1bits.ADIE) && (0x01
      +                          U == PIR1bits.ADIF) )
  7950   001EAE  AC9D               	btfss	157,6,c	;volatile
  7951   001EB0  EF5C  F00F         	goto	i2u604_41
  7952   001EB4  EF5E  F00F         	goto	i2u604_40
  7953   001EB8                     i2u604_41:
  7954   001EB8  EF67  F00F         	goto	i2l931
  7955   001EBC                     i2u604_40:
  7956   001EBC  AC9E               	btfss	158,6,c	;volatile
  7957   001EBE  EF63  F00F         	goto	i2u605_41
  7958   001EC2  EF65  F00F         	goto	i2u605_40
  7959   001EC6                     i2u605_41:
  7960   001EC6  EF67  F00F         	goto	i2l931
  7961   001ECA                     i2u605_40:
  7962   001ECA                     
  7963                           ;MCAL/Interrupt/MCAL_interrupt_manager.c: 44:     {;MCAL/Interrupt/MCAL_interrupt_manage
      +                          r.c: 45:         INTI_ADC_ISR();
  7964   001ECA  EC2F  F018         	call	i2_INTI_ADC_ISR	;wreg free
  7965   001ECE                     i2l931:
  7966   001ECE  C009  FFDA         	movff	??_InterruptManagerHigh+3,fsr2h
  7967   001ED2  C008  FFD9         	movff	??_InterruptManagerHigh+2,fsr2l
  7968   001ED6  C007  FFFB         	movff	??_InterruptManagerHigh+1,pclatu
  7969   001EDA  C006  FFFA         	movff	??_InterruptManagerHigh,pclath
  7970   001EDE  9269               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7971   001EE0  0011               	retfie		f
  7972   001EE2                     __end_of_InterruptManagerHigh:
  7973                           	callstack 0
  7974                           
  7975 ;; *************** function i2_INTI_ADC_ISR *****************
  7976 ;; Defined at:
  7977 ;;		line 355 in file "MCAL/ADC/hal_adc.c"
  7978 ;; Parameters:    Size  Location     Type
  7979 ;;		None
  7980 ;; Auto vars:     Size  Location     Type
  7981 ;;		None
  7982 ;; Return value:  Size  Location     Type
  7983 ;;                  1    wreg      void 
  7984 ;; Registers used:
  7985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7986 ;; Tracked objects:
  7987 ;;		On entry : 0/0
  7988 ;;		On exit  : 0/0
  7989 ;;		Unchanged: 0/0
  7990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7995 ;;Total ram usage:        0 bytes
  7996 ;; Hardware stack levels used: 1
  7997 ;; Hardware stack levels required when called: 2
  7998 ;; This function calls:
  7999 ;;		NULL
  8000 ;;		i2_adc_interrupt_handler
  8001 ;; This function is called by:
  8002 ;;		_InterruptManagerHigh
  8003 ;; This function uses a non-reentrant model
  8004 ;;
  8005                           
  8006                           	psect	text56
  8007   00305E                     __ptext56:
  8008                           	callstack 0
  8009   00305E                     i2_INTI_ADC_ISR:
  8010                           	callstack 17
  8011   00305E                     
  8012                           ;MCAL/ADC/hal_adc.c: 358:     (PIR1bits.ADIF = 0x00U);
  8013   00305E  9C9E               	bcf	158,6,c	;volatile
  8014   003060                     
  8015                           ;MCAL/ADC/hal_adc.c: 360:     if (ADC_interrupt_handler)
  8016   003060  5055               	movf	_ADC_interrupt_handler^0,w,c
  8017   003062  1056               	iorwf	(_ADC_interrupt_handler+1)^0,w,c
  8018   003064  B4D8               	btfsc	status,2,c
  8019   003066  EF37  F018         	goto	i2u570_41
  8020   00306A  EF39  F018         	goto	i2u570_40
  8021   00306E                     i2u570_41:
  8022   00306E  EF45  F018         	goto	i2l526
  8023   003072                     i2u570_40:
  8024   003072                     
  8025                           ;MCAL/ADC/hal_adc.c: 361:     {;MCAL/ADC/hal_adc.c: 362:         ADC_interrupt_handler()
      +                          ;
  8026   003072  D802               	call	i2u571_48
  8027   003074  EF45  F018         	goto	i2u571_49
  8028   003078                     i2u571_48:
  8029   003078  0005               	push	
  8030   00307A  6EFA               	movwf	pclath,c
  8031   00307C  5055               	movf	_ADC_interrupt_handler^0,w,c
  8032   00307E  6EFD               	movwf	tosl,c
  8033   003080  5056               	movf	(_ADC_interrupt_handler+1)^0,w,c
  8034   003082  6EFE               	movwf	tosh,c
  8035   003084  6AFF               	clrf	tosu,c
  8036   003086  50FA               	movf	pclath,w,c
  8037   003088  0012               	return		;indir
  8038   00308A                     i2u571_49:
  8039   00308A                     i2l526:
  8040   00308A  0012               	return		;funcret
  8041   00308C                     __end_ofi2_INTI_ADC_ISR:
  8042                           	callstack 0
  8043                           
  8044 ;; *************** function i2_adc_interrupt_handler *****************
  8045 ;; Defined at:
  8046 ;;		line 70 in file "APP/application.c"
  8047 ;; Parameters:    Size  Location     Type
  8048 ;;		None
  8049 ;; Auto vars:     Size  Location     Type
  8050 ;;		None
  8051 ;; Return value:  Size  Location     Type
  8052 ;;                  1    wreg      void 
  8053 ;; Registers used:
  8054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8055 ;; Tracked objects:
  8056 ;;		On entry : 0/0
  8057 ;;		On exit  : 0/0
  8058 ;;		Unchanged: 0/0
  8059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8064 ;;Total ram usage:        0 bytes
  8065 ;; Hardware stack levels used: 1
  8066 ;; Hardware stack levels required when called: 1
  8067 ;; This function calls:
  8068 ;;		i2_ADC_get_conversion_result
  8069 ;; This function is called by:
  8070 ;;		_INTI_ADC_ISR
  8071 ;;		i2_INTI_ADC_ISR
  8072 ;; This function uses a non-reentrant model
  8073 ;;
  8074                           
  8075                           	psect	text57
  8076   00319C                     __ptext57:
  8077                           	callstack 0
  8078   00319C                     i2_adc_interrupt_handler:
  8079                           	callstack 17
  8080   00319C                     
  8081                           ;APP/application.c: 72:     ADC_get_conversion_result(&adc, &adc_res);
  8082   00319C  0EB2               	movlw	low _adc
  8083   00319E  6E01               	movwf	i2ADC_get_conversion_result@_adc^0,c
  8084   0031A0  0E5E               	movlw	low _adc_res
  8085   0031A2  6E02               	movwf	i2ADC_get_conversion_result@result^0,c
  8086   0031A4  EC2B  F011         	call	i2_ADC_get_conversion_result	;wreg free
  8087   0031A8  0012               	return		;funcret
  8088   0031AA                     __end_ofi2_adc_interrupt_handler:
  8089                           	callstack 0
  8090                           
  8091 ;; *************** function i2_ADC_get_conversion_result *****************
  8092 ;; Defined at:
  8093 ;;		line 196 in file "MCAL/ADC/hal_adc.c"
  8094 ;; Parameters:    Size  Location     Type
  8095 ;;  _adc            1    0[COMRAM] PTR const struct .
  8096 ;;		 -> adc(7), 
  8097 ;;  result          1    1[COMRAM] PTR unsigned short 
  8098 ;;		 -> adc_res(2), 
  8099 ;; Auto vars:     Size  Location     Type
  8100 ;;  ret             1    0        unsigned char 
  8101 ;; Return value:  Size  Location     Type
  8102 ;;                  1    wreg      unsigned char 
  8103 ;; Registers used:
  8104 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8105 ;; Tracked objects:
  8106 ;;		On entry : 0/0
  8107 ;;		On exit  : 0/0
  8108 ;;		Unchanged: 0/0
  8109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8110 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8112 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8113 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8114 ;;Total ram usage:        5 bytes
  8115 ;; Hardware stack levels used: 1
  8116 ;; This function calls:
  8117 ;;		Nothing
  8118 ;; This function is called by:
  8119 ;;		i2_adc_interrupt_handler
  8120 ;; This function uses a non-reentrant model
  8121 ;;
  8122                           
  8123                           	psect	text58
  8124   002256                     __ptext58:
  8125                           	callstack 0
  8126   002256                     i2_ADC_get_conversion_result:
  8127                           	callstack 17
  8128   002256                     
  8129                           ;MCAL/ADC/hal_adc.c: 199:     if (((void*)0) == _adc || ((void*)0) == result)
  8130   002256  5001               	movf	i2ADC_get_conversion_result@_adc^0,w,c
  8131   002258  B4D8               	btfsc	status,2,c
  8132   00225A  EF31  F011         	goto	i2u513_41
  8133   00225E  EF33  F011         	goto	i2u513_40
  8134   002262                     i2u513_41:
  8135   002262  EF3B  F011         	goto	i2l5901
  8136   002266                     i2u513_40:
  8137   002266  5002               	movf	i2ADC_get_conversion_result@result^0,w,c
  8138   002268  A4D8               	btfss	status,2,c
  8139   00226A  EF39  F011         	goto	i2u514_41
  8140   00226E  EF3B  F011         	goto	i2u514_40
  8141   002272                     i2u514_41:
  8142   002272  EF6B  F011         	goto	i2l5911
  8143   002276                     i2u514_40:
  8144   002276                     i2l5901:
  8145                           
  8146                           ;MCAL/ADC/hal_adc.c: 202:     }
  8147   002276  EF8D  F011         	goto	i2l466
  8148   00227A                     i2l5903:
  8149                           
  8150                           ;MCAL/ADC/hal_adc.c: 209:                 *result = (adc_result_t)((ADRESH << 8) + ADRES
      +                          L);
  8151   00227A  50C3               	movf	195,w,c	;volatile
  8152   00227C  CFC4 F003          	movff	4036,??i2_ADC_get_conversion_result	;volatile
  8153   002280  6A04               	clrf	(??i2_ADC_get_conversion_result+1)^0,c
  8154   002282  C003  F004         	movff	??i2_ADC_get_conversion_result,??i2_ADC_get_conversion_result+1
  8155   002286  6A03               	clrf	??i2_ADC_get_conversion_result^0,c
  8156   002288  2603               	addwf	??i2_ADC_get_conversion_result^0,f,c
  8157   00228A  0E00               	movlw	0
  8158   00228C  2204               	addwfc	(??i2_ADC_get_conversion_result+1)^0,f,c
  8159   00228E  5002               	movf	i2ADC_get_conversion_result@result^0,w,c
  8160   002290  6ED9               	movwf	fsr2l,c
  8161   002292  6ADA               	clrf	fsr2h,c
  8162   002294  C003  FFDE         	movff	??i2_ADC_get_conversion_result,postinc2
  8163   002298  C004  FFDD         	movff	??i2_ADC_get_conversion_result+1,postdec2
  8164                           
  8165                           ;MCAL/ADC/hal_adc.c: 210:                 break;
  8166   00229C  EF8D  F011         	goto	i2l466
  8167   0022A0                     i2l5905:
  8168                           
  8169                           ;MCAL/ADC/hal_adc.c: 212:                 *result = (adc_result_t)(((ADRESH << 8) + ADRE
      +                          SL) >> 6);
  8170   0022A0  50C3               	movf	195,w,c	;volatile
  8171   0022A2  CFC4 F003          	movff	4036,??i2_ADC_get_conversion_result	;volatile
  8172   0022A6  6A04               	clrf	(??i2_ADC_get_conversion_result+1)^0,c
  8173   0022A8  C003  F004         	movff	??i2_ADC_get_conversion_result,??i2_ADC_get_conversion_result+1
  8174   0022AC  6A03               	clrf	??i2_ADC_get_conversion_result^0,c
  8175   0022AE  2603               	addwf	??i2_ADC_get_conversion_result^0,f,c
  8176   0022B0  0E00               	movlw	0
  8177   0022B2  2204               	addwfc	(??i2_ADC_get_conversion_result+1)^0,f,c
  8178   0022B4  0E06               	movlw	6
  8179   0022B6  6E05               	movwf	(??i2_ADC_get_conversion_result+2)^0,c
  8180   0022B8                     i2u515_45:
  8181   0022B8  3404               	rlcf	(??i2_ADC_get_conversion_result+1)^0,w,c
  8182   0022BA  3204               	rrcf	(??i2_ADC_get_conversion_result+1)^0,f,c
  8183   0022BC  3203               	rrcf	??i2_ADC_get_conversion_result^0,f,c
  8184   0022BE  2E05               	decfsz	(??i2_ADC_get_conversion_result+2)^0,f,c
  8185   0022C0  EF5C  F011         	goto	i2u515_45
  8186   0022C4  5002               	movf	i2ADC_get_conversion_result@result^0,w,c
  8187   0022C6  6ED9               	movwf	fsr2l,c
  8188   0022C8  6ADA               	clrf	fsr2h,c
  8189   0022CA  C003  FFDE         	movff	??i2_ADC_get_conversion_result,postinc2
  8190   0022CE  C004  FFDD         	movff	??i2_ADC_get_conversion_result+1,postdec2
  8191                           
  8192                           ;MCAL/ADC/hal_adc.c: 213:                 break;
  8193   0022D2  EF8D  F011         	goto	i2l466
  8194   0022D6                     i2l5911:
  8195   0022D6  5001               	movf	i2ADC_get_conversion_result@_adc^0,w,c
  8196   0022D8  6ED9               	movwf	fsr2l,c
  8197   0022DA  6ADA               	clrf	fsr2h,c
  8198   0022DC  0E06               	movlw	6
  8199   0022DE  26D9               	addwf	fsr2l,f,c
  8200   0022E0  B2DF               	btfsc	indf2,1,c
  8201   0022E2  EF75  F011         	goto	i2u516_41
  8202   0022E6  EF78  F011         	goto	i2u516_40
  8203   0022EA                     i2u516_41:
  8204   0022EA  0E01               	movlw	1
  8205   0022EC  EF79  F011         	goto	i2u517_40
  8206   0022F0                     i2u516_40:
  8207   0022F0  0E00               	movlw	0
  8208   0022F2                     i2u517_40:
  8209   0022F2  6E03               	movwf	??i2_ADC_get_conversion_result^0,c
  8210   0022F4  6A04               	clrf	(??i2_ADC_get_conversion_result+1)^0,c
  8211                           
  8212                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8213                           ; Switch size 1, requested type "simple"
  8214                           ; Number of cases is 1, Range of values is 0 to 0
  8215                           ; switch strategies available:
  8216                           ; Name         Instructions Cycles
  8217                           ; simple_byte            4     3 (average)
  8218                           ;	Chosen strategy is simple_byte
  8219   0022F6  5004               	movf	(??i2_ADC_get_conversion_result+1)^0,w,c
  8220   0022F8  0A00               	xorlw	0	; case 0
  8221   0022FA  B4D8               	btfsc	status,2,c
  8222   0022FC  EF82  F011         	goto	i2l6891
  8223   002300  EF3D  F011         	goto	i2l5903
  8224   002304                     i2l6891:
  8225                           
  8226                           ; Switch size 1, requested type "simple"
  8227                           ; Number of cases is 2, Range of values is 0 to 1
  8228                           ; switch strategies available:
  8229                           ; Name         Instructions Cycles
  8230                           ; simple_byte            7     4 (average)
  8231                           ;	Chosen strategy is simple_byte
  8232   002304  5003               	movf	??i2_ADC_get_conversion_result^0,w,c
  8233   002306  0A00               	xorlw	0	; case 0
  8234   002308  B4D8               	btfsc	status,2,c
  8235   00230A  EF50  F011         	goto	i2l5905
  8236   00230E  0A01               	xorlw	1	; case 1
  8237   002310  B4D8               	btfsc	status,2,c
  8238   002312  EF3D  F011         	goto	i2l5903
  8239   002316  EF3D  F011         	goto	i2l5903
  8240   00231A                     i2l466:
  8241   00231A  0012               	return		;funcret
  8242   00231C                     __end_ofi2_ADC_get_conversion_result:
  8243                           	callstack 0
  8244                           
  8245 ;; *************** function _RB4_ISR *****************
  8246 ;; Defined at:
  8247 ;;		line 214 in file "MCAL/Interrupt/EXT_interrupts/MCAL_EXTI.c"
  8248 ;; Parameters:    Size  Location     Type
  8249 ;;  mode            1    wreg     unsigned char 
  8250 ;; Auto vars:     Size  Location     Type
  8251 ;;  mode            1    0[COMRAM] unsigned char 
  8252 ;; Return value:  Size  Location     Type
  8253 ;;                  1    wreg      void 
  8254 ;; Registers used:
  8255 ;;		wreg, status,2, status,0
  8256 ;; Tracked objects:
  8257 ;;		On entry : 0/0
  8258 ;;		On exit  : 0/0
  8259 ;;		Unchanged: 0/0
  8260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8262 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8264 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8265 ;;Total ram usage:        1 bytes
  8266 ;; Hardware stack levels used: 1
  8267 ;; This function calls:
  8268 ;;		Nothing
  8269 ;; This function is called by:
  8270 ;;		_InterruptManagerHigh
  8271 ;; This function uses a non-reentrant model
  8272 ;;
  8273                           
  8274                           	psect	text59
  8275   00314E                     __ptext59:
  8276                           	callstack 0
  8277   00314E                     _RB4_ISR:
  8278                           	callstack 19
  8279                           
  8280                           ;incstack = 0
  8281                           ;RB4_ISR@mode stored from wreg
  8282   00314E  6E01               	movwf	RB4_ISR@mode^0,c
  8283   003150                     
  8284                           ;MCAL/Interrupt/EXT_interrupts/MCAL_EXTI.c: 214: void RB4_ISR(uint8_t mode);MCAL/Interru
      +                          pt/EXT_interrupts/MCAL_EXTI.c: 215: {;MCAL/Interrupt/EXT_interrupts/MCAL_EXTI.c: 217:   
      +                            (INTCONbits.RBIF = 0x00U);
  8285   003150  90F2               	bcf	242,0,c	;volatile
  8286   003152                     
  8287                           ;MCAL/Interrupt/EXT_interrupts/MCAL_EXTI.c: 222:     if (0x01U == mode)
  8288   003152  0401               	decf	RB4_ISR@mode^0,w,c
  8289   003154  A4D8               	btfss	status,2,c
  8290   003156  EFAF  F018         	goto	i2u111_41
  8291   00315A  EFB1  F018         	goto	i2u111_40
  8292   00315E                     i2u111_41:
  8293   00315E  EFB3  F018         	goto	i2l2695
  8294   003162                     i2u111_40:
  8295   003162  EFB3  F018         	goto	i2l734
  8296   003166                     i2l2695:
  8297   003166                     i2l734:
  8298   003166  0012               	return		;funcret
  8299   003168                     __end_of_RB4_ISR:
  8300                           	callstack 0
  8301                           
  8302 ;; *************** function _INT1_ISR *****************
  8303 ;; Defined at:
  8304 ;;		line 193 in file "MCAL/Interrupt/EXT_interrupts/MCAL_EXTI.c"
  8305 ;; Parameters:    Size  Location     Type
  8306 ;;		None
  8307 ;; Auto vars:     Size  Location     Type
  8308 ;;		None
  8309 ;; Return value:  Size  Location     Type
  8310 ;;                  1    wreg      void 
  8311 ;; Registers used:
  8312 ;;		None
  8313 ;; Tracked objects:
  8314 ;;		On entry : 0/0
  8315 ;;		On exit  : 0/0
  8316 ;;		Unchanged: 0/0
  8317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8322 ;;Total ram usage:        0 bytes
  8323 ;; Hardware stack levels used: 1
  8324 ;; This function calls:
  8325 ;;		Nothing
  8326 ;; This function is called by:
  8327 ;;		_InterruptManagerHigh
  8328 ;; This function uses a non-reentrant model
  8329 ;;
  8330                           
  8331                           	psect	text60
  8332   0031B6                     __ptext60:
  8333                           	callstack 0
  8334   0031B6                     _INT1_ISR:
  8335                           	callstack 19
  8336   0031B6                     
  8337                           ;MCAL/Interrupt/EXT_interrupts/MCAL_EXTI.c: 196:     (INTCON3bits.INT1IF = 0x00U);
  8338   0031B6  90F0               	bcf	240,0,c	;volatile
  8339   0031B8  0012               	return		;funcret
  8340   0031BA                     __end_of_INT1_ISR:
  8341                           	callstack 0
  8342                           
  8343 ;; *************** function _INT0_ISR *****************
  8344 ;; Defined at:
  8345 ;;		line 182 in file "MCAL/Interrupt/EXT_interrupts/MCAL_EXTI.c"
  8346 ;; Parameters:    Size  Location     Type
  8347 ;;		None
  8348 ;; Auto vars:     Size  Location     Type
  8349 ;;		None
  8350 ;; Return value:  Size  Location     Type
  8351 ;;                  1    wreg      void 
  8352 ;; Registers used:
  8353 ;;		None
  8354 ;; Tracked objects:
  8355 ;;		On entry : 0/0
  8356 ;;		On exit  : 0/0
  8357 ;;		Unchanged: 0/0
  8358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8363 ;;Total ram usage:        0 bytes
  8364 ;; Hardware stack levels used: 1
  8365 ;; This function calls:
  8366 ;;		Nothing
  8367 ;; This function is called by:
  8368 ;;		_InterruptManagerHigh
  8369 ;; This function uses a non-reentrant model
  8370 ;;
  8371                           
  8372                           	psect	text61
  8373   0031BA                     __ptext61:
  8374                           	callstack 0
  8375   0031BA                     _INT0_ISR:
  8376                           	callstack 19
  8377   0031BA                     
  8378                           ;MCAL/Interrupt/EXT_interrupts/MCAL_EXTI.c: 185:     (INTCONbits.INT0IF = 0x00U);
  8379   0031BA  92F2               	bcf	242,1,c	;volatile
  8380   0031BC  0012               	return		;funcret
  8381   0031BE                     __end_of_INT0_ISR:
  8382                           	callstack 0
  8383                           
  8384                           	psect	text62
  8385   000000                     __ptext62:
  8386                           	callstack 0
  8387   000000                     
  8388                           	psect	rparam
  8389   000000                     
  8390                           	psect	temp
  8391   000069                     btemp:
  8392                           	callstack 0
  8393   000069                     	ds	1
  8394   000000                     int$flags	set	btemp
  8395   000000                     wtemp8	set	btemp+1
  8396   000000                     ttemp5	set	btemp+1
  8397   000000                     ttemp6	set	btemp+4
  8398   000000                     ttemp7	set	btemp+8
  8399                           
  8400                           	psect	config
  8401                           
  8402                           ; Padding undefined space
  8403   300000                     	org	3145728
  8404   300000  FF                 	db	255
  8405                           
  8406                           ;Config register CONFIG1H @ 0x300001
  8407                           ;	Oscillator Selection bits
  8408                           ;	OSC = HS, HS oscillator
  8409                           ;	Fail-Safe Clock Monitor Enable bit
  8410                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8411                           ;	Internal/External Oscillator Switchover bit
  8412                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8413   300001                     	org	3145729
  8414   300001  02                 	db	2
  8415                           
  8416                           ;Config register CONFIG2L @ 0x300002
  8417                           ;	Power-up Timer Enable bit
  8418                           ;	PWRT = OFF, PWRT disabled
  8419                           ;	Brown-out Reset Enable bits
  8420                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  8421                           ;	Brown Out Reset Voltage bits
  8422                           ;	BORV = 1, 
  8423   300002                     	org	3145730
  8424   300002  09                 	db	9
  8425                           
  8426                           ;Config register CONFIG2H @ 0x300003
  8427                           ;	Watchdog Timer Enable bit
  8428                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8429                           ;	Watchdog Timer Postscale Select bits
  8430                           ;	WDTPS = 32768, 1:32768
  8431   300003                     	org	3145731
  8432   300003  1E                 	db	30
  8433                           
  8434                           ; Padding undefined space
  8435   300004                     	org	3145732
  8436   300004  FF                 	db	255
  8437                           
  8438                           ;Config register CONFIG3H @ 0x300005
  8439                           ;	CCP2 MUX bit
  8440                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  8441                           ;	PORTB A/D Enable bit
  8442                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8443                           ;	Low-Power Timer1 Oscillator Enable bit
  8444                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8445                           ;	MCLR Pin Enable bit
  8446                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8447   300005                     	org	3145733
  8448   300005  81                 	db	129
  8449                           
  8450                           ;Config register CONFIG4L @ 0x300006
  8451                           ;	Stack Full/Underflow Reset Enable bit
  8452                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8453                           ;	Single-Supply ICSP Enable bit
  8454                           ;	LVP = OFF, Single-Supply ICSP disabled
  8455                           ;	Extended Instruction Set Enable bit
  8456                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8457                           ;	Background Debugger Enable bit
  8458                           ;	DEBUG = 0x1, unprogrammed default
  8459   300006                     	org	3145734
  8460   300006  81                 	db	129
  8461                           
  8462                           ; Padding undefined space
  8463   300007                     	org	3145735
  8464   300007  FF                 	db	255
  8465                           
  8466                           ;Config register CONFIG5L @ 0x300008
  8467                           ;	Code Protection bit
  8468                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  8469                           ;	Code Protection bit
  8470                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  8471                           ;	Code Protection bit
  8472                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  8473                           ;	Code Protection bit
  8474                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  8475   300008                     	org	3145736
  8476   300008  0F                 	db	15
  8477                           
  8478                           ;Config register CONFIG5H @ 0x300009
  8479                           ;	Boot Block Code Protection bit
  8480                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8481                           ;	Data EEPROM Code Protection bit
  8482                           ;	CPD = OFF, Data EEPROM not code-protected
  8483   300009                     	org	3145737
  8484   300009  C0                 	db	192
  8485                           
  8486                           ;Config register CONFIG6L @ 0x30000A
  8487                           ;	Write Protection bit
  8488                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  8489                           ;	Write Protection bit
  8490                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  8491                           ;	Write Protection bit
  8492                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  8493                           ;	Write Protection bit
  8494                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  8495   30000A                     	org	3145738
  8496   30000A  0F                 	db	15
  8497                           
  8498                           ;Config register CONFIG6H @ 0x30000B
  8499                           ;	Configuration Register Write Protection bit
  8500                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8501                           ;	Boot Block Write Protection bit
  8502                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  8503                           ;	Data EEPROM Write Protection bit
  8504                           ;	WRTD = OFF, Data EEPROM not write-protected
  8505   30000B                     	org	3145739
  8506   30000B  E0                 	db	224
  8507                           
  8508                           ;Config register CONFIG7L @ 0x30000C
  8509                           ;	Table Read Protection bit
  8510                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  8511                           ;	Table Read Protection bit
  8512                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8513                           ;	Table Read Protection bit
  8514                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  8515                           ;	Table Read Protection bit
  8516                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  8517   30000C                     	org	3145740
  8518   30000C  0F                 	db	15
  8519                           
  8520                           ;Config register CONFIG7H @ 0x30000D
  8521                           ;	Boot Block Table Read Protection bit
  8522                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8523   30000D                     	org	3145741
  8524   30000D  40                 	db	64
  8525                           tosu	equ	0xFFF
  8526                           tosh	equ	0xFFE
  8527                           tosl	equ	0xFFD
  8528                           stkptr	equ	0xFFC
  8529                           pclatu	equ	0xFFB
  8530                           pclath	equ	0xFFA
  8531                           pcl	equ	0xFF9
  8532                           tblptru	equ	0xFF8
  8533                           tblptrh	equ	0xFF7
  8534                           tblptrl	equ	0xFF6
  8535                           tablat	equ	0xFF5
  8536                           prodh	equ	0xFF4
  8537                           prodl	equ	0xFF3
  8538                           indf0	equ	0xFEF
  8539                           postinc0	equ	0xFEE
  8540                           postdec0	equ	0xFED
  8541                           preinc0	equ	0xFEC
  8542                           plusw0	equ	0xFEB
  8543                           fsr0h	equ	0xFEA
  8544                           fsr0l	equ	0xFE9
  8545                           wreg	equ	0xFE8
  8546                           indf1	equ	0xFE7
  8547                           postinc1	equ	0xFE6
  8548                           postdec1	equ	0xFE5
  8549                           preinc1	equ	0xFE4
  8550                           plusw1	equ	0xFE3
  8551                           fsr1h	equ	0xFE2
  8552                           fsr1l	equ	0xFE1
  8553                           bsr	equ	0xFE0
  8554                           indf2	equ	0xFDF
  8555                           postinc2	equ	0xFDE
  8556                           postdec2	equ	0xFDD
  8557                           preinc2	equ	0xFDC
  8558                           plusw2	equ	0xFDB
  8559                           fsr2h	equ	0xFDA
  8560                           fsr2l	equ	0xFD9
  8561                           status	equ	0xFD8

Data Sizes:
    Strings     64
    Constant    0
    Data        70
    BSS         76
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     58     104
    BANK0           128     25     127
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adc_interrupt_handler(), i2_adc_interrupt_handler(), 

    ADC_get_conversion_result@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc(BANK0[7]), 

    ADC_get_conversion_result@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adc_interrupt_handler(), 

    ADC_get_conversion_result@result	PTR unsigned short  size(1) Largest target is 2
		 -> adc_res(COMRAM[2]), 

    ADC_init@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc(BANK0[7]), 

    ADC_init@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adc_interrupt_handler(), 

    adc_input_channel_port_cfg@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc(BANK0[7]), 

    adc_input_channel_port_cfg@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adc_interrupt_handler(), 

    ADC_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> adc_interrupt_handler(), i2_adc_interrupt_handler(), NULL(), 

    ADC_select_channel@_adc	PTR struct . size(1) Largest target is 7
		 -> adc(BANK0[7]), 

    ADC_select_channel@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adc_interrupt_handler(), 

    adc_set_result_format@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc(BANK0[7]), 

    adc_set_result_format@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adc_interrupt_handler(), 

    adc_set_voltage_ref@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc(BANK0[7]), 

    adc_set_voltage_ref@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adc_interrupt_handler(), 

    ADC_start_conversion@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc(BANK0[7]), 

    ADC_start_conversion_interrupt@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc(BANK0[7]), 

    buzzer_init@_buzzer	PTR const struct . size(1) Largest target is 1
		 -> buzzer(COMRAM[1]), 

    buzzer_turn_off@_buzzer	PTR const struct . size(1) Largest target is 1
		 -> buzzer(COMRAM[1]), 

    buzzer_turn_on@_buzzer	PTR const struct . size(1) Largest target is 1
		 -> buzzer(COMRAM[1]), 

    convert_uint16_to_string@str	PTR unsigned char  size(1) Largest target is 7
		 -> adc_res_txt(BANK0[7]), 

    dc_motor_init@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> motor_1(COMRAM[2]), motor_2(COMRAM[2]), 

    dc_motor_move_CW@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> motor_1(COMRAM[2]), motor_2(COMRAM[2]), 

    dc_motor_stop@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> motor_1(COMRAM[2]), motor_2(COMRAM[2]), 

    EXTI_INTx_clear_flag@int_obj$EXTI_Handler	PTR FTN()void  size(2) Largest target is 0

    EXTI_INTx_disable@int_obj$EXTI_Handler	PTR FTN()void  size(2) Largest target is 0

    EXTI_INTx_edge_init@int_obj$EXTI_Handler	PTR FTN()void  size(2) Largest target is 0

    EXTI_INTx_enable@int_obj$EXTI_Handler	PTR FTN()void  size(2) Largest target is 0

    EXTI_INTx_pin_init@int_obj$EXTI_Handler	PTR FTN()void  size(2) Largest target is 0

    EXTI_INTx_priority_init@int_obj$EXTI_Handler	PTR FTN()void  size(2) Largest target is 0

    EXTI_INTx_setInterruptHandler@int_obj$EXTI_Handler	PTR FTN()void  size(2) Largest target is 0

    EXTI_RBx_pin_init@int_obj$.$EXTI_HIGH_Handler	PTR FTN()void  size(2) Largest target is 0

    EXTI_RBx_pin_init@int_obj$.$EXTI_LOW_Handler	PTR FTN()void  size(2) Largest target is 0

    EXTI_RBx_priority_init@int_obj$.$EXTI_HIGH_Handler	PTR FTN()void  size(2) Largest target is 0

    EXTI_RBx_priority_init@int_obj$.$EXTI_LOW_Handler	PTR FTN()void  size(2) Largest target is 0

    EXTI_RBx_setInterruptHandler@int_obj$.$EXTI_HIGH_Handler	PTR FTN()void  size(2) Largest target is 0

    EXTI_RBx_setInterruptHandler@int_obj$.$EXTI_LOW_Handler	PTR FTN()void  size(2) Largest target is 0

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_init@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> buzzer(COMRAM[1]), lcd_4bits(BANK0[6]), lcd_4bits$lcd_data_pins(BANK0[4]), led_init@led_pin_config(COMRAM[1]), 
		 -> led_turn_OFF@led_pin_config(COMRAM[1]), led_turn_ON@led_pin_config(COMRAM[1]), motor_1(COMRAM[2]), motor_1$motor_pin(COMRAM[2]), 
		 -> motor_2(COMRAM[2]), motor_2$motor_pin(COMRAM[2]), 

    gpio_pin_initialize@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> buzzer(COMRAM[1]), lcd_4bits(BANK0[6]), lcd_4bits$lcd_data_pins(BANK0[4]), led_init@led_pin_config(COMRAM[1]), 
		 -> led_turn_OFF@led_pin_config(COMRAM[1]), led_turn_ON@led_pin_config(COMRAM[1]), motor_1(COMRAM[2]), motor_1$motor_pin(COMRAM[2]), 
		 -> motor_2(COMRAM[2]), motor_2$motor_pin(COMRAM[2]), 

    gpio_pin_toggle_logic@_pin_config	PTR const struct . size(1) Largest target is 1
		 -> led_TOGGLE@led_pin_config(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> buzzer(COMRAM[1]), lcd_4bits(BANK0[6]), lcd_4bits$lcd_data_pins(BANK0[4]), led_init@led_pin_config(COMRAM[1]), 
		 -> led_turn_OFF@led_pin_config(COMRAM[1]), led_turn_ON@led_pin_config(COMRAM[1]), motor_1(COMRAM[2]), motor_1$motor_pin(COMRAM[2]), 
		 -> motor_2(COMRAM[2]), motor_2$motor_pin(COMRAM[2]), 

    INT0_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlllll[1]), LATB(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), 
		 -> LATE(BITBIGSFRllllh[1]), 

    lcd_4bit_initialize@_lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4bits(BANK0[6]), 

    lcd_4bit_send_char_data@_lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4bits(BANK0[6]), 

    lcd_4bit_send_command@_lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4bits(BANK0[6]), 

    lcd_4bit_send_enable_signal@_lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4bits(BANK0[6]), 

    lcd_4bit_send_string@_lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4bits(BANK0[6]), 

    lcd_4bit_send_string@str	PTR unsigned char  size(2) Largest target is 13
		 -> adc_res_txt(BANK0[7]), STR_1(CODE[13]), STR_2(CODE[12]), STR_3(CODE[12]), 
		 -> STR_4(CODE[12]), STR_5(CODE[12]), 

    lcd_4bit_send_string_pos@_lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4bits(BANK0[6]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 13
		 -> adc_res_txt(BANK0[7]), STR_1(CODE[13]), STR_2(CODE[12]), STR_3(CODE[12]), 
		 -> STR_4(CODE[12]), STR_5(CODE[12]), 

    lcd_4bit_set_cursor@_lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4bits(BANK0[6]), 

    lcd_send_4bits@_lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4bits(BANK0[6]), 

    led_init@led	PTR const struct . size(1) Largest target is 1
		 -> green_led(COMRAM[1]), red_led(COMRAM[1]), 

    led_TOGGLE@led	PTR const struct . size(1) Largest target is 1
		 -> red_led(COMRAM[1]), 

    led_turn_OFF@led	PTR const struct . size(1) Largest target is 1
		 -> green_led(COMRAM[1]), 

    led_turn_ON@led	PTR const struct . size(1) Largest target is 1
		 -> green_led(COMRAM[1]), 

    memset@dest	PTR void  size(1) Largest target is 7
		 -> adc_res_txt(BANK0[7]), 

    memset@p	PTR unsigned char  size(1) Largest target is 7
		 -> adc_res_txt(BANK0[7]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), 
		 -> PORTE(BITBIGSFRlllll[1]), 

    RB4_INTERRUPT_HIGH_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_INTERRUPT_LOW_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_INTERRUPT_HIGH_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_INTERRUPT_LOW_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_INTERRUPT_HIGH_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_INTERRUPT_LOW_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_INTERRUPT_HIGH_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_INTERRUPT_LOW_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1482$EXTI_Handler	PTR FTN()void  size(2) Largest target is 0

    S1525$EXTI_HIGH_Handler	PTR FTN()void  size(2) Largest target is 0

    S1525$EXTI_LOW_Handler	PTR FTN()void  size(2) Largest target is 0

    S2623$buffer	PTR unsigned char  size(2) Largest target is 0

    S2623$source	PTR const unsigned char  size(2) Largest target is 0

    S96$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adc_interrupt_handler(), 

    sp__memset	PTR void  size(1) Largest target is 7
		 -> adc_res_txt(BANK0[7]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_6(CODE[3]), STR_7(CODE[3]), STR_8(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 7
		 -> adc_res_txt(BANK0[7]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 12
		 -> intro_msg@control_txt(BANK0[8]), intro_msg@temp_txt(BANK0[12]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 12
		 -> intro_msg@control_txt(BANK0[8]), intro_msg@temp_txt(BANK0[12]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlllll[1]), TRISB(ABS[1]), TRISC(ABS[1]), TRISD(ABS[1]), 
		 -> TRISE(ABS[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_6(CODE[3]), STR_7(CODE[3]), STR_8(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_6(CODE[3]), STR_7(CODE[3]), STR_8(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_6(CODE[3]), STR_7(CODE[3]), STR_8(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _led_turn_ON->_gpio_pin_initialize
    _led_turn_OFF->_gpio_pin_initialize
    _intro_msg->_lcd_4bit_set_cursor
    _dc_motor_stop->_gpio_pin_write_logic
    _dc_motor_move_CW->_gpio_pin_write_logic
    _danger_msg->_lcd_4bit_send_string_pos
    _led_TOGGLE->_gpio_pin_toggle_logic
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_string->_lcd_4bit_send_char_data
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _buzzer_turn_on->_gpio_pin_write_logic
    _buzzer_turn_off->_gpio_pin_write_logic
    _convert_uint16_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _application_initialize->_ecu_layer_intialize
    _mcal_layer_intialize->_ADC_init
    _ADC_init->_adc_input_channel_port_cfg
    _ADC_init->_adc_set_result_format
    _ADC_init->_adc_set_voltage_ref
    _ecu_layer_intialize->_lcd_4bit_initialize
    _led_init->_gpio_pin_initialize
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _dc_motor_init->_gpio_pin_initialize
    _buzzer_init->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic
    ___fltol->___flmul
    ___flmul->___xxtofl
    _ADC_start_conversion_interrupt->_ADC_select_channel
    _ADC_select_channel->_adc_input_channel_port_cfg

Critical Paths under _InterruptManagerLow in COMRAM

    _adc_interrupt_handler->_ADC_get_conversion_result

Critical Paths under _InterruptManagerHigh in COMRAM

    i2_adc_interrupt_handler->i2_ADC_get_conversion_result

Critical Paths under _main in BANK0

    _main->_intro_msg
    _convert_uint16_to_string->_sprintf
    ___fltol->___flmul

Critical Paths under _InterruptManagerLow in BANK0

    None.

Critical Paths under _InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManagerLow in BANK1

    None.

Critical Paths under _InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerLow in BANK2

    None.

Critical Paths under _InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerLow in BANK3

    None.

Critical Paths under _InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerLow in BANK4

    None.

Critical Paths under _InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerLow in BANK5

    None.

Critical Paths under _InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManagerLow in BANK6

    None.

Critical Paths under _InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManagerLow in BANK7

    None.

Critical Paths under _InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManagerLow in BANK8

    None.

Critical Paths under _InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManagerLow in BANK9

    None.

Critical Paths under _InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManagerLow in BANK10

    None.

Critical Paths under _InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManagerLow in BANK11

    None.

Critical Paths under _InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManagerLow in BANK12

    None.

Critical Paths under _InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManagerLow in BANK13

    None.

Critical Paths under _InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManagerLow in BANK14

    None.

Critical Paths under _InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManagerLow in BANK15

    None.

Critical Paths under _InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  239302
                                             23 BANK0      2     2      0
     _ADC_start_conversion_interrupt
                            ___flmul
                            ___fltol
                            ___lwdiv
                           ___xxtofl
             _application_initialize
           _convert_uint16_to_string
                         _danger_msg
                   _dc_motor_move_CW
                      _dc_motor_stop
                          _intro_msg
           _lcd_4bit_send_string_pos
                       _led_turn_OFF
                        _led_turn_ON
 ---------------------------------------------------------------------------------
 (1) _led_turn_ON                                          4     3      1   11903
                                             33 COMRAM     4     3      1
                _gpio_pin_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _led_turn_OFF                                         4     3      1   11813
                                             33 COMRAM     4     3      1
                _gpio_pin_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _intro_msg                                           25    25      0   56361
                                             46 COMRAM     2     2      0
                                              0 BANK0     23    23      0
            _lcd_4bit_send_char_data
              _lcd_4bit_send_command
                _lcd_4bit_set_cursor
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2     310
                                             22 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _dc_motor_stop                                        2     1      1    5163
                                             30 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_CW                                     2     1      1    5163
                                             30 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _danger_msg                                           3     3      0   50334
                                             52 COMRAM     3     3      0
                    _buzzer_turn_off
                     _buzzer_turn_on
           _lcd_4bit_send_string_pos
                         _led_TOGGLE
 ---------------------------------------------------------------------------------
 (2) _led_TOGGLE                                           4     3      1     618
                                             28 COMRAM     4     3      1
              _gpio_pin_toggle_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_toggle_logic                                6     5      1     188
                                             22 COMRAM     6     5      1
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             6     1      5   39766
                                             46 COMRAM     6     1      5
               _lcd_4bit_send_string
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  6     3      3   20136
                                             40 COMRAM     6     3      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_string                                 4     1      3   17241
                                             40 COMRAM     4     1      3
            _lcd_4bit_send_char_data
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_char_data                              3     1      2   16894
                                             37 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (2) _buzzer_turn_on                                       2     1      1    4949
                                             30 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _buzzer_turn_off                                      2     1      1    4949
                                             30 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _convert_uint16_to_string                             4     1      3    5838
                                             53 COMRAM     4     1      3
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    4717
                                             47 COMRAM     6     0      6
                                              0 BANK0     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    3871
                                             43 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3    3410
                                             32 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     957
                                             22 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             28 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                             22 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                             22 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     1      5     780
                                             22 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               1     1      0   48016
                                             45 COMRAM     1     1      0
                _ecu_layer_intialize
               _mcal_layer_intialize
 ---------------------------------------------------------------------------------
 (2) _mcal_layer_intialize                                 1     1      0     927
                                             28 COMRAM     1     1      0
                           _ADC_init
 ---------------------------------------------------------------------------------
 (3) _ADC_init                                             3     2      1     890
                                             25 COMRAM     3     2      1
         _adc_input_channel_port_cfg
              _adc_set_result_format
                _adc_set_voltage_ref
 ---------------------------------------------------------------------------------
 (4) _adc_set_voltage_ref                                  3     2      1     121
                                             22 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (4) _adc_set_result_format                                3     2      1     121
                                             22 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_intialize                                  1     1      0   47049
                                             44 COMRAM     1     1      0
                        _buzzer_init
                      _dc_motor_init
                _lcd_4bit_initialize
                           _led_init
 ---------------------------------------------------------------------------------
 (3) _led_init                                             4     3      1    7112
                                             33 COMRAM     4     3      1
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_initialize                                  4     3      1   26011
                                             40 COMRAM     4     3      1
                _gpio_pin_initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                3     1      2   18694
                                             37 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       7     5      2    5898
                                             30 COMRAM     7     5      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          2     1      1    5219
                                             30 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _dc_motor_init                                        3     2      1    7030
                                             33 COMRAM     3     2      1
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _buzzer_init                                          2     1      1    6844
                                             33 COMRAM     2     1      1
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_initialize                                  3     2      1    6652
                                             30 COMRAM     3     2      1
            _gpio_pin_direction_init
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 8     6      2    4757
                                             22 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_init                              7     6      1     617
                                             22 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                             22 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     314
                                             22 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             48 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    2513
                                             36 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_start_conversion_interrupt                       3     1      2    1358
                                             29 COMRAM     3     1      2
                 _ADC_select_channel
               _ADC_start_conversion
 ---------------------------------------------------------------------------------
 (2) _ADC_start_conversion                                 2     1      1     248
                                             22 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _ADC_select_channel                                   4     2      2     763
                                             25 COMRAM     4     2      2
         _adc_input_channel_port_cfg
 ---------------------------------------------------------------------------------
 (4) _adc_input_channel_port_cfg                           3     2      1     211
                                             22 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _InterruptManagerLow                                  7     7      0     583
                                             15 COMRAM     7     7      0
                           _INT2_ISR
                       _INTI_ADC_ISR
 ---------------------------------------------------------------------------------
 (8) _INTI_ADC_ISR                                         0     0      0     583
                                NULL *
              _adc_interrupt_handler *
 ---------------------------------------------------------------------------------
 (9) _adc_interrupt_handler                                0     0      0     583
          _ADC_get_conversion_result
 ---------------------------------------------------------------------------------
 (10) _ADC_get_conversion_result                           6     4      2     583
                                              9 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (13) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptManagerHigh                                4     4      0     299
                                              5 COMRAM     4     4      0
                           _INT0_ISR
                           _INT1_ISR
                            _RB4_ISR
                     i2_INTI_ADC_ISR
 ---------------------------------------------------------------------------------
 (12) i2_INTI_ADC_ISR                                      0     0      0     269
                                NULL *
            i2_adc_interrupt_handler *
 ---------------------------------------------------------------------------------
 (13) i2_adc_interrupt_handler                             0     0      0     269
        i2_ADC_get_conversion_result
 ---------------------------------------------------------------------------------
 (14) i2_ADC_get_conversion_result                         6     4      2     269
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (13) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _RB4_ISR                                             1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_start_conversion_interrupt
     _ADC_select_channel
       _adc_input_channel_port_cfg
     _ADC_start_conversion
   ___flmul
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___lwdiv
   ___xxtofl
   _application_initialize
     _ecu_layer_intialize
       _buzzer_init
         _gpio_pin_initialize
           _gpio_pin_direction_init
           _gpio_pin_write_logic
       _dc_motor_init
         _gpio_pin_initialize
       _lcd_4bit_initialize
         _gpio_pin_initialize
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_4bit_send_enable_signal
             _gpio_pin_write_logic
           _lcd_send_4bits
             _gpio_pin_write_logic
       _led_init
         _gpio_pin_initialize
     _mcal_layer_intialize
       _ADC_init
         _adc_input_channel_port_cfg
         _adc_set_result_format
         _adc_set_voltage_ref
   _convert_uint16_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _danger_msg
     _buzzer_turn_off
       _gpio_pin_write_logic
     _buzzer_turn_on
       _gpio_pin_write_logic
     _lcd_4bit_send_string_pos
       _lcd_4bit_send_string
         _lcd_4bit_send_char_data
           _gpio_pin_write_logic
           _lcd_4bit_send_enable_signal
           _lcd_send_4bits
       _lcd_4bit_set_cursor
         _lcd_4bit_send_command
     _led_TOGGLE
       _gpio_pin_toggle_logic
   _dc_motor_move_CW
     _gpio_pin_write_logic
   _dc_motor_stop
     _gpio_pin_write_logic
   _intro_msg
     _lcd_4bit_send_char_data
     _lcd_4bit_send_command
     _lcd_4bit_set_cursor
     _strlen
   _lcd_4bit_send_string_pos
   _led_turn_OFF
     _gpio_pin_initialize
     _gpio_pin_write_logic
   _led_turn_ON
     _gpio_pin_initialize
     _gpio_pin_write_logic

 _InterruptManagerLow (ROOT)
   _INT2_ISR
   _INTI_ADC_ISR
     NULL(Fake) *
     _adc_interrupt_handler *
       _ADC_get_conversion_result

 _InterruptManagerHigh (ROOT)
   _INT0_ISR
   _INT1_ISR
   _RB4_ISR
   i2_INTI_ADC_ISR
     NULL(Fake) *
     i2_adc_interrupt_handler *
       i2_ADC_get_conversion_result

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      44        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     19      7F       5       99.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     3A      68       1       82.5%
BITBIGSFRllh        20      0       0      40        0.0%
BITBIGSFRhlhl       1F      0       0      38        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRhllh        B      0       0      39        0.0%
BITBIGSFRlllhh       6      0       0      41        0.0%
BITBIGSFRllllh       4      0       0      42        0.0%
BITBIGSFRlllll       4      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E7      12        0.0%
DATA                 0      0      E7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Jan 30 20:04:37 2024

                       ?_lcd_send_4bits 001F                                      l71 162A  
                                    l81 318C                                      l97 1BE4  
                          ___awdiv@sign 001C                fp__adc_interrupt_handler 0000  
                                    bsr 0FE0                   ??_InterruptManagerLow 0010  
                                   l100 27A0                                     l212 2E8C  
                                   l303 2BC8                                     l207 29C4  
                                   l143 2EFC                                     l320 28EC  
                                   l153 2EC4                                     l138 2AA4  
                                   l306 3104                                     l229 253C  
                                   l326 2940                                     l422 1EFE  
                                   l503 2C88                                     l335 267C  
                                   l184 20A4                                     l512 2B0C  
                                   l344 2712                                     l441 3148  
                                   l505 2C8E                                     l521 2B68  
                                   l353 28B6                                     l329 261C  
                                   l506 2C94                                     l194 2C82  
                                   l338 26B2                                     l443 314C  
                                   l507 2CDE                                     l347 2862  
                                   l516 2B14                                     l428 1FC2  
                                   l189 2D3A                                     l438 2DCE  
                                   l614 2C26                                     l519 2B1C  
                                   l295 2D86                                     l607 282C  
                                   l481 2FD0                                     l385 2F6A  
                                   l574 1ACA                                     l593 1CF4  
                                   l499 2184                                     l963 30B4  
                                   l949 319A                                     l958 312A  
                                   l968 30DE                                     _adc 00B2  
                       ?_buzzer_turn_on 001F                                     _abs 2F6C  
                ??_InterruptManagerHigh 0006     __end_of_lcd_4bit_send_enable_signal 3106  
           _lcd_4bit_send_enable_signal 30E0                            ___awmod@sign 001C  
                                   tosl 0FFD                                     wreg 0FE8  
                          ?_led_turn_ON 0022         __end_ofi2_adc_interrupt_handler 31AA  
                          ___flmul@aexp 00E7                            ___flmul@bexp 00EC  
                          ___flmul@sign 00E6                            ___flmul@temp 00F1  
                          ___flmul@prod 00ED               ?_convert_uint16_to_string 0036  
          ?i2_ADC_get_conversion_result 0001               _ADC_get_conversion_result 2186  
                       __end_of_RB4_ISR 3168                            ___fltol@exp1 003A  
                                  l1202 23DE                                    ?_abs 001D  
                                  l1215 248E                                    l1602 142E  
                                  l1268 1DFA                                    l1462 2A30  
                                  l1703 2F86                                    l1640 193C  
                                  l1633 18E0                                    l1626 1848  
                                  l1706 2F9E                                    l1469 2A38  
                                  l1629 19A4                                    l4221 282A  
                                  l4213 27A2                                    l1718 25E6  
                                  l1655 2F34                                    l4215 27B6  
                                  l1735 302E                                    l1592 12FE  
                                  l1648 3000                                    l1585 1108  
                                  l1729 31BE                                    l4217 27D6  
                                  l1594 1376                                    l1595 1364  
                                  l4219 27DE                                    l1589 146C  
                                  l4413 2FD2                                    l1693 17F0  
                                  l6101 1B96                                    l6111 2FA0  
                                  l4415 2FDA                                    l6031 2F10  
                                  l6103 1BBC                                    l6041 2D9C  
                                  l6113 2FB0                                    l4417 2FE4  
                                  l6033 2F18                                    l6201 2738  
                                  l6105 1BD2                                    l6043 2DA4  
                                  l6115 2FB8                                    l5403 1CC8  
                                  l4419 2FE6                                    l1699 2E0E  
                                  l6035 2F28                                    l6027 2EFE  
                                  l6131 2D84                                    l6123 2D3C  
                                  l6211 2786                                    l6203 2740  
                                  l6107 1BE2                                    l6045 2DB2  
                                  l6053 312C                                    l6117 2FC4  
                                  l6301 113C                                    l5421 1A38  
                                  l5413 19A6                                    l5405 1CF2  
                                  l5501 23BE                                    l6029 2F08  
                                  l6125 2D50                                    l6205 2758  
                                  l6141 2620                                    l6047 2DC4  
                                  l6039 2D88                                    l6055 3140  
                                  l6119 2FCE                                    l6311 118C  
                                  l6303 1148                                    l5415 19BA  
                                  l6063 3180                                    l5503 23CE  
                                  l5511 23E4                                    l6127 2D58  
                                  l6207 2774                                    l6143 2652  
                                  l6151 267A                                    l6135 25E8  
                                  l5601 20B6                                    l6049 2DCC  
                                  l6057 314A                                    l6321 11CE  
                                  l6313 1198                                    l6305 1152  
                                  l4801 1D6E                                    l5417 19DA  
                                  l5441 2B7C                                    l6065 3180  
                                  l5505 23D6                                    l5521 2414  
                                  l5513 23F2                                    l6129 2D70  
                                  l6209 277C                                    l6161 2EC2  
                                  l6081 1AF8                                    l6073 1ACC  
                                  l6145 2654                                    l6137 25F8  
                                  l6401 1472                                    l5611 20D4  
                                  l5603 20BC                                    l6331 1230  
                                  l6323 11DA                                    l6315 11A4  
                                  l6307 1168                                    l4811 1D9A  
                                  l5419 19E2                                    l5427 1A88  
                                  l5443 2B90                                    l6067 3184  
                                  l5531 245A                                    l5523 2426  
                                  l5515 23FA                                    l6171 2EFA  
                                  l6155 2E8E                                    l6091 1B56  
                                  l6083 1B0C                                    l6075 1ACC  
                                  l6147 2664                                    l6139 2614  
                                  l6411 150C                                    l6403 1476  
                                  l5621 20F2                                    l5613 20DA  
                                  l5605 20C2                                    l6341 12C6  
                                  l6333 123C                                    l6325 11EA  
                                  l6317 11B2                                    l6309 1174  
                                  l6261 1042                                    l4821 1DCA  
                                  l5429 1AC8                                    l5461 3102  
                                  l5453 30E0                                    l5445 2BA6  
                                  l5437 2B6A                                    l6069 318A  
                                  l5541 2486                                    l5533 2462  
                                  l5525 242E                                    l5517 23FE  
                                  l5509 23E0                                    l6165 2EC6  
                                  l6157 2E9E                                    l6093 1B66  
                                  l6085 1B1A                                    l6077 1ADE  
                                  l6181 26B6                                    l6149 266C  
                                  l6421 1568                                    l6413 151C  
                                  l6405 1492                                    l5615 20E0  
                                  l5607 20C8                                    l6351 131C  
                                  l6343 12E4                                    l6335 1258  
                                  l6327 1204                                    l6319 11BE  
                                  l6271 1080                                    l6263 1050  
                                  l4823 1DDA                                    l4807 1D86  
                                  l4831 29CE                                    l5391 1BE6  
                                  l5455 30E0                                    l5447 2BBC  
                                  l5439 2B6A                                    l5631 2C84  
                                  l5471 2336                                    l5535 2468  
                                  l5527 2436                                    l5519 240C  
                                  l5551 2568                                    l6167 2ED6  
                                  l6159 2EA6                                    l6095 1B70  
                                  l6087 1B1E                                    l6079 1AEE  
                                  l6183 26E8                                    l6191 2710  
                                  l6175 267E                                    l6431 15C4  
                                  l6423 1584                                    l6415 1534  
                                  l6407 149E                                    l5617 20E6  
                                  l5609 20CE                                    l5625 20F8  
                                  l6361 1386                                    l6353 1320  
                                  l6345 12EE                                    l6337 1282  
                                  l6329 1214                                    l6281 10B2  
                                  l6273 1090                                    l6265 105E  
                                  l4825 1DEA                                    l4817 1DAE  
                                  l4809 1D90                                    l4841 2A04  
                                  l4833 29E0                                    l5393 1BFA  
                                  l5457 30EC                                    l5449 2BC6  
                                  l5801 2094                                    l5641 2B08  
                                  l5481 235C                                    l5473 233A  
                                  l5465 231C                                    l5529 2444  
                                  l5537 246E                                    l5561 2F7A  
                                  l5553 2584                                    l5545 253E  
                                  l6169 2EDE                                    l6097 1B84  
                                  l6089 1B44                                    l6185 26EA  
                                  l6177 268E                                    l6441 160A  
                                  l6433 15CC                                    l6425 158C  
                                  l6417 154A                                    l6409 14F0  
                                  l5619 20EC                                    l6371 13E8  
                                  l6363 1392                                    l6355 132E  
                                  l6347 12FC                                    l6339 12B8  
                                  l6291 10F2                                    l6283 10C0  
                                  l6275 1096                                    l6267 1060  
                                  l4819 1DBA                                    l4843 2A1A  
                                  l4835 29E8                                    l4851 17F4  
                                  l5395 1C1A                                    l5459 30F4  
                                  l5803 20A2                                    l5635 2C9A  
                                  l5491 2392                                    l5483 236E  
                                  l5475 2348                                    l5467 2320  
                                  l5539 247E                                    l5555 25B6  
                                  l5547 254E                                    l5651 1632  
                                  l5563 2C28                                    l5811 295E  
                                  l5731 24BE                                    l6195 2714  
                                  l6099 1B92                                    l6187 26FA  
                                  l6179 26AA                                    l6443 1612  
                                  l6435 15E8                                    l6419 1560  
                                  l6427 1598                                    l6381 1450  
                                  l6373 13FC                                    l6365 13A0  
                                  l6357 135C                                    l6349 130E  
                                  l6293 10F8                                    l6285 10C2  
                                  l6277 10A6                                    l6269 1070  
                                  l4845 2A22                                    l4837 29F0  
                                  l4829 29C6                                    l4853 1804  
                                  l5397 1C22                                    l5573 2CE0  
                                  l5821 28B8                                    l5645 2B24  
                                  l5493 23A8                                    l5485 2376  
                                  l5477 2350                                    l5469 232E  
                                  l5549 255E                                    l5661 1678  
                                  l5653 1656                                    l5565 2C38  
                                  l5813 298C                                    l5733 24D4  
                                  l5741 2500                                    l5725 2490  
                                  l6197 2714                                    l6189 2702  
                                  l6445 1616                                    l6429 15AE  
                                  l6383 1452                                    l6375 1416  
                                  l6367 13CA                                    l6295 1118  
                                  l6287 10D2                                    l6279 10AC  
                                  l4791 1D20                                    l4847 2A24  
                                  l4839 29FE                                    l4871 18CA  
                                  l4863 1882                                    l4855 1812  
                                  l5399 1C72                                    l5591 2C24  
                                  l5583 2BCA                                    l5751 2A3A  
                                  l5575 2CF0                                    l5831 2924  
                                  l5823 28C8                                    l5495 23B0  
                                  l5487 237E                                    l5479 2354  
                                  l5559 2F6C                                    l5671 16EE  
                                  l5663 1696                                    l5655 165E  
                                  l5567 2C40                                    l5815 2990  
                                  l5807 2942                                    l5735 24EA  
                                  l5743 253A                                    l5727 24A0  
                                  l6199 2730                                    l6447 161E  
                                  l6439 15F4                                    l6377 1432  
                                  l6385 1458                                    l6369 13CE  
                                  l6297 1128                                    l6289 10E2  
                                  l4793 1D4A                                    l4785 1CF6  
                                  l4849 2A2A                                    l4881 194A  
                                  l4873 18D6                                    l4865 188A  
                                  l4857 1858                                    l5585 2BDA  
                                  l5841 3116                                    l5761 2AA2  
                                  l5753 2A4A                                    l5577 2CF8  
                                  l5833 2934                                    l5825 28E4  
                                  l5497 23B2                                    l5489 238C  
                                  l5681 176C                                    l5673 171E  
                                  l5665 16B4                                    l5657 166A  
                                  l5569 2C80                                    l5817 29C2  
                                  l5809 2956                                    l5729 24A8  
                                  l5921 2E68                                    l5595 20A6  
                                  l6387 145C                                    l6379 1442  
                                  l4795 1D4C                                    l4787 1D0C  
                                  l4891 1992                                    l4883 194C  
                                  l4875 1912                                    l4867 1896  
                                  l4859 186E                                    l5587 2BFA  
                                  l5843 311E                                    l5755 2A6A  
                                  l5579 2D38                                    l5827 28F0  
                                  l5835 293E                                    l5931 2F36  
                                  l5851 1EF6                                    l5499 23B8  
                                  l5683 177C                                    l5675 173A  
                                  l5667 16CC                                    l5691 17C0  
                                  l5659 166E                                    l5923 2E78  
                                  l5597 20AA                                    l4797 1D5C  
                                  l4893 1994                                    l4885 1950  
                                  l4877 191E                                    l4869 18C8  
                                  l5589 2C02                                    l5845 3128  
                                  l5757 2A86                                    l5781 2012  
                                  l5765 1FC4                                    l5829 2922  
                                  l5941 2F5E                                    l5933 2F3E  
                                  l5861 1F5E                                    l5853 1F00  
                                  l5685 178E                                    l5677 174C  
                                  l5669 16D6                                    l5925 2E8A  
                                  l5917 2E50                                    l6397 146E  
                                  l5599 20B0                                    l4799 1D60  
                                  l4887 1974                                    l4879 192C  
                                  l5839 3106                                    l5759 2A8E  
                                  l5791 2058                                    l5783 2020  
                                  l5775 1FF4                                    l5767 1FD8  
                                  l5935 2F46                                    l5871 1F84  
                                  l5863 1F60                                    l5855 1F52  
                                  l5687 17A8                                    l5679 175C  
                                  l5695 17CC                                    l5919 2E60  
                                  l6399 146E                                    l4889 1984  
                                  l5793 2064                                    l5785 202C  
                                  l5777 2000                                    l5769 1FE0  
                                  l5937 2F4E                                    l5929 2F36  
                                  l5881 1FBE                                    l5873 1F9E  
                                  l5865 1F62                                    l5857 1F5A  
                                  l5849 1EE2                                    l5945 318E  
                                  l5689 17AA                                    l5961 3022  
                                  l5795 2070                                    l5787 2046  
                                  l5779 2002                                    l5939 2F56  
                                  l5875 1FA0                                    l5867 1F64  
                                  l5859 1F5C                                    l5883 1FC0  
                                  l5947 318E                                    l5891 2DE8  
                                  l5971 2866                                    l5955 3002  
                                  l5797 207C                                    l5789 204C  
                                  l5877 1FAE                                    l5869 1F7E  
                                  l5949 3198                                    l5893 2E06  
                                  l5973 2898                                    l5965 282E  
                                  l5957 300A                                    l5799 2088  
                                  l5879 1FB6                                    l5887 2DD0  
                                  l5983 308C                                    l5975 289A  
                                  l5967 283E                                    l5959 300C  
                                  l6881 2CC8                                    l5889 2DD8  
                                  l5993 30B6                                    l5985 309C  
                                  l5977 28AA                                    l5969 285A  
                                  l6883 1CDC                                    l5995 30C6  
                                  l5987 30A4                                    l5979 28B4  
                                  l6885 1AB2                                    l5997 30CE  
                                  l5989 30B2                                    l6877 2514  
                                  l6887 2116                                    l6879 2B52  
                                  l5999 30DC                                    STR_1 1001  
                                  STR_2 101A                                    STR_3 1032  
                                  STR_4 1026                                    STR_5 100E  
                                  STR_6 103E                                    STR_7 103E  
                                  u3004 27FC                                    u3005 27F8  
                                  _LATA 0F89                                    _LATB 0F8A  
                                  _LATC 0F8B                                    _LATD 0F8C  
                                  _LATE 0F8D                                    u3210 3000  
                                  u3211 2FFC                                    u5000 2012  
                                  u5001 200E                                    u5010 2956  
                                  u5011 2952                                    u5100 1F7E  
                                  u5020 2984                                    u5101 1F7A  
                                  u5110 1F9E                                    u5030 29B2  
                                  u5111 1F9A                                    u5120 2E06  
                                  u5040 29C2                                    u5200 283E  
                                  u5121 2E02                                    u5041 29BE  
                                  u5201 283A                                    u5050 28C8  
                                  u5210 285A                                    u5051 28C4  
                                  u5027 297A                                    u5211 2856  
                                  u3700 1DDA                                    u4500 19DA  
                                  u5060 28E4                                    u3701 1DD6  
                                  u4501 19D6                                    u5061 28E0  
                                  u5037 29A8                                    u5301 1AD6  
                                  u3710 29E0                                    u5230 309C  
                                  u5310 1B44                                    u3711 29DC  
                                  u5231 3098                                    u5311 1B40  
                                  u3640 1D0C                                    u3720 29FE  
                                  u3800 193C                                    u5080 3116  
                                  u4600 23CE                                    u5240 30C6  
                                  u5400 2ED6                                    u3641 1D08  
                                  u3721 29FA                                    u3801 1938  
                                  u5081 3112                                    u4601 23CA  
                                  u5241 30C2                                    u5225 28A8  
                                  u5401 2ED2                                    u5321 1B4E  
                                  u3650 1D40                                    u3730 2A1A  
                                  u3810 194A                                    u4530 1A9E  
                                  u4514 1A00                                    u4450 1BFA  
                                  u5090 1EF6                                    u4610 23F2  
                                  u5330 1BBC                                    u5410 268E  
                                  u3731 2A16                                    u3811 1946  
                                  u4531 1A98                                    u4515 19FC  
                                  u4451 1BF6                                    u5075 2932  
                                  u5091 1EF2                                    u4611 23EE  
                                  u5227 28AA                                    u5331 1BB8  
                                  u5411 268A                                    u6107 1528  
                                  u5340 2FB0                                    u3660 1D6E  
                                  u3820 1984                                    u3740 1804  
                                  u4540 1AA0                                    u4524 1A56  
                                  u4460 1C1A                                    u4620 240C  
                                  u4700 25B6                                    u5180 2E60  
                                  u5420 26AA                                    u5341 2FAC  
                                  u3661 1D6A                                    u3821 1980  
                                  u3741 1800                                    u4525 1A52  
                                  u4461 1C16                                    u5077 2934  
                                  u4621 2408                                    u4701 25B2  
                                  u5181 2E5C                                    u6117 1B12  
                                  u5421 26A6                                    u5510 105E  
                                  u3670 1D82                                    u3830 1992  
                                  u3750 1812                                    u4550 232E  
                                  u4630 2426                                    u4710 2F7A  
                                  u5350 2D50                                    u5190 3022  
                                  u5511 105A                                    u3671 1D7E  
                                  u3655 1D36                                    u3831 198E  
                                  u3751 180E                                    u4551 232A  
                                  u4631 2422                                    u4711 2F76  
                                  u5351 2D4C                                    u5191 301E  
                                  u6127 1B8A                                    u5280 2D9C  
                                  u5600 12FC                                    u5520 1070  
                                  u3680 1DAA                                    u3760 186E  
                                  u4560 2348                                    u4640 2444  
                                  u4800 1656                                    u4720 2C38  
                                  u5360 25F8                                    u5281 2D98  
                                  u5601 12F8                                    u5521 106C  
                                  u3681 1DA6                                    u3761 186A  
                                  u4561 2344                                    u4641 2440  
                                  u4801 1652                                    u4721 2C34  
                                  u6137 1BC6                                    u5361 25F4  
                                  u5290 3140                                    u5610 131C  
                                  u5530 1080                                    u3690 1DCA  
                                  u3770 18C4                                    u4490 19BA  
                                  u4474 1C40                                    u4730 2CF0  
                                  u4570 236E                                    u4650 245A  
                                  u4810 1696                                    u5370 2614  
                                  u5291 313C                                    u5611 1318  
                                  u5531 107C                                    u3691 1DC6  
                                  u3771 18C0                                    u4491 19B6  
                                  u4475 1C3C                                    u4731 2CEC  
                                  u4571 236A                                    u4651 2456  
                                  u4811 1692                                    u6147 274A  
                                  u5435 26F8                                    u5371 2610  
                                  u5620 132E                                    u5540 10C0  
                                  u3780 190E                                    u4484 1C90  
                                  u4740 2BDA                                    u4580 238C  
                                  u4660 247E                                    u4820 16B4  
                                  u2980 27B6                                    u5621 132A  
                                  u5541 10BC                                    u3781 190A  
                                  u4485 1C8C                                    u4741 2BD6  
                                  u4581 2388                                    u4661 247A  
                                  u4821 16B0                                    u2981 27B2  
                                  u6157 2790                                    u5437 26FA  
                                  u5630 135C                                    u5550 10D2  
                                  u3790 192C                                    u4750 2BFA  
                                  u4590 23A8                                    u4670 254E  
                                  u4830 16EA                                    u2990 27D6  
                                  u5390 2E9E                                    u5631 1358  
                                  u5551 10CE                                    u3791 1928  
                                  u4751 2BF6                                    u6167 2018  
                                  u4591 23A4                                    u4671 254A  
                                  u4831 16E4                                    u2991 27D2  
                                  u5391 2E9A                                    u5640 1372  
                                  u5560 10E2                                    u4760 2CB4  
                                  u4680 255E                                    u4840 16EC  
                                  u5720 1560                                    u5641 136E  
                                  u5561 10DE                                    u6177 2032  
                                  u4761 2CAE                                    u4681 255A  
                                  u5385 2662                                    u5721 155C  
                                  u5650 1386                                    u5570 1118  
                                  u4770 2CB6                                    u4690 2584  
                                  u4850 174C                                    u5730 15AE  
                                  u5651 1382                                    u5571 1114  
                                  u6187 2048                                    u4691 2580  
                                  u4851 1748                                    u5387 2664  
                                  u5731 15AA                                    i1l84 317E  
                                  u5660 13A0                                    u5580 1128  
                                  u4780 2B3E                                    u4860 175C  
                                  u5740 15C4                                    u5661 139C  
                                  u5581 1124                                    u6197 30EE  
                                  u4781 2B38                                    u4861 1758  
                                  u5741 15C0                                    u5670 13E8  
                                  u5590 12A2                                    u4790 2B40  
                                  u4870 176C                                    u4950 24A0  
                                  u5750 160A                                    u5671 13E4  
                                  u4871 1768                                    u4951 249C  
                                  u5751 1606                                    u5680 1416  
                                  u4960 2A4A                                    u4880 177C  
                                  u5681 1412                                    u4961 2A46  
                                  u4881 1778                                    u5690 1450  
                                  u4970 2A6A                                    u4890 17BC  
                                  u5691 144C                                    u5595 1298  
                                  u4971 2A66                                    u4891 17B8  
                                  i2l84 31A8                                    u4980 2A86  
                                  u4981 2A82                                    u4990 1FD8  
                                  u4991 1FD4                    _lcd_4bit_send_string 2942  
         ??_lcd_4bit_send_enable_signal 0020                        ?_buzzer_turn_off 001F  
                                  abs@a 001D                                    _dbuf 00BF  
                                  _main 146E                  ?_adc_set_result_format 0017  
                                  _prec 003D                                    _temp 0067  
                                  fsr0h 0FEA                                    fsr1h 0FE2  
                                  indf0 0FEF                                    fsr2h 0FDA  
                                  fsr0l 0FE9                                    indf2 0FDF  
                                  fsr1l 0FE1                                    fsr2l 0FD9  
              ?_gpio_pin_direction_init 0017                                    btemp 0069  
                      led_turn_ON@F3066 005B                                    prodh 0FF4  
                                  prodl 0FF3                                    start 0096  
                         ?_led_turn_OFF 0022  __end_of_ADC_start_conversion_interrupt 2FD2  
        _ADC_start_conversion_interrupt 2FA0                        __end_of_ADC_init 1FC4  
                           led_init@led 0022                             led_init@ret 0024  
                           RB4_ISR@mode 0001               dc_motor_move_CW@_dc_motor 001F  
                          ___param_bank 0000                  ?_gpio_pin_toggle_logic 0017  
                 _lcd_4bit_send_command 2CE0            lcd_4bit_send_string_pos@_lcd 002F  
                                 ??_abs 001F                    _gpio_pin_write_logic 1BE6  
        lcd_4bit_send_string_pos@column 0031                        __end_of_INT0_ISR 31BE  
                      __end_of_INT1_ISR 31BA                        __end_of_INT2_ISR 31B6  
                         ___fltol@sign1 0039                                   ?_main 0001  
              ??_application_initialize 002E                         __end_of___awdiv 23E0  
                       __end_of___awmod 2490                         __end_of___flmul 146E  
                       __end_of___fltol 1DFC                         ___awdiv@divisor 0019  
     ADC_start_conversion_interrupt@ret 0020                  _INT0_INTERRUPT_HANDLER 0053  
                       __end_of___lwdiv 2A3A                                   i1l526 305C  
                                 i1l466 2254                                   i1l725 31B4  
                                 i1l940 0076                                   i2l526 308A  
                                 i2l721 31B8                                   i1l937 0056  
                                 i2l466 231A                                   i2l717 31BC  
                                 i2l734 3166                                   i2l922 1E2E  
                                 i2l931 1ECE                                   i2l924 1E4E  
                                 i2l926 1E7E                                   i2l928 1EAE  
                       ___awdiv@counter 001B                            vfpfcnvrt@fmt 0022  
                                 _PORTA 0F80                                   _PORTB 0F81  
                                 _PORTC 0F82                                   _PORTD 0F83  
                                 _PORTE 0F84                                   _TRISA 0F92  
                                 _TRISB 0F93                                   _TRISC 0F94  
                                 _TRISD 0F95                                   _TRISE 0F96  
             lcd_4bit_set_cursor@column 002B                       intro_msg@temp_txt 00E6  
                           _sys_on_flag 005D                       led_turn_OFF@F3071 005A  
                                 _flags 0057                                   _fputc 253E  
                                 _width 003B                                   _putch 31BE  
                 ?_lcd_4bit_send_string 0029           ??i2_ADC_get_conversion_result 0003  
                                 pclath 0FFA                                   pclatu 0FFB  
                                 tablat 0FF5                                   plusw1 0FE3  
                                 plusw2 0FDB                                   ttemp5 006A  
                                 ttemp6 006D                                   ttemp7 0071  
                                 status 0FD8                                   wtemp8 006A  
                       __end_of_sprintf 2F36                           ?_INTI_ADC_ISR 0001  
                        ??_led_turn_OFF 0023                            ?_buzzer_init 0022  
                       __initialization 2AA6                            __end_of_main 1632  
                 ?_gpio_pin_write_logic 0017                      intro_msg@l_counter 00FA  
                         _lat_registers 0096                                  ??_main 00FD  
             lcd_4bit_send_command@_lcd 0026                           __activetblptr 0003  
                             ??_RB4_ISR 0001                led_TOGGLE@led_pin_config 0020  
                                ?_fputc 0017                                  _ADRESH 0FC4  
                                _ADRESL 0FC3      ADC_start_conversion_interrupt@_adc 001E  
                      ___awdiv@dividend 0017                                  ?_putch 0001  
                      ??i2_INTI_ADC_ISR 0006                                  i1l2685 31B2  
                                i1l5701 2186                                  i1l5703 219A  
                                i1l6255 3030                                  i1l5705 21AA  
                                i1l6257 3032                                  i1l5707 21B2  
                                i1l5715 220E                                  i1l6259 3044  
                                i1l5709 21D8                                  i1l5717 2252  
                                i1l6711 0052                                  i1l6713 0064  
                                i1l6715 0072                                  i1l6707 0036  
                                i1l6709 0044                                  i2l2681 31B6  
                                i1l5953 3172                                  i2l2691 3152  
                                i2l2677 31BA                                  i2l6061 319C  
                                i2l2695 3166                                  i2l2689 3150  
                                i1l6889 223C                                  i2l5901 2276  
                                i2l6701 1EA8                                  i2l5903 227A  
                                i2l5911 22D6                                  i2l6391 305E  
                                i2l6703 1EBC                                  i2l5905 22A0  
                                i2l6393 3060                                  i2l6705 1ECA  
                                i2l6395 3072                                  i2l6681 1E0E  
                                i2l6691 1E5C                                  i2l6683 1E1C  
                                i2l6693 1E6A                                  i2l6685 1E2A  
                                i2l6695 1E78                                  i2l6687 1E3C  
                                i2l5897 2256                                  i2l6697 1E8C  
                                i2l6689 1E4A                                  i2l6891 2304  
                                i2l5899 2266                                  i2l6699 1E9A  
                         vfpfcnvrt@done 0025                          ??_INTI_ADC_ISR 0010  
                      __end_of___xxtofl 19A6        gpio_pin_toggle_logic@_pin_config 0017  
             _RB4_INTERRUPT_LOW_HANDLER 004B        __end_of_lcd_4bit_send_string_pos 2E8E  
              gpio_pin_toggle_logic@ret 001C               _RB7_INTERRUPT_LOW_HANDLER 003F  
                ?_lcd_4bit_send_command 0026                            vfprintf@cfmt 002F  
                      __end_of_led_init 2942         _adc_interrupt_handler$intlevel1 3172  
                 _adc_interrupt_handler 3168                               ??___awdiv 001B  
                             ??___awmod 001B                               ??___flmul 002D  
                             ??___fltol 0035                               ??___lwdiv 001B  
                                _memset 2FD2                         led_TOGGLE@F3076 0059  
                                _buzzer 0064                                  clear_0 2AEC  
                                clear_1 2AF8                        ___awdiv@quotient 001D  
                       ___awmod@divisor 0019                                  isa$std 0001  
                       ___awmod@counter 001B                                  _strlen 3002  
                         led_init@F3061 005C                       ?_dc_motor_move_CW 001F  
                                fputc@c 0017                            __pdataCOMRAM 0060  
                          __mediumconst 0000                                  tblptrh 0FF7  
                                tblptrl 0FF6                                  tblptru 0FF8  
                    ??_dc_motor_move_CW 0020                               ?_ADC_init 001A  
                                putch@c 0001                        __end_of_vfprintf 2E10  
               adc_set_voltage_ref@_adc 0017                  ??_lcd_4bit_send_string 002C  
                             ??_sprintf 0036             ?_adc_input_channel_port_cfg 0017  
                          ___xxtofl@arg 0021                            ___xxtofl@exp 0020  
           __end_of_adc_set_voltage_ref 2B6A                            ___xxtofl@val 0017  
                            __accesstop 0080                 __end_of__initialization 2AFE  
                             ?_INT0_ISR 0001                               ?_INT1_ISR 0001  
                             ?_INT2_ISR 0001                           ___rparam_used 0001  
                            ___fltol@f1 0031                        ??_lcd_send_4bits 0021  
               _lcd_4bit_send_char_data 2C28                  ??_gpio_pin_write_logic 0019  
                        __pcstackCOMRAM 0001                            __pidataBANK0 2E10  
                         __end_of_fputc 25E8                        ??_buzzer_turn_on 0020  
                         __end_of_putch 31C0               led_turn_ON@led_pin_config 0025  
              lcd_4bit_send_command@ret 0028                    __end_of_led_turn_OFF 2714  
                            ??_ADC_init 001B                          buzzer_init@ret 0023  
                       led_STATUS@F3082 0058              _RB6_INTERRUPT_HIGH_HANDLER 0045  
                               ??_fputc 001A                  intro_msg@l_counter_258 00FB  
               lcd_4bit_send_string@ret 002C                 lcd_4bit_send_string@str 002A  
        adc_input_channel_port_cfg@_adc 0017                 ??_adc_set_result_format 0018  
                               ??_putch 0017                              __pbssBANK0 00BF  
                            _danger_msg 2714                              ??_INT0_ISR 0001  
                            ??_INT1_ISR 0001                              ??_INT2_ISR 000A  
                _application_initialize 3180                              __pnvCOMRAM 0067  
               ??_gpio_pin_toggle_logic 0018      gpio_pin_direction_init@_pin_config 0017  
           __end_of_InterruptManagerLow 0096                  ?_adc_interrupt_handler 0001  
                         danger_msg@ret 0037                              _led_TOGGLE 282E  
           convert_uint16_to_string@ret 0039             convert_uint16_to_string@str 0038  
                               ?_memset 0017           ADC_get_conversion_result@_adc 000A  
       i2ADC_get_conversion_result@_adc 0001                                 ?_strlen 0017  
                  __end_of_INTI_ADC_ISR 305E                                 _RB4_ISR 314E  
                             ?___xxtofl 0017               ?_lcd_4bit_send_string_pos 002F  
                             ?_led_init 0022                          _tris_registers 00A0  
             ??_lcd_4bit_send_char_data 0028  lcd_4bit_initialize@l_data_pins_counter 002B  
                               __Hparam 0000                                 __Lparam 0000  
                   _ecu_layer_intialize 2F36                 i2_adc_interrupt_handler 319C  
            fp_i2_adc_interrupt_handler 0000                     _gpio_pin_initialize 2BCA  
                               ___awdiv 231C                                 ___awmod 23E0  
                               ___flmul 1042                                 ___fltol 1CF6  
                 buzzer_turn_on@_buzzer 001F                                 _adc_res 005E  
                               ___lwdiv 29C6                               ?_vfprintf 002C  
                          __psmallconst 1000                                 __pcinit 2AA6  
                               __ramtop 1000                                 __ptext0 146E  
                               __ptext1 25E8                                 __ptext2 267E  
                               __ptext3 1ACC                                 __ptext4 3002  
                               __ptext5 2E8E                                 __ptext6 2EC6  
                               __ptext7 2714                                 __ptext8 282E  
                               __ptext9 27A2                  _INT1_INTERRUPT_HANDLER 0051  
              _convert_uint16_to_string 2D3C                                 _red_led 0065  
                            ??___xxtofl 001B                      buzzer_turn_off@ret 0020  
                      ___awmod@dividend 0017                    ?_ecu_layer_intialize 0001  
                               _motor_1 0062                                 _motor_2 0060  
            __end_of_ADC_select_channel 2DD0                    ?_gpio_pin_initialize 001F  
                               _sprintf 2EFE                       __end_of_intro_msg 1BE6  
                        __pintcode_body 1DFC                              ??_led_init 0023  
                  end_of_initialization 2AFE                       lcd_send_4bits@ret 0025  
                           ?_danger_msg 0001                                 fputc@fp 0019  
                               memset@c 0018                                 memset@n 001A  
                               memset@p 001C                                 int_func 1DFC  
               ??_lcd_4bit_send_command 0028                           _dc_motor_init 2A3A  
                         _dc_motor_stop 2E8E                       __end_of_vfpfcnvrt 17F2  
             adc_set_result_format@_adc 0017                                 postdec1 0FE5  
                               postdec2 0FDD                                 postinc0 0FEE  
                               postinc1 0FE6                                 postinc2 0FDE  
                      vfpfcnvrt@convarg 0027                              ??_vfprintf 002F  
                           ?_led_TOGGLE 001D                                 strlen@a 0019  
                               strlen@s 0017                     _lcd_4bit_initialize 1FC4  
       __end_of_lcd_4bit_send_char_data 2C84                               _PORTBbits 0F81  
                 ??_ecu_layer_intialize 002D              lcd_4bit_send_char_data@ret 0028  
                         ___xxtofl@sign 001F     __end_ofi2_ADC_get_conversion_result 231C  
           i2_ADC_get_conversion_result 2256                   ??_gpio_pin_initialize 0020  
                 _ADC_interrupt_handler 0055                    ?_lcd_4bit_initialize 0029  
                           ___flmul@grs 00E8               ??i2_adc_interrupt_handler 0006  
             _RB5_INTERRUPT_LOW_HANDLER 0047                          ?_dc_motor_init 0022  
                          _led_turn_OFF 267E            __end_of_mcal_layer_intialize 319C  
                        ?_dc_motor_stop 001F                         led_turn_OFF@led 0022  
                       led_turn_OFF@ret 0024                     _lcd_4bit_set_cursor 2490  
                          ADC_init@_adc 001A            __end_of_ADC_start_conversion 314E  
           lcd_4bit_send_string_pos@ret 0034             lcd_4bit_send_string_pos@row 0030  
           lcd_4bit_send_string_pos@str 0032                 _gpio_pin_direction_init 19A6  
                           vfpfcnvrt@ap 0023                             vfpfcnvrt@cp 0026  
                           vfpfcnvrt@fp 0021                           __pidataCOMRAM 31AA  
             ADC_select_channel@channel 001B                          __end_of_memset 3002  
                     ??_buzzer_turn_off 0020                             _adc_res_txt 00DF  
                        __end_of_strlen 3030                           ??_led_turn_ON 0023  
                   start_initialization 2AA6      __end_of_adc_input_channel_port_cfg 2186  
            _adc_input_channel_port_cfg 20A6            ?_lcd_4bit_send_enable_signal 001F  
                  ?_lcd_4bit_set_cursor 0029           convert_uint16_to_string@value 0036  
                           __end_of_abs 2FA0                 ?_application_initialize 0001  
                 ??_lcd_4bit_initialize 002A           __end_of_adc_set_result_format 2CE0  
                dc_motor_stop@_dc_motor 001F                 ??_adc_interrupt_handler 0010  
                      dc_motor_init@ret 0024                            _INTI_ADC_ISR 3030  
         __end_of_gpio_pin_toggle_logic 282E                             vfprintf@fmt 002D  
       ADC_get_conversion_result@result 000B       i2ADC_get_conversion_result@result 0002  
                           __pdataBANK0 0080                          intro_msg@F3262 00AA  
                        intro_msg@F3259 0080                                ??_memset 001C  
              lcd_4bit_send_string@_lcd 0029                    intro_msg@control_txt 00F2  
                            memset@dest 0017            lcd_4bit_send_command@command 0027  
                ADC_select_channel@_adc 001A                        dc_motor_stop@ret 0020  
                              ??_strlen 0019                 lcd_4bit_set_cursor@_lcd 0029  
                              ?_RB4_ISR 0001                               ___flmul@a 0029  
                             ___flmul@b 0025                             __pbssCOMRAM 003B  
                 ??_lcd_4bit_set_cursor 002C                           __pcstackBANK0 00E6  
        __end_of_application_initialize 318E              _RB5_INTERRUPT_HIGH_HANDLER 0049  
                   __end_of_led_turn_ON 267E                         ??_dc_motor_init 0023  
                       ??_dc_motor_stop 0020                           ??_buzzer_init 0023  
                          intro_msg@ret 00FC                  ecu_layer_intialize@ret 002D  
          __end_of_InterruptManagerHigh 1EE2                        ___lwdiv@dividend 0017  
             ??_gpio_pin_direction_init 0018                               _lcd_4bits 00B9  
                             __pintcode 0008              ??_convert_uint16_to_string 0039  
            ?_ADC_get_conversion_result 000A         gpio_pin_write_logic@_pin_config 0017  
                              ?___awdiv 0017                                ?___awmod 0017  
                              ?___flmul 0025                                ?___fltol 0031  
                              ?___lwdiv 0017                             __pintcodelo 0018  
             gpio_pin_write_logic@logic 0018                  dc_motor_init@_dc_motor 0022  
                           __smallconst 1000                               _green_led 0066  
                  _mcal_layer_intialize 318E                                _ADC_init 1EE2  
                      ___lwdiv@quotient 001B                                ?_sprintf 0030  
                  _ADC_start_conversion 312C                       buzzer_turn_on@ret 0020  
                          ??_danger_msg 0035                                _INT0_ISR 31BA  
                              _INT1_ISR 31B6                                _INT2_ISR 31B2  
                             _intro_msg 1ACC              lcd_send_4bits@data_command 0020  
                      _dc_motor_move_CW 2EC6                                _IPR1bits 0F9F  
                              _PIE1bits 0F9D                      _ADC_select_channel 2D88  
                              i2u111_40 3162                                i2u111_41 315E  
         __end_of_lcd_4bit_send_command 2D3C                                i1u606_20 0044  
                              i1u606_21 0040                                i1u550_28 304A  
                              i1u607_20 0052                                i1u550_29 305C  
                              i1u607_21 004E                                i1u608_20 0064  
                              i1u608_21 0060                                i1u609_20 0072  
                              i1u609_21 006E                                i1u490_20 219A  
                              i1u490_21 2196                                i1u491_20 21AA  
                              i1u491_21 21A6                                i1u492_25 21F0  
                              i1u493_20 2228                                i1u549_20 3044  
                              i1u493_21 2222                                i1u549_21 3040  
                              i1u494_20 222A                                i2u600_40 1E78  
                              i2u600_41 1E74                                i2u513_40 2266  
                              i2u601_40 1E8C                                i2u513_41 2262  
                              i2u601_41 1E88                                _PIR1bits 0F9E  
                              i2u514_40 2276                                i2u602_40 1E9A  
                              i2u514_41 2272                                i2u602_41 1E96  
                              i2u603_40 1EA8                                i2u603_41 1EA4  
                              i2u515_45 22B8                                i2u516_40 22F0  
                              i2u604_40 1EBC                                i2u516_41 22EA  
                              i2u604_41 1EB8                                i2u517_40 22F2  
                              i2u605_40 1ECA                                i2u605_41 1EC6  
                              i2u570_40 3072                                i2u570_41 306E  
                              i2u571_48 3078                                i2u571_49 308A  
                              i2u594_40 1E1C                                i2u594_41 1E18  
                              i2u595_40 1E2A                                i2u595_41 1E26  
                              i2u596_40 1E3C                                i2u596_41 1E38  
                              i2u597_40 1E4A                                i2u597_41 1E46  
                              i2u598_40 1E5C                                i2u598_41 1E58  
                              i2u599_40 1E6A                                i2u599_41 1E66  
                              _RCONbits 0FD0       __end_of_ADC_get_conversion_result 2256  
                   __end_of_buzzer_init 312C                            ??_led_TOGGLE 001E  
                   ?_ADC_select_channel 001A                               _vfpfcnvrt 1632  
              _lcd_4bit_send_string_pos 2E50                              _ADCON0bits 0FC2  
                            _ADCON1bits 0FC1                              _ADCON2bits 0FC0  
                _INT2_INTERRUPT_HANDLER 004F                      __end_of_danger_msg 27A2  
               mcal_layer_intialize@ret 001D                  gpio_pin_initialize@ret 0021  
                 ?_mcal_layer_intialize 0001                             _led_turn_ON 25E8  
      ??_ADC_start_conversion_interrupt 0020         ?_ADC_start_conversion_interrupt 001E  
       __end_of_gpio_pin_direction_init 1ACC                             ADC_init@ret 001C  
                        led_turn_ON@led 0022                          led_turn_ON@ret 0024  
                            vfpfcnvrt@c 002B                 gpio_pin_write_logic@ret 001E  
                 ?_ADC_start_conversion 0017                             _INTCON2bits 0FF1  
                           _INTCON3bits 0FF0                ?_lcd_4bit_send_char_data 0026  
                             copy_data0 2ABA                               copy_data1 2ADA  
                   lcd_send_4bits@ret_0 0021                     lcd_send_4bits@ret_1 0022  
                   lcd_send_4bits@ret_2 0023                     lcd_send_4bits@ret_3 0024  
                  ??_ADC_select_channel 001C            ??_adc_input_channel_port_cfg 0018  
            led_turn_OFF@led_pin_config 0025                              ?_intro_msg 0001  
                    __end_of_led_TOGGLE 28B8                                __Hrparam 0000  
                       _buzzer_turn_off 30B6                          i2_INTI_ADC_ISR 305E  
                            vfprintf@ap 002E                                __Lrparam 0000  
                            vfprintf@fp 002C                           led_TOGGLE@led 001D  
                         led_TOGGLE@ret 001F                   ADC_select_channel@ret 001D  
           __end_of_ecu_layer_intialize 2F6C                  lcd_4bit_set_cursor@ret 002E  
                    buzzer_init@_buzzer 0022                              ?_vfpfcnvrt 0021  
                lcd_4bit_set_cursor@row 002A             __end_of_gpio_pin_initialize 2C28  
                   dc_motor_move_CW@ret 0020          gpio_pin_initialize@_pin_config 001F  
                            sprintf@fmt 0031                                ___xxtofl 17F2  
              ADC_start_conversion@_adc 0017                  buzzer_turn_off@_buzzer 001F  
                       ___lwdiv@divisor 0019                     _adc_set_voltage_ref 2B08  
                  _InterruptManagerHigh 0008         lcd_4bit_send_enable_signal@_lcd 001F  
                       ___lwdiv@counter 001D                                __ptext10 2E50  
                              __ptext11 2490                                __ptext20 253E  
                              __ptext12 2942                                __ptext21 31BE  
                              __ptext13 2C28                                __ptext30 2C84  
                              __ptext22 2F6C                                __ptext14 308C  
                              __ptext31 2F36                                __ptext23 23E0  
                              __ptext15 30B6                                __ptext40 1BE6  
                              __ptext32 28B8                                __ptext24 231C  
                              __ptext16 2D3C                                __ptext41 19A6  
                              __ptext33 1FC4                                __ptext25 2FD2  
                              __ptext17 2EFE                                __ptext42 17F2  
                              __ptext34 2CE0                                __ptext26 3180  
                              __ptext18 2DD0                                __ptext51 3030  
                              __ptext43 29C6                                __ptext35 2B6A  
                              __ptext27 318E                                __ptext19 1632  
                              __ptext60 31B6                                __ptext52 3168  
                              __ptext44 1CF6                                __ptext36 30E0  
                              __ptext28 1EE2                                __ptext61 31BA  
                              __ptext53 2186                                __ptext45 1042  
                              __ptext37 2A3A                                __ptext29 2B08  
                              __ptext62 0000                                __ptext54 31B2  
                              __ptext46 2FA0                                __ptext38 3106  
                              __ptext47 312C                                __ptext39 2BCA  
                              __ptext56 305E                                __ptext48 2D88  
                              __ptext57 319C                                __ptext49 20A6  
                              __ptext58 2256                                __ptext59 314E  
                              _led_init 28B8                  __end_ofi2_INTI_ADC_ISR 308C  
                           _buzzer_init 3106               _RB6_INTERRUPT_LOW_HANDLER 0043  
         __end_of_adc_interrupt_handler 3180                    ?_adc_set_voltage_ref 0017  
      __end_of_convert_uint16_to_string 2D88                                isa$xinst 0000  
                              int$flags 0069            __end_of_lcd_4bit_send_string 29C6  
                              _vfprintf 2DD0                          _lcd_send_4bits 2B6A  
          ADC_get_conversion_result@ret 000F                      lcd_send_4bits@_lcd 001F  
                ??_mcal_layer_intialize 001D                              _INTCONbits 0FF2  
           __end_of_lcd_4bit_initialize 20A6                   ?_InterruptManagerHigh 0001  
                        _buzzer_turn_on 308C                  ??_ADC_start_conversion 0018  
          __end_of_gpio_pin_write_logic 1CF6                ?i2_adc_interrupt_handler 0001  
                              intlevel1 0000                                intlevel2 0000  
                             sprintf@ap 00E6                 ADC_start_conversion@ret 0018  
               __end_of_buzzer_turn_off 30E0                     _InterruptManagerLow 0018  
        lcd_4bit_send_enable_signal@ret 0020                             ??_intro_msg 002F  
                       ?i2_INTI_ADC_ISR 0001                   _adc_set_result_format 2C84  
                 ??_adc_set_voltage_ref 0018             ??_ADC_get_conversion_result 000C  
                __end_of_lcd_send_4bits 2BCA                   _gpio_pin_toggle_logic 27A2  
 ADC_start_conversion_interrupt@channel 001F                             ??_vfpfcnvrt 0024  
           __end_of_lcd_4bit_set_cursor 253E                    ?_InterruptManagerLow 0001  
             application_initialize@ret 002E                __end_of_dc_motor_move_CW 2EFE  
                              sprintf@f 00E7                                sprintf@s 0030  
                __end_of_buzzer_turn_on 30B6                          _port_registers 008C  
            _RB4_INTERRUPT_HIGH_HANDLER 004D                  led_init@led_pin_config 0025  
            gpio_pin_direction_init@ret 001D              _RB7_INTERRUPT_HIGH_HANDLER 0041  
           lcd_4bit_send_char_data@_lcd 0026             lcd_4bit_send_char_data@data 0027  
               lcd_4bit_initialize@_lcd 0029                   __end_of_dc_motor_init 2AA6  
                 __end_of_dc_motor_stop 2EC6              ??_lcd_4bit_send_string_pos 0034  
                lcd_4bit_initialize@ret 002C  
